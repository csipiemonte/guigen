/**
 * <copyright>
 * (C) Copyright 2011 CSI-PIEMONTE;

 * Concesso in licenza a norma dell'EUPL, esclusivamente versione 1.1;
 * Non e' possibile utilizzare l'opera salvo nel rispetto della Licenza.
 * E' possibile ottenere una copia della Licenza al seguente indirizzo:
 *
 * http://www.eupl.it/opensource/eupl-1-1
 *
 * Salvo diversamente indicato dalla legge applicabile o concordato per 
 * iscritto, il software distribuito secondo i termini della Licenza e' 
 * distribuito "TAL QUALE", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO,
 * esplicite o implicite.
 * Si veda la Licenza per la lingua specifica che disciplina le autorizzazioni
 * e le limitazioni secondo i termini della Licenza.
 * </copyright>
 *
 * $Id$
 */

import guigen;
import ecore;
extension template::GenericExtensions;
extension template::struts2::Struts2Extensions;
extension template::struts2::bootstrap::Struts2ExtensionsNeutral;


/////////////////////////////////////////////////////////////////////////////////////////////////
/// Estensioni specifiche per il layout BOOTSTRAP (HTML5+Bootstrap) ridefinite mediante AOP   //
/////////////////////////////////////////////////////////////////////////////////////////////////

// [DM] STDMDD-1123: disabilitazione/rimozione delle cartucce differenti dalla 
around template::GenericExtensions::isValidPortal(String portal) :
	true;

around template::GenericExtensions::getPortalName() :
	"Responsive";


///////////////////////////////////////////////////////////////////////////////////////////////
/// Build files 

around template::struts2::Struts2Extensions::getReminclResourceProvider(GUIModel model) :
	getReminclResourceProviderResponsive(model);



///////////////////////////////////////////////////////////////////////////////////////////////
/// PORTAL THEMES AND STYLES

//
around template::struts2::Struts2Extensions::getStrutsThemeByPortal(GUIModel model) :
	getStrutsThemeByPortalResponsive(model);

//
around template::struts2::Struts2Extensions::getTablePortalStyle(GUIModel model, Table t) :
	getTablePortalStyleResponsive(model, t);

//
around template::struts2::Struts2Extensions::getRadioPortalStyle(GUIModel model) :
	getRadioPortalStyleResponsive(model);

// [DM] restituisce il numero di colonne del layout
around template::struts2::Struts2Extensions::getColumnsLayout(FormPanel firstLevPanel, GUIModel model) :
	getColumnsLayoutResponsive(firstLevPanel, model);

// [DM] Restituisce lo stile del <div> per i Button
around template::struts2::Struts2Extensions::getButtonDivStyleByLayout(GUIModel model, Button b) : 
	getButtonDivStyleByLayoutResponsive(model, b);

// [DM] Restituisce lo stile dei Button
around template::struts2::Struts2Extensions::getButtonStyleByLayout(GUIModel model, Button b) :
	getButtonStyleByLayoutResponsive(model, b);

// [DM] Restituisce lo stile dei TextField
around template::struts2::Struts2Extensions::getTextFieldStyleByLayout(GUIModel model, TextField t) :
	getTextFieldStyleByLayoutResponsive(model, t);

// [DM] Restituisce lo stile dei Calendar
around template::struts2::Struts2Extensions::getCalendarStyleByLayout(GUIModel model, Calendar c) :
	getCalendarStyleByLayoutResponsive(model, c);

// [DM] Restituisce (ove necessaria) l'immagine per l'apertura dei Calendar
//      Qui non inseriamo un'immagine, ma un marcatore che possa essere utilizzato per vari scopi
around template::struts2::Struts2Extensions::getCalendarImageByLayout(GUIModel model, Calendar c) :
	getCalendarImageByLayoutResponsive(model, c);

// [DM] Restituisce lo stile dei FileUpload
around template::struts2::Struts2Extensions::getFileUploadStyleByLayout(GUIModel model, FileUpload f) :
	getFileUploadStyleByLayoutResponsive(model, f);

// [DM] Restituisce lo stile del pulsante che gestisce l'evento di ValueChanged sulla ComboBox (Javascript disabilitato)
around template::struts2::Struts2Extensions::getComboBoxValueChangedHandlerStyle(GUIModel model) :
	getComboBoxValueChangedHandlerStyleResponsive(model);

// [DM] Restituisce lo stile di un MsgBoxPanel
around template::struts2::Struts2Extensions::getMsgBoxPanelStyleByPortal(GUIModel model, MsgBoxPanel mbp) :
	getMsgBoxPanelStyleByPortalResponsive(model, mbp);

// [DM] Restituisce lo stile di una colonna sulla base del tipo bindato alla colonna stessa
around template::struts2::Struts2Extensions::getColumnStyle(Column col, Table t, GUIModel model) :
	getColumnStyleResponsive(col, t, model);

// [DM]  Restituisce la classe per un CheckBox
// nota: deve rimanere in Java perch� viene utilizzato anche da Java
around template::struts2::Struts2Extensions::getCheckboxPortalStyle(GUIModel model) :
	getCheckboxPortalStyleResponsive(model);

// [DM] Restituisce la classe da applicare ad una cella nella CustomComponent sulla base del tipo di dato del Widget (PlainText).
//      Utilizzato per allineare a destra i dati numerici.
around template::struts2::Struts2Extensions::getCustomComponentColumnStyleByPortal(GUIModel model, PlainText w) :
	getCustomComponentColumnStyleByPortalResponsive(model, w);

// [DM] Restituisce la classe per un TextField in una Table.
// nota: deve rimanere in Java perch� viene utilizzato anche da Java 
around template::struts2::Struts2Extensions::getColumnEditableTextfieldPortalStyle(GUIModel model) :
	getColumnEditableTextfieldPortalStyleResponsive(model);

// [DM] restituisce l'attributo di obbligatoriet� del campo da settare nella custom Component widgetsPanelColumn
around template::struts2::Struts2Extensions::getCustomtagRequiredField(Widget w) : 
	getCustomtagRequiredFieldResponsive(w);

// [DM] Imposta l'attributo colSpan della Customtag component (nel caso sia necessario).
around template::struts2::Struts2Extensions::getCustomtagHeaderColspan(WidgetsPanel wp, Widget w) :
	getCustomtagHeaderColspanResponsive(wp, w);

// [DM] Restituisce il campo per l'editabilit� di una colonna della tabella
around template::struts2::Struts2Extensions::getColumnEditableField(Column currCol, Table table, GUIModel model, String contextPrefix, PDefUseConfig pduConf, String theme) :
	getColumnEditableFieldResponsive(currCol, table, model, contextPrefix, pduConf, theme);

// [DM] STDMDD-823: WizardPanel: numerazione automatica degli step
around template::struts2::Struts2Extensions::getWizardPanelStepCompleteIndex(Panel currentPanel, String index) :
	getWizardPanelStepCompleteIndexResponsive(currentPanel, index);


///////////////////////////////////////////////////////////////////////////////////////////////
/// EVENT HANDLERS

// [DM] genera il codice che gestisce l'evento change sulla combobox con JavaScript abilitato (bisogna includere il file pulsantiPadreFiglio.js)
around template::struts2::Struts2Extensions::getComboBoxValueChangedHandlerJS(ComboBox cb, GUIModel model, ContentPanel cp, String contextPrefix) :
	getComboBoxValueChangedHandlerJSResponsive(cb, model, cp, contextPrefix);

// [DM] genera il codice che gestisce l'evento change sulla combobox (con JavaScript disabilitato)
// [DM] STDMDD-1084: rimozione noscript
around template::struts2::Struts2Extensions::getComboBoxValueChangedHandlerNoScript(ComboBox cb, GUIModel model, ContentPanel cp, String contextPrefix) :
	""; //getComboBoxValueChangedHandlerNoScriptResponsive(cb, model, cp, contextPrefix);

// [DM] genera il codice che gestisce l'evento change sui radiobuttons con JavaScript abilitato
around template::struts2::Struts2Extensions::getRadioButtonsValueChangedHandlerJS(RadioButtons rb, GUIModel model, ContentPanel cp, String contextPrefix) :
	getRadioButtonsValueChangedHandlerJSResponsive(rb, model, cp, contextPrefix);

// [DM] genera il codice che gestisce l'evento change sui radiobuttons (con JavaScript disabilitato)
// [DM] STDMDD-1084: rimozione noscript
around template::struts2::Struts2Extensions::getRadioButtonsValueChangedHandlerNoScript(RadioButtons rb, GUIModel model, ContentPanel cp, String contextPrefix) :
	""; //getRadioButtonsValueChangedHandlerNoScriptResponsive(rb, model, cp, contextPrefix);



///////////////////////////////////////////////////////////////////////////////////////////////
/// Estensioni abilitanti al Web 2.0 (ridefinite solo qui)

around template::struts2::Struts2Extensions::getFragmentId(Panel p) :
	getFragmentIdResponsive(p);

around template::struts2::Struts2Extensions::startFragment(Panel p) :
	startFragmentResponsive(p);

around template::struts2::Struts2Extensions::endFragment(Panel p) :
	endFragmentResponsive(p);

around template::struts2::Struts2Extensions::pageIdMarker(ContentPanel cp) :
	pageIdMarkerResponsive(cp);

