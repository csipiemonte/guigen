«REM»
C) Copyright 2011 CSI-PIEMONTE;                                             
                                                                            
Concesso in licenza a norma dell'EUPL, esclusivamente versione 1.1;         
Non e' possibile utilizzare l'opera salvo nel rispetto della Licenza.       
E' possibile ottenere una copia della Licenza al seguente indirizzo:        
                                                                            
http://www.eupl.it/opensource/eupl-1-1                                      
                                                                            
Salvo diversamente indicato dalla legge applicabile o concordato per        
iscritto, il software distribuito secondo i termini della Licenza e'        
distribuito "TAL QUALE", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO,         
esplicite o implicite.                                                      
Si veda la Licenza per la lingua specifica che disciplina le autorizzazioni 
e le limitazioni secondo i termini della Licenza.                           
«ENDREM»

«IMPORT guigen»

«IMPORT template::struts2::resourcefiles»

«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::struts2::bootstrap::Struts2ExtensionsNeutral»


«REM»
**************************************************************************************************************************
Ridefinizione mediante AOP dei DEFINE specifici per il layout RESPONSIVE (autoconsistente)
**************************************************************************************************************************
«ENDREM»


«REM»
************** FormPanel **************
«ENDREM»

«REM»Genera un FormPanel con layout UDLRC«ENDREM»
«DEFINE setupFormPanelUDLRC(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp, boolean expandLayout, UDLRCSpecConstants quadrante, String contextPrefix, PDefUseConfig pduConf, boolean isPortlet) FOR FormPanel»

«LET (List[Panel])getSubPanelsByLayout(this, UDLRCSpecConstants::LEFT) AS leftPanels-»
«LET (List[Panel])getSubPanelsByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanels-»
«LET (List[Panel])getSubPanelsByLayout(this, UDLRCSpecConstants::RIGHT) AS rightPanels-»
<div class="«getLeftCenterRightWrapperId(leftPanels, centerPanels, rightPanels).toFirstLower()»Wrapper">	
	«REM»Genera i sottopannelli posizionati a SINISTRA«ENDREM»
	«IF leftPanels != null && leftPanels.size > 0-»
	<div class="formPanel floatLeft">
	«FOREACH leftPanels AS currSubformLeft-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, true, quadrante, contextPrefix, pduConf, isPortlet) FOR currSubformLeft»
	«ENDFOREACH-»	
	</div>
	«ENDIF-»
	
	«REM»Genera i sottopannelli posizionati al CENTRO«ENDREM»
	«IF centerPanels != null && centerPanels.size > 0-»
	<div class="formPanel floatCenter">
	«FOREACH centerPanels AS currSubformCenter-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, true, quadrante, contextPrefix, pduConf, isPortlet) FOR currSubformCenter»
	«ENDFOREACH-»
	</div>
	«ENDIF-»	

	«REM»Genera i sottopannelli posizionati a DESTRA«ENDREM»
	«IF rightPanels != null && rightPanels.size > 0-»
	<div class="formPanel floatRight">
	«FOREACH rightPanels AS currSubformRight-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, true, quadrante, contextPrefix, pduConf, isPortlet) FOR currSubformRight»
	«ENDFOREACH-»	
	</div>
	«ENDIF-»	
</div>
«ENDLET-»
«ENDLET-»	
«ENDLET-»

«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei Widget
==========================================================================================================================
«ENDREM»

«REM»Crea i Widgets contenuti in un CommandPanel.«ENDREM»
«DEFINE createWidgets(GUIModel model, ContentPanel cp, String contextPrefix, PDefUseConfig pduConf, boolean isPortlet) FOR CommandPanel»
	«IF this.layout.metaType == HorizontalFlowPanelLayout-»
		«EXPAND createWidgetsForHorizontalLayout(model, cp, contextPrefix, pduConf, isPortlet) FOR this»
	«ELSEIF this.layout.metaType == UDLRCPanelLayout-»
		«EXPAND createWidgetsForUDLRCLayout(model, cp, contextPrefix, pduConf, isPortlet) FOR this»
	«ENDIF-»
«ENDDEFINE»



«REM»Crea i Widgets contenuti in un CommandPanel con HorizontalFlowPanelLayout.«ENDREM»
«DEFINE createWidgetsForHorizontalLayout(GUIModel model, ContentPanel cp, String contextPrefix, PDefUseConfig pduConf, boolean isPortlet) FOR CommandPanel»
	«FOREACH this.widgets AS currWidg ITERATOR wi-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddWidgetMarkup(model, cp, this, wi.firstIteration, wi.lastIteration, contextPrefix, pduConf, isPortlet) FOR (Button)currWidg»
	«ENDFOREACH-»
«ENDDEFINE»


«REM»Crea i Widgets contenuti in un CommandPanel con HorizontalFlowPanelLayout.«ENDREM»
«DEFINE createWidgetsForUDLRCLayout(GUIModel model, ContentPanel cp, String contextPrefix, PDefUseConfig pduConf, boolean isPortlet) FOR CommandPanel»

	«REM»Pulsanti posizionati a SINISTRA«ENDREM»
	«LET (List[Button])getButtonsByUDLRCPosition(this, UDLRCSpecConstants::LEFT) AS leftButtons»
	«IF leftButtons != null && leftButtons.size > 0»
	<div class="form-group puls-group pull-left">
	«FOREACH leftButtons AS currWidg ITERATOR wi-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddWidgetMarkup(model, cp, this, wi.firstIteration, wi.lastIteration, contextPrefix, pduConf, isPortlet) FOR currWidg»
	«ENDFOREACH-»
	</div>
	«ENDIF»
	«ENDLET»

	«REM»Pulsanti posizionati al CENTRO«ENDREM»
	«LET (List[Button])getButtonsByUDLRCPosition(this, UDLRCSpecConstants::CENTER) AS centerButtons»
	«IF centerButtons != null && centerButtons.size > 0»
	<div class="form-group puls-group center">
	«FOREACH centerButtons AS currWidg ITERATOR wi-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddWidgetMarkup(model, cp, this, wi.firstIteration, wi.lastIteration, contextPrefix, pduConf, isPortlet) FOR currWidg»
	«ENDFOREACH-»
	</div>
	«ENDIF»
	«ENDLET»

	«REM»Pulsanti posizionati a DESTRA«ENDREM»
	«LET (List[Button])getButtonsByUDLRCPosition(this, UDLRCSpecConstants::RIGHT) AS rightButtons»
	«IF rightButtons != null && rightButtons.size > 0»
	<div class="form-group puls-group pull-right">
	«FOREACH rightButtons AS currWidg ITERATOR wi-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddWidgetMarkup(model, cp, this, wi.firstIteration, wi.lastIteration, contextPrefix, pduConf, isPortlet) FOR currWidg»
	«ENDFOREACH-»
	</div>
	«ENDIF»
	«ENDLET»
	
	«REM»Altri Widgets (dovrebbero essere solo HiddenValue secondo check)«ENDREM»
	«LET this.widgets.select(e|e.metaType == HiddenValue) AS otherWidgets»
	«IF otherWidgets != null && otherWidgets.size > 0»
	<div class="hidden">
	«FOREACH otherWidgets AS currWidg ITERATOR wi-»
		«EXPAND template::struts2::view::resourcefiles::createAndAddWidgetMarkup(model, cp, this, wi.firstIteration, wi.lastIteration, contextPrefix, pduConf, isPortlet) FOR (Button)currWidg»
	«ENDFOREACH-»
	</div>
	«ENDIF»
	«ENDLET»

«ENDDEFINE»
