«IMPORT guigen»

«IMPORT template::struts2::resourcefiles»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::struts2::sisp::Struts2ExtensionsSisp»


«REM»
**************************************************************************************************************************
Markup HTML per SISTEMA PIEMONTE
Riferimenti:
	- Pattern Sistema Piemonte (http://dev-www.sistemapiemonte.it/sandbox/templates/repository/pattern/index.shtml)
	- Reference implementation su Efesto (http://dev-proxy.csi.it:10080/refimplsisp/)
**************************************************************************************************************************
«ENDREM»


«REM»
==========================================================================================================================
Definizioni generali: Pagine di ERRORE
==========================================================================================================================
«ENDREM»

«REM»Crea la pagina di errore 404 (Page Not Found) -> NO STRUTS«ENDREM»
«DEFINE getJspPageNotFoundError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<h3><fmt:message key="error.notfound.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		<fmt:message key="error.notfound.warning" /> <br/> <fmt:message key="error.notfound.message" />
	</div>
	<div class="pulsNav">
		<div class="pulsNavDx">
			<a href="HomePage.do" title="<fmt:message key="error.notfound.btnmsg" />" class="nav95"><fmt:message key="error.notfound.btnmsg" /></a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore 500 (Internal Server Error) -> NO STRUTS«ENDREM»
«DEFINE getJspFatalError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<h3><fmt:message key="error.fatalerror.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		<fmt:message key="error.fatalerror.warning" /> <br/> <fmt:message key="error.fatalerror.message" />
	</div>
	<div class="pulsNav">
		<div class="pulsNavDx">
			<a href="HomePage.do" title="<fmt:message key="error.fatalerror.btnmsg" />" class="nav95"><fmt:message key="error.fatalerror.btnmsg" /></a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per le ApplicationError (Runtime) [java.lang.RuntimeException]«ENDREM»
«DEFINE getJspApplicationError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderStruts FOR this-»
<h3><s:text name="error.applicationerror.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		<s:text name="error.applicationerror.warning" /> <s:text name="error.applicationerror.message" /><br/>
		<s:property value="%{exception.message}"/>
	</div>
	<div class="pulsNav">
		<div class="pulsNavDx">
			<s:url id="homePageUrl" action="HomePage" />
			<s:a href="%{homePageUrl}" title="%{getText('error.applicationerror.btnmsg')" cssClass="nav95"><s:text name="error.applicationerror.btnmsg" /></s:a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooterStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per errore da Sessione scaduta -> NO STRUTS«ENDREM»
«DEFINE getJspPageSessionExpiredFile FOR GUIModel»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<h3><fmt:message key="error.sessionexpired.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		<fmt:message key="error.sessionexpired.warning" /><br/>
		<fmt:message key="error.sessionexpired.timeout" /><br/>
		<span>
			<fmt:message key="error.sessionexpired.datanotsaved" /><br/>
			<fmt:message key="error.sessionexpired.authentication" />
		</span>
	</div>
	<div class="pulsNav">
		<div class="pulsNavSx">
			<a href="http://www.sistemapiemonte.it/" title="<fmt:message key="error.sessionexpired.btnmsgportalhome" />" class="nav205"><fmt:message key="error.sessionexpired.btnmsgportalhome" /></a>
		</div>
		<div class="pulsNavDx">
			<a href="HomePage.do" title="<fmt:message key="error.sessionexpired.btnmsgservicehome" />" class="nav95"><fmt:message key="error.sessionexpired.btnmsgservicehome" /></a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di conferma chiusura sessione utente«ENDREM»
«DEFINE getJspPageConfirmLogoutFile(boolean skip_component_dir_creation) FOR GUIModel»
«REM» TODO: implementare SE NECESSARIO
«FILE getJspErrorPagesDir(this, true) + "/confirmLogout.jsp"-»
«EXPAND getJspErrorPageHeaderStruts FOR this-»
<!-- CONTENUTI -->
«EXPAND getJspErrorPageFooterStruts FOR this-»
«ENDFILE»
«ENDREM»
«ENDDEFINE»



«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeaderStruts FOR GUIModel-»<%@ taglib uri="/struts-tags" prefix="s" %>
	«IF this.structure.appWindow.header != null-»
	<s:include value="../fragments/header.jsp" ></s:include>
	«ENDIF-»

	<!-- ####################### PANNELLO CONTENUTI ###################### -->
	<div id="sfondoColonna">

		<!-- =============== COLONNA UNICA ============== -->
		<div id="colonna">
			<h2 class="alt">contenuti</h2>
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooterStruts FOR GUIModel-»
		</div>
		<!-- ============ FINE COLONNA UNICA ============ -->

	</div>
	<!-- #################### FINE PANNELLO CONTENUTI #################### -->

	«IF this.structure.appWindow.footer != null-»
	<s:include value="../fragments/footer.jsp" ></s:include>
	«ENDIF-»
«ENDDEFINE»


«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeaderNoStruts FOR GUIModel-»<%@ taglib uri="http://java.sun.com/jstl/fmt" prefix="fmt" %>

<fmt:setBundle basename="globalMessages" />

	«IF this.structure.appWindow.header != null-»
	<jsp:include page="/jsp/fragments/headerNoStruts.jsp" />
	«ENDIF-»

	<!-- ####################### PANNELLO CONTENUTI ###################### -->
	<div id="sfondoColonna">

		<!-- =============== COLONNA UNICA ============== -->
		<div id="colonna">
			<h2 class="alt">contenuti</h2>
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooterNoStruts FOR GUIModel-»
		</div>
		<!-- ============ FINE COLONNA UNICA ============ -->

	</div>
	<!-- #################### FINE PANNELLO CONTENUTI #################### -->

	«IF this.structure.appWindow.footer != null-»
	<jsp:include page="/jsp/fragments/footer.jsp" />
	«ENDIF-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Definizioni generali: header, footer, ecc
==========================================================================================================================
«ENDREM»

«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Header -»
<r:include url="/ris/include/«IF !isNullOrEmpty(codCanale)»«codCanale»/«ENDIF»«IF !isNullOrEmpty(codApplicativo)»«codApplicativo»/«ENDIF»head.html" resourceProvider="sp" />
<!-- fine head (con remincl) -->
«REM»RIMOSSO: implementata REMINCL
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--head (senza remincl: TMP)-->
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
		<title>Sistema Piemonte - Area Tematica - Nome servizio</title>
		<meta name="author" content="CSI-Piemonte" />
		<meta name="description" content="Sistema Piemonte il portale per cittadini ed imprese" />
		<meta name="keywords" content="piemonte, servizi, cittadini, imprese, sistema, amministrazione" />

		<link type="text/css" href="<%=request.getContextPath()%>/css/area/area.css" rel="stylesheet" media="screen" />
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/struttura800dueCol.css" title="plain"/>
		<link rel="alternate stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/strutturaFluidodueCol.css" title="fluido" />
		<link rel="alternate stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/struttura800dueCol.css" title="standard" />
		<link href="<%=request.getContextPath()%>/css/tab_righeAlterne.css" rel="stylesheet" type="text/css" media="screen" />
		<link href="<%=request.getContextPath()%>/css/paginazione.css" rel="stylesheet" type="text/css" media="screen" />

		<script type="text/javascript" src="<%=request.getContextPath()%>/sandbox/templates/repository/pattern/javascript/changeStyle.js"></script>
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/generaliV3/jquery/jqsisp-0.9.pack.js"></script>
		<script type="text/javascript" src="<%=request.getContextPath()%>/js/lib.js"></script>

<!--/head -->
«ENDREM»

		<script type="text/javascript" src="/ris/js/generaliV3/pulsantiPadreFiglio.js"></script>

		<script type="text/javascript">
			// event handler RadioButtons
			function onRBClick(url) {
		        document.forms[0].action = url;
		        document.forms[0].submit();
			}

			// disabilitazione calendario
			jQuery(document).ready(function(){
				jQuery('.calendario:disabled').datepicker('disable');
			});// chiusura function ready
		</script>

		«IF model.targetPlatform.enableRichUIBehavior-»<customtag:ajaxify-header />«ENDIF-»
	</head>
	<body class="tema-«IF !isNullOrEmpty(codCanale)»«codCanale»«ELSE»generale«ENDIF»">

		<!-- PAGINA (ATTENZIONE: verra' chiusa nella footer (remincl) -->
		<div id="pagina" class="colonnaUnica">

			<!-- TESTATA -->
			<div id="intestazione">

				<!-- header (con remincl) -->
				<r:include url="/ris/include/headerSisp.html" resourceProvider="sp" />
				<!-- fine header (con remincl) -->

				«REM»RIMOSSO: implementata REMINCL
				<!--header (senza remincl: TMP)-->
				<p id="avviso" class="navigazionePagina">
					<a href="#contPath" id="A-inizio"
						title="Salta i menu e vai direttamente ai contenuti" tabindex="1">Salta
						l&#8217;intestazione</a><span class="alt">|</span>
				</p>
				<div id="logo">
					<h1 class="alt">
						<a href="http://www.sistemapiemonte.it/"
							title="Home page SistemaPiemonte">Sistema Piemonte</a>
					</h1>
				</div>
				<div id="scritta">
					<span class="alt"> - <a
						href="http://www.sistemapiemonte.it/"
						title="Home page SistemaPiemonte">l'amministrazione pubblica
							al tuo servizio</a> </span>
				</div>
				<hr />
				<p class="navigazionePagina">
					<a href="#colonnaDestra" title="vai direttamente ai contenuti">vai
						ai contenuti</a> |
					<a href="#sfondo" title="vai al menu della sezione">vai al menu
						della sezione</a>
				</p>
				<hr />
				<div id="sisp">
				</div>

				<div id="menuDiServizio">
					<p class="navigazionePagina">Sistema piemonte - menu di navigazione</p>
					<ul class="menuTendinaOrizz" id="menu-1">
						<li><a href="http://www.sistemapiemonte.it/index.shtml">home</a></li>
						<li><a href="http://www.sistemapiemonte.it/servizi/">indice servizi</a></li>
						<li><a href="http://www.sistemapiemonte.it/informazioni/">informazioni</a></li>
						<li><a href="http://search.sistemapiemonte.it/mrceli/searchsp">cerca</a></li>
						<li><a href="http://webmail.sistemapiemonte.it/">posta</a></li>
						<!-- <li><a href="#">profilo personale</a></li> -->
					</ul>
				</div>

				<noscript>
					<div id="avvisoJavascript">
						<p>
							<strong>ATTENZIONE - Il browser in uso non supporta le applicazioni Javascript.</strong>
							<br />
							Per poter usufruire in maniera completa dei servizi presenti in
							SistemaPiemonte, &eacute; necessario utilizzare un browser che
							supporti le funzioni Javascript.
						</p>
					</div>
				</noscript>
				<hr />
				<!--/header (senza remincl: TMP)-->
				«ENDREM»

				«IF model.securityModel!=null-»
				«LET ((List[ApplicationData])getAllApplicationData(model)).select(ad|ad.name=="currentUser").first() AS currentUserAD-»
				<div id="contUtenza">
					<div id="Utenza">
						<s:text name="header.userinfo.head.label" />
						<strong><s:property value="«getAppDataKey(currentUserAD)».nome" /> <s:property value="«getAppDataKey(currentUserAD)».cognome" /></strong>&nbsp;
						<s:url id="ssoLogoutUrl" action="Logout" method="ssoLogout" />
						<span class="logout"><s:a href="%{ssoLogoutUrl}" title="esci: questo link fa uscire dal servizio"><s:text name="header.ssologout.label" /></s:a></span>
					</div>
				</div>
				«ENDLET-»
				«ENDIF-»
				<!-- filo d'arianna canale -->
				<div id="contPath">
					<div id="path">
						<s:text name="header.filoarianna.head.label" />
						<a href="http://www.sistemapiemonte.it/index.shtml">sistema piemonte</a><span class="connessionePath">,&nbsp;</span>
						<a href="«this.linkCanale»"><s:text name="header.canale.nome.label" /></a><span class="connessionePath">,&nbsp;</span>
						<span class="selezione"><s:text name="header.applicativo.nome.label" /></span>
					</div>
				</div>
				<hr />
				<!-- fine filo arianna canale -->

				<div id="contTitoloEmenu">
					<div id="titoloEmenu" class="nomeServizio">
						<a href="#"><span class="txtHidden"><s:text name="header.nomeservizio.label" /></span>
						</a>
					</div>
				</div>
			</div>
			<!-- FINE TESTATA -->

			<hr />

			<!-- CONTENITORE + CORPO -->
			<div id="contenitore">
				<div id="corpo">
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkupNoStruts(GUIModel model, boolean skip_component_dir_creation) FOR Header -»
<r:include url="/ris/include/«IF !isNullOrEmpty(codCanale)»«codCanale»/«ENDIF»«IF !isNullOrEmpty(codApplicativo)»«codApplicativo»/«ENDIF»head.html" resourceProvider="sp" />
<!-- fine head (con remincl) -->
«REM»RIMOSSO: implementata REMINCL
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--head (senza remincl: TMP)-->
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
		<title>Sistema Piemonte - Area Tematica - Nome servizio</title>
		<meta name="author" content="CSI-Piemonte" />
		<meta name="description" content="Sistema Piemonte il portale per cittadini ed imprese" />
		<meta name="keywords" content="piemonte, servizi, cittadini, imprese, sistema, amministrazione" />

		<link type="text/css" href="<%=request.getContextPath()%>/css/area/area.css" rel="stylesheet" media="screen" />
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/struttura800dueCol.css" title="plain"/>
		<link rel="alternate stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/strutturaFluidodueCol.css" title="fluido" />
		<link rel="alternate stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/struttura800dueCol.css" title="standard" />
		<link href="<%=request.getContextPath()%>/css/tab_righeAlterne.css" rel="stylesheet" type="text/css" media="screen" />
		<link href="<%=request.getContextPath()%>/css/paginazione.css" rel="stylesheet" type="text/css" media="screen" />

		<script type="text/javascript" src="<%=request.getContextPath()%>/sandbox/templates/repository/pattern/javascript/changeStyle.js"></script>
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/generaliV3/jquery/jqsisp-0.9.pack.js"></script>
		<script type="text/javascript" src="<%=request.getContextPath()%>/js/lib.js"></script>

<!--/head -->
«ENDREM»

		<script type="text/javascript" src="/ris/js/generaliV3/pulsantiPadreFiglio.js"></script>
		<customtag:ajaxify-header />
	</head>
	<body class="tema-«IF !isNullOrEmpty(codCanale)»«codCanale»«ELSE»generale«ENDIF»">

		<!-- PAGINA (ATTENZIONE: verra' chiusa nella footer (remincl) -->
		<div id="pagina" class="colonnaUnica">

			<!-- TESTATA -->
			<div id="intestazione">

				<!-- header (con remincl) -->
				<r:include url="/ris/include/headerSisp.html" resourceProvider="sp" />
				<!-- fine header (con remincl) -->

				«REM»RIMOSSO: implementata REMINCL
				<!--header (senza remincl: TMP)-->
				<p id="avviso" class="navigazionePagina">
					<a href="#contPath" id="A-inizio"
						title="Salta i menu e vai direttamente ai contenuti" tabindex="1">Salta
						l&#8217;intestazione</a><span class="alt">|</span>
				</p>
				<div id="logo">
					<h1 class="alt">
						<a href="http://www.sistemapiemonte.it/"
							title="Home page SistemaPiemonte">Sistema Piemonte</a>
					</h1>
				</div>
				<div id="scritta">
					<span class="alt"> - <a
						href="http://www.sistemapiemonte.it/"
						title="Home page SistemaPiemonte">l'amministrazione pubblica
							al tuo servizio</a> </span>
				</div>
				<hr />
				<p class="navigazionePagina">
					<a href="#colonnaDestra" title="vai direttamente ai contenuti">vai
						ai contenuti</a> |
					<a href="#sfondo" title="vai al menu della sezione">vai al menu
						della sezione</a>
				</p>
				<hr />
				<div id="sisp">
				</div>

				<div id="menuDiServizio">
					<p class="navigazionePagina">Sistema piemonte - menu di navigazione</p>
					<ul class="menuTendinaOrizz" id="menu-1">
						<li><a href="http://www.sistemapiemonte.it/index.shtml">home</a></li>
						<li><a href="http://www.sistemapiemonte.it/servizi/">indice servizi</a></li>
						<li><a href="http://www.sistemapiemonte.it/informazioni/">informazioni</a></li>
						<li><a href="http://search.sistemapiemonte.it/mrceli/searchsp">cerca</a></li>
						<li><a href="http://webmail.sistemapiemonte.it/">posta</a></li>
						<!-- <li><a href="#">profilo personale</a></li> -->
					</ul>
				</div>

				<noscript>
					<div id="avvisoJavascript">
						<p>
							<strong>ATTENZIONE - Il browser in uso non supporta le applicazioni Javascript.</strong>
							<br />
							Per poter usufruire in maniera completa dei servizi presenti in
							SistemaPiemonte, &eacute; necessario utilizzare un browser che
							supporti le funzioni Javascript.
						</p>
					</div>
				</noscript>
				<hr />
				<!--/header (senza remincl: TMP)-->
				«ENDREM»

				«IF model.securityModel!=null-»
				«LET ((List[ApplicationData])getAllApplicationData(model)).select(ad|ad.name=="currentUser").first() AS currentUserAD-»
				<div id="contUtenza">
					<div id="Utenza">
						<fmt:message key="header.userinfo.head.label" />
						<strong><%-- impossibile visualizzare l'utente --%></strong>&nbsp;
						<span class="logout"><a href="Logout!ssoLogout.do" title="esci: questo link fa uscire dal servizio"><fmt:message key="header.ssologout.label" /></a></span>
					</div>
				</div>
				«ENDLET-»
				«ENDIF-»
				<!-- filo d'arianna canale -->
				<div id="contPath">
					<div id="path">
						<fmt:message key="header.filoarianna.head.label" />
						<a href="http://www.sistemapiemonte.it/index.shtml">sistema piemonte</a><span class="connessionePath">,&nbsp;</span>
						<a href="«this.linkCanale»"><fmt:message key="header.canale.nome.label" /></a><span class="connessionePath">,&nbsp;</span>
						<span class="selezione"><fmt:message key="header.applicativo.nome.label" /></span>
					</div>
				</div>
				<hr />
				<!-- fine filo arianna canale -->

				<div id="contTitoloEmenu">
					<div id="titoloEmenu" class="nomeServizio">
						<a href="#"><span class="txtHidden"><fmt:message key="header.nomeservizio.label" /></span>
						</a>
					</div>
				</div>
			</div>
			<!-- FINE TESTATA -->

			<hr />

			<!-- CONTENITORE + CORPO -->
			<div id="contenitore">
				<div id="corpo">
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) dei LINK STATICI.
TODO: capire cosa sono e come vadano realmente implementati realmente.«ENDREM»
«DEFINE getStaticLinkMarkup(GUIModel model, boolean skip_component_dir_creation) FOR StaticLinks»
«LET model.structure.appWindow.header.codCanale AS codCanale»
«LET model.structure.appWindow.header.codApplicativo AS codApplicativo»
<!-- STATIC LINK -->
<%@ taglib uri="http://www.csi.it/taglibs/remincl-1.0" prefix="r"%>
<%@ taglib uri="http://java.sun.com/jstl/core" prefix="c" %>
<c:catch var="ex">
	<r:include url="/ris/include/«IF !isNullOrEmpty(codCanale)»«codCanale»/«ENDIF»«IF !isNullOrEmpty(codApplicativo)»«codApplicativo»/«ENDIF»staticLink.html" resourceProvider="sp" />
</c:catch>
«ENDLET»
«ENDLET»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della MENUBAR.
TODO: come faccio a sapere qual'è il menu attivo?
NOTE IMPLEMENTATIVE: E' stato utilizzato il pattern menu (http://dev-www.sistemapiemonte.it/sandbox/templates/repository/pattern/menu.shtml).
Questo pattern prevede due possibilità:
- menu "cavalieri" con struttura già espansa (non richiede JavaScript): quattro livelli
- menu "dropDown" con struttura espandibile (richiede JavaScript): due livelli?
Si è scelta l'opzione "cavalieri" in quanto non richiede nè JavaScript nè indicatori sequenziali per le voci di menu.
Dal momento che i CSS gestiscono fino a quattro livelli, è necessario porre un check in fase di generazione del codice
(o di definizione del modello) in modo che non si possa andare più in profondità del quarto livello,
e che il quarto livello abbia obbligatoriamente un elemento con EventHandler.
«ENDREM»
«DEFINE getMenubarMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Menubar»
<div id="menuDiNavigazioneSisp2">
	<ul class="menuCavalieri">
	«LET 1 AS level -»
	«FOREACH this.topLevelMenu AS tlmenu -»
		«IF tlmenu.submenu.size > 0»
			«EXPAND expandMenuWithChild(level) FOR tlmenu -»«REM»Il menu ha dei figli: è un sovramenu«ENDREM»
		«ELSE»
			«EXPAND expandMenuNoChild(level) FOR tlmenu -»«REM»Il menu non ha dei figli: non è un sovramenu«ENDREM»
		«ENDIF»
	«ENDFOREACH-»
	«ENDLET-»

	«IF model.structure.appWindow.appArea.staticLinks != null-»
		«EXPAND getStaticLinkMarkup(model, skip_component_dir_creation) FOR model.structure.appWindow.appArea.staticLinks-»
	«ENDIF-»
	</ul>
</div>
«ENDDEFINE»


«REM»Genera un Menu che non ha dei sottomenu (corrispone al vecchio MenuItem)«ENDREM»
«DEFINE expandMenuNoChild(int level) FOR Menu -»
<s:if test="isMenuVisible('«this.name»')">
«IF this.eventHandler.eventType == EventTypes::CLICKED-»
	«LET this.eventHandler.command AS currAction-»
	<s:if test="isMenuEnabled('«this.name»')">
		<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
		<li«getMenuNoChildCssSisp(this, level)»>
			<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»"«getMenuNoChildLinkCssSisp(this, level)»>
				«getMenuNoChildLabelSisp(this, level)»
			</s:a>
		</li>
	</s:if>
	<s:else>
		<li«getMenuNoChildCssSisp(this, level)»>«getMenuNoChildLabelSisp(this, level)»</li>
	</s:else>
	«ENDLET»
«ELSE»
	<li«getMenuNoChildCssSisp(this, level)»>«getMenuNoChildLabelSisp(this, level)»</li>
«ENDIF»
</s:if>
«ENDDEFINE»


«REM»Genera un Menu che ha dei sottomenu (corrispone al vecchio SubMenu)«ENDREM»
«DEFINE expandMenuWithChild(int level) FOR Menu»
<s:if test="isMenuVisible('«this.name»')">
	<s:if test="isAtLeastOneSubMenuVisible('«this.name»')">
	«IF this.eventHandler.eventType == EventTypes::CLICKED-»
		«LET this.eventHandler.command AS currAction-»
		<s:if test="isMenuEnabled('«this.name»')">
			<li«getMenuWithChildCssSisp(this, level)»>
				<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
				<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»"«getMenuWithChildLinkCssSisp(this, level)»>
					«getMenuWithChildLabelSisp(this, level)»
				</s:a>
				<ul>
					«EXPAND expandSubMenu(level+1) FOREACH this.submenu»
				</ul>
			</li>
		</s:if>
		<s:else>
			<li«getMenuWithChildCssSisp(this, level)»>«getMenuWithChildLabelSisp(this, level)»
				<ul>
					«EXPAND expandSubMenu(level+1) FOREACH this.submenu»
				</ul>
			</li>
		</s:else>
		«ENDLET»
	«ELSE»
		<li«getMenuWithChildCssSisp(this, level)»>«getMenuWithChildLabelSisp(this, level)»
			<ul>
				«EXPAND expandSubMenu(level+1) FOREACH this.submenu»
			</ul>
		</li>
	«ENDIF»
	</s:if>
	<s:else>
	«IF this.eventHandler.eventType == EventTypes::CLICKED-»
		«LET this.eventHandler.command AS currAction-»
		<s:if test="isMenuEnabled('«this.name»')">
			<li«getMenuNoChildCssSisp(this, level)»>
				<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
				<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»"«getMenuNoChildLinkCssSisp(this, level)»>
					«getMenuNoChildLabelSisp(this, level)»
				</s:a>
			</li>
		</s:if>
		<s:else>
			<li«getMenuNoChildCssSisp(this, level)»>«getMenuNoChildLabelSisp(this, level)»</li>
		</s:else>
		«ENDLET»
	«ELSE»
		<li«getMenuNoChildCssSisp(this, level)»>«getMenuNoChildLabelSisp(this, level)»</li>
	«ENDIF»
	</s:else>
</s:if>
«ENDDEFINE»


«REM»Genera un sottoMenu«ENDREM»
«DEFINE expandSubMenu(int level) FOR Menu»
«IF this.submenu.size > 0»
	«EXPAND expandMenuWithChild(level) FOR this -»«REM»Il menu ha dei figli: è un sovramenu«ENDREM»
«ELSE»
	«EXPAND expandMenuNoChild(level) FOR this -»«REM»Il menu non ha dei figli: non è un sovramenu«ENDREM»
«ENDIF»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della FOOTER«ENDREM»
«DEFINE getFooterMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Footer»
					<hr />

				</div>
			</div>
			<!-- CONTENITORE + CORPO -->

<!-- footer (con remincl) -->
<r:include url="/ris/include/footerSisp.html" resourceProvider="sp" />

«REM»RIMOSSO: implementata REMINICL
<!--footer (senza remincl: TMP)-->
			<!--piedipagina-->
			<div id="piedipagina">
				<p id="noteSito" title="per informazioni: info@sistemapiemonte.it">
					<a href="mailto:info@sistemapiemonte.it"><span class="alt">per informazioni: info@sistemapiemonte.it</span></a>
				</p>
				<p class="navigazionePagina">
					[ <a href="#intestazione">Torna all'inizio della pagina</a> ]
				</p>
			</div>
			<!--/piedipagina-->

		</div>
		<!--/pagina-->

	</body>
</html>
«ENDREM»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei PANNELLI
==========================================================================================================================
«ENDREM»


«REM»Per il momento si parte dall'assunzione che a primo livello ci siano solo Form Pnels«ENDREM»
«DEFINE setupFirstLevelFormPanel(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
	«IF this.layout.metaType == VerticalFlowPanelLayout-»
		«EXPAND setupVFL(model, skip_component_dir_creation, cp) FOR this»
	«ELSEIF this.layout.metaType == UDLRCPanelLayout-»
		«EXPAND setupUDLRCL(model, skip_component_dir_creation, cp) FOR this»
	«ELSEIF this.layout.metaType == HorizontalFlowPanelLayout-»
		«ERROR "HorizontalFlowPanelLayout non gestito al primo livello per portale " + getPortalName()»
	«ENDIF-»
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per il Vertical Flow Layout«ENDREM»
«DEFINE setupVFL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ####################### PANNELLO CONTENUTI ###################### -->
<div id="sfondoColonna">

	<!-- =============== COLONNA UNICA ============== -->
	<div id="colonna">
		<h2 class="alt">contenuti</h2>

		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello 1° livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«REM»ATTENZIONE: qui devo espandere i sottopannelli del pannello di primo livello«ENDREM»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::CENTER) FOR this»

	</div>
	<!-- ============ FINE COLONNA UNICA ============ -->

</div>
<!-- #################### FINE PANNELLO CONTENUTI #################### -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per l'UDLRC (Up-Down-Left-Right-Center) Layout«ENDREM»
«DEFINE setupUDLRCL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
«LET getColumnsLayout(this, model) AS numeroColonne-»
«IF numeroColonne == 1 -»
	«EXPAND setupUnaColonna(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF numeroColonne == 2 -»
	«EXPAND setupDueColonne(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF numeroColonne == 3 -»
	«EXPAND setupTreColonne(model, skip_component_dir_creation, cp) FOR this»
«ELSE-»
	«ERROR "Portale " + getPortalName() + ". Numero di colonne maggiore di 3 : colonne trovate " + numeroColonne»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a COLONNA UNICA ([U][D]C)«ENDREM»
«DEFINE setupUnaColonna(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ####################### PANNELLO CONTENUTI ###################### -->
<div id="sfondoColonna">

	<!-- =============== COLONNA UNICA ============== -->
	<div id="colonna">
		<h2 class="alt">contenuti</h2>

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ***** UDLRC Layout: UP PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ***** FINE UDLRC Layout: UP PANEL ***** -->
		«ENDIF-»
		«ENDLET-»


		<!-- ***** UDLRC Layout: CENTER PANEL ***** -->

		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello 1° livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ***** FINE UDLRC Layout: CENTER PANEL ***** -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ***** UDLRC Layout: DOWN PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ***** FINE UDLRC Layout: DOWN PANEL ***** -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!-- ============ FINE COLONNA UNICA ============ -->

</div>
<!-- #################### FINE PANNELLO CONTENUTI #################### -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a DUE COLONNE ([U][D]LC)«ENDREM»
«DEFINE setupDueColonne(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ####################### PANNELLO CONTENUTI ###################### -->
<div id="sfondo">
	<h2 class="alt">menu della sezione</h2>

	<!-- ================ COLONNA SX ================ -->
	<div id="colonnaSinistra">
		«LET getSubPanelByLayout(this, UDLRCSpecConstants::LEFT) AS leftPanel-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::LEFT) FOR leftPanel»
		«ENDLET-»
	</div>
	<!-- ============== FINE COLONNA SX ============== -->

	<hr />

	<!-- ================ COLONNA DX ================ -->
	<div id="colonnaDestra">
		<h2 class="alt">contenuti</h2>

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ***** UDLRC Layout: UP PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ***** FINE UDLRC Layout: UP PANEL ***** -->
		«ENDIF-»
		«ENDLET-»

		<!-- ***** UDLRC Layout: CENTER PANEL ***** -->

		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello primo livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ***** FINE UDLRC Layout: CENTER PANEL ***** -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ***** UDLRC Layout: DOWN PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ***** FINE UDLRC Layout: DOWN PANEL ***** -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!-- ============== FINE COLONNA DX ============== -->

</div>
<!-- #################### FINE PANNELLO CONTENUTI #################### -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a TRE COLONNE ([U][D]LRC)«ENDREM»
«DEFINE setupTreColonne(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ####################### PANNELLO CONTENUTI ###################### -->
<div id="sfondo" class="treColonne">
	<h2 class="alt">menu della sezione</h2>

	<!-- ================ COLONNA SX ================ -->
	<div id="colonnaSinistra">
		«LET getSubPanelByLayout(this, UDLRCSpecConstants::LEFT) AS leftPanel-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::LEFT) FOR leftPanel»
		«ENDLET-»
	</div>
	<!-- ============== FINE COLONNA SX ============== -->

	<hr />

	<!-- ================= COLONNA CENTRALE ================ -->
	<div id="colonnaCentrale">

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ***** UDLRC Layout: UP PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ***** FINE UDLRC Layout: UP PANEL ***** -->
		«ENDIF-»
		«ENDLET-»


		<!-- ***** UDLRC Layout: CENTER PANEL ***** -->

		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello primo livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ***** FINE UDLRC Layout: CENTER PANEL ***** -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ***** UDLRC Layout: DOWN PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ***** FINE UDLRC Layout: DOWN PANEL ***** -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!-- ============== FINE COLONNA CENTRALE ============== -->


	<!-- =========== COLONNA EXTRA (DESTRA) ========== -->
	<div id="colonnaExtra">
		<h2 class="alt">informazioni</h2>

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::RIGHT) AS rightPanel-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::RIGHT) FOR rightPanel»
		«ENDLET-»
	</div>
	<!-- ======== FINE COLONNA EXTRA (DESTRA) ======== -->

</div>
<!-- #################### FINE PANNELLO CONTENUTI #################### -->
«ENDDEFINE»


«REM»
************** Multi Panel e tipi derivati (TabsetPanel, WizardPanel) **************
«ENDREM»

«REM»TabsetPanel«ENDREM»
«DEFINE setupTabSetPanel(GUIModel model) FOR TabSetPanel»
	«IF !isNullOrEmpty(this.label)-»
	<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
	«ENDIF-»
	<div class="conthTab">
	«FOREACH this.panels AS currTab ITERATOR i-»
		«LET i.lastIteration ? "<s:property value=\"%{#session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == '"+getMultiPanelName(this, currTab)+"' ? 'tabAttivoUltimo3' : 'tabUltimo3'}\" />" : "<s:property value=\"%{#session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == '"+getMultiPanelName(this, currTab)+"'" + (i.firstIteration ? " || #session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == null" : "") + " ? 'tabAttivo3' : 'tab3'}\" />" AS tabStyle-»
		<s:url id="«getMultiPanelName(this, currTab)»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«getSelectedMultiPanelName(this)»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«getMultiPanelName(this, currTab)»'}" />
		</s:url>
		<div class="«tabStyle»"><s:a href="%{«getMultiPanelName(this, currTab)»_URL}"><s:text name="«findParentContentPanel(this).name».«currTab.name».label" /></s:a></div>
		«ENDLET-»
	«ENDFOREACH-»
	</div>
«ENDDEFINE»

«REM»WizardPanel«ENDREM»
«DEFINE setupWizardPanel(GUIModel model) FOR WizardPanel»
«IF !isNullOrEmpty(this.label)-»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
<div class="contenutiTab">
	<div id="wizard"><!-- navigatorActive:«navigatorActive» -->
		<h3 class="alt">Sezioni</h3>
	«FOREACH this.panels AS currStep ITERATOR i-»
		«LET i.firstIteration ? " || #session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == null" : "" AS stepExtraCondition -»
		<s:url id="«getMultiPanelName(this, currStep)»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«getSelectedMultiPanelName(this)»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«getMultiPanelName(this, currStep)»'}" />
		</s:url>
		<li>
		«LET getWizardPanelStepCompleteIndex(this, i.counter1.toString()) AS stepNumber-»
		<s:if test="%{#session.«getSelectedMultiPanelName(this)»_selectedMultiPanel == '«getMultiPanelName(this, currStep)»'«stepExtraCondition»}">
			«EXPAND setupActiveWizardNavigatorCurrentItem(model, this, stepExtraCondition, stepNumber) FOR currStep-»
		</s:if>
		<s:else>
			«IF this.navigatorActive-»
				«EXPAND setupActiveWizardNavigatorNotCurrentItem(model, this, stepNumber) FOR currStep-»
			«ELSE-»
				«EXPAND setupPassiveWizardNavigatorNotCurrentItem(model, this, stepNumber) FOR currStep-»
			«ENDIF-»
		</s:else>
		«ENDLET-»
		</li>
		«ENDLET-»
	«ENDFOREACH-»
	</div>
</div>
«ENDDEFINE»

«DEFINE setupActiveWizardNavigatorCurrentItem(GUIModel model, WizardPanel wizard, String stepExtraCondition, String stepNumber) FOR Panel»
	«LET this AS currStep-»
	<span class="evidenza">«stepNumber». <s:text name="«findParentContentPanel(this).name».«currStep.name».label" /></span>
	«ENDLET-»
«ENDDEFINE»

«DEFINE setupActiveWizardNavigatorNotCurrentItem(GUIModel model, WizardPanel wizard, String stepNumber) FOR Panel»
	«LET this AS currStep-»
	<span><s:a href="%{«getMultiPanelName(wizard, currStep)»_URL}">«stepNumber». <s:text name="«findParentContentPanel(this).name».«currStep.name».label" /></s:a></span>
	«ENDLET-»
«ENDDEFINE»

«DEFINE setupPassiveWizardNavigatorNotCurrentItem(GUIModel model, WizardPanel wizard, String stepNumber) FOR Panel»
	«LET this AS currStep-»
	<span> «stepNumber». <s:text name="«findParentContentPanel(this).name».«currStep.name».label" /></span>
	«ENDLET-»
«ENDDEFINE»


«REM»
************** StdMessagePanel (Pannello per errori) **************
«ENDREM»

«DEFINE setupStdMessagePanel(GUIModel model, ContentPanel cp) FOR StdMessagePanel»
<customtag:panelGrid id="«this.name»" scope="message" errorDetails="«showFieldErrorDetails»" errorMessage="«showFieldErrors»" actionMessage="«showGlobalMessages»" portale="«getPortalCode()»" />
«ENDDEFINE»


«REM»
************** UserInfoPanel (pannello con le informazioni sull'utente loggato) **************
«ENDREM»

«DEFINE setupUserInfoPanel(GUIModel model, ContentPanel cp) FOR UserInfoPanel»
«LET ((List[ApplicationData])getAllApplicationData(model)).select(ad|ad.name=="currentUser").first() AS currentUserAD-»
<div id="contUtente">
	<div id="Utente">
		<span id="datiUtente">
			Utente: <strong><s:property value="«getAppDataKey(currentUserAD)».nome" /> <s:property value="«getAppDataKey(currentUserAD)».cognome" /></strong> | Ente: <strong><s:property value="«getAppDataKey(currentUserAD)».ente" /></strong><br/>
			Ruolo: <strong><s:property value="«getAppDataKey(currentUserAD)».ruolo" /></strong>
		</span>
		<s:url id="localLogoutUrl" action="Logout" method="localLogout" />
		<span class="logoutApplicativo"><s:a href="%{localLogoutUrl}" title="chiudi: questo link fa uscire dal servizio">esci</s:a></span>
	</div>
</div>
«ENDLET-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - PANNELLI
==========================================================================================================================
«ENDREM»

«REM»Genera la header di un sottopannello di tipo FormPanel (solo se non è un FormPanel "contenitore")«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF (this.subpanels.select(e|e.metaType == MultiPanel).size == 0 && this.subpanels.select(e|e.metaType == TabSetPanel).size == 0 && this.subpanels.select(e|e.metaType == WizardPanel).size == 0) && !((this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) && !(this.subpanels.select(e|e.metaType == FormPanel).size == 0)) -»
«IF !isNullOrEmpty(this.label) && !(this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) -»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
<div class="contenuti">
«ENDIF-»
«ENDDEFINE»

«REM»Genera la header di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR CommandPanel»
«LET (this.cmdStyle == CommandStyles::NAVIGATION ? "class=\"pulsNav\"" : (this.cmdStyle == CommandStyles::FUNCTIONAL ? "class=\"pulsFunz\"" : "" ) ) AS ptype-»
<div «ptype»>
«ENDLET-»
«ENDDEFINE»

«REM»Genera la header di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR MenuPanel»
«REM»Non faccio niente (per il momento)«ENDREM»
«ENDDEFINE»


«REM»Genera la footer di un sottopannello di tipo FormPanel (solo se non è un FormPanel "contenitore")«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF (this.subpanels.select(e|e.metaType == MultiPanel).size == 0 && this.subpanels.select(e|e.metaType == TabSetPanel).size == 0 && this.subpanels.select(e|e.metaType == WizardPanel).size == 0) && !((this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) && !(this.subpanels.select(e|e.metaType == FormPanel).size == 0)) -»
</div>
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR CommandPanel»
</div>
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR MenuPanel»
«REM»Non faccio niente (per il momento)«ENDREM»
«ENDDEFINE»


«REM»
************** WidgetsPanel **************
«ENDREM»

«REM»Genera la header di un sottopannello di tipo WidgetsPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR WidgetsPanel»
	«IF !isNullOrEmpty(this.label)-»
	<h5><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h5>
	«ENDIF-»
	«IF !this.widgets.isEmpty -»
	<customtag:panelGrid id="«this.name»" columns="«getGridPanelColumnsNumber(this)»" errorDetails="false" errorMessage="false" actionMessage="false" portale="«getPortalCode()»" «getPanelGridPercentCols(this)»>
	«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo WidgetsPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR WidgetsPanel»
	«IF !this.widgets.isEmpty -»
	</customtag:panelGrid>
	«ENDIF-»
«ENDDEFINE»


«REM»
************** User Defined Panel **************
«ENDREM»

«REM»Genera la header di un pannello di tipo UserDefinedPanel«ENDREM»
«DEFINE userDefinedPanelControlHeader(GUIModel model) FOR UserDefinedPanel-»
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo UserDefinedPanel«ENDREM»
«DEFINE userDefinedPanelControlFooter(GUIModel model) FOR UserDefinedPanel-»
«ENDDEFINE»


«REM»
************** Dialog Panel **************
«ENDREM»

«REM»Genera la header di un pannello di tipo DialogPanel«ENDREM»
«DEFINE dialogPanelControlHeader(GUIModel model) FOR DialogPanel-»
«IF model.structure.appWindow.header != null-»
<s:include value="../fragments/header.jsp" ></s:include>
«ENDIF-»

<s:form id="«this.name»Form" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="post">

	<!-- ####################### PANNELLO CONTENUTI ###################### -->
	<div id="sfondoColonna">

		<!-- =============== COLONNA UNICA ============== -->
		<div id="colonna">
			<h2 class="alt">contenuti</h2>

			<h3><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h3>
			<div class="contenuti">
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo DialogPanel«ENDREM»
«DEFINE dialogPanelControlFooter(GUIModel model) FOR DialogPanel-»
			</div>
		</div>
		<!-- ============ FINE COLONNA UNICA ============ -->

	</div>
	<!-- #################### FINE PANNELLO CONTENUTI #################### -->

</s:form>

«IF model.structure.appWindow.footer != null-»
<s:include value="../fragments/footer.jsp" ></s:include>
«ENDIF-»
«ENDDEFINE»


«REM»
************** MsgBoxPanel (STDMDD-245: solo se inseriti in DialogPanel ) **************
«ENDREM»

«REM»Genera la header di un pannello di tipo MsgBoxPanel«ENDREM»
«DEFINE msgBoxPanelControlHeader FOR MsgBoxPanel»
<div «getMsgBoxPanelStyleByPortal((GUIModel)this.eRootContainer, this)»>
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo MsgBoxPanel«ENDREM»
«DEFINE msgBoxPanelControlFooter FOR MsgBoxPanel»
</div>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - WIDGETS
==========================================================================================================================
«ENDREM»

«REM»--------------- Widget ---------------«ENDREM»

«REM»Genera la header di un widget generico«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
<customtag:column labelField="true" textLabel="«getText(this)»" labelFor="«getWidgetLabelFor(this)»" «getCustomtagColumnPosition(wp, this, isFirst, isLast)» «getCustomtagHeaderColspan(wp, this)»>
«ENDDEFINE»

«REM»Genera la footer di un widget generico«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
</customtag:column>
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget generico«ENDREM»
«DEFINE widgetClose(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
«IF needHandleCustomtagCloseHspan(wp, this) -»
<s:else>
	<customtag:column textValue="" «getCustomtagCloseColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»/>
</s:else>
«ENDIF-»
«ENDDEFINE»


«REM»--------------- PlainText ---------------«ENDREM»

«REM»Genera la header di un widget di tipo PlainText per un FormPanel«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR PlainText»
<customtag:column «IF this.label != null»labelField="true" textLabel="«getText(this)»" labelFor="«getWidgetLabelFor(this)»"«ENDIF» «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)» «getCustomComponentColumnStyleByPortal((GUIModel)wp.eRootContainer, this)»>
«ENDDEFINE»

«REM»Genera la header di un widget di tipo PlainText per un MsgBoxPanel«ENDREM»
«DEFINE widgetControlHeader(MsgBoxPanel mbp, Boolean isFirst, Boolean isLast) FOR PlainText»
«REM»Al momento non si fa niente«ENDREM»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo PlainText per un MsgBoxPanel«ENDREM»
«DEFINE widgetControlFooter(MsgBoxPanel mbp, Boolean isFirst, Boolean isLast) FOR PlainText»
«IF !isLast»<br/>«ENDIF»
«ENDDEFINE»




«REM»--------------- HiddenValue ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»--------------- Button ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«IF cmdp.layout.metaType == UDLRCPanelLayout-»
<div «getButtonDivStyleByLayout((GUIModel)this.eRootContainer, this)»>
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«IF cmdp.layout.metaType == UDLRCPanelLayout-»
</div>
«ENDIF-»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Button»
<customtag:column «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
«ENDDEFINE»


«REM»--------------- Table ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Table (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Table»
<customtag:column «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
«ENDDEFINE»


«REM»--------------- UserDefinedWidget ---------------«ENDREM»

«REM»Genera la header di un widget di tipo UserDefinedWidget (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR UserDefinedWidget»
<customtag:column «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
«ENDDEFINE»


«REM»--------------- MenuView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»


«REM»--------------- TreeView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»



«REM»
************** Markup HTML dei Widgets specifici  **************
«ENDREM»

«REM»Genera la componente di markup (HTML) della header un grupppo di RadioButton (RadioButtons).«ENDREM»
«DEFINE widgetMarkupHeader FOR RadioButtons»
«ENDDEFINE»

«REM»Genera la componente di markup (HTML) del footer un grupppo di RadioButton (RadioButtons).«ENDREM»
«DEFINE widgetMarkupFooter FOR RadioButtons»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione delle LABEL (i18n) => file: i18nfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera le label per la header«ENDREM»
«DEFINE headerLabels FOR GUIModel-»
header.userinfo.head.label=utente:
header.filoarianna.head.label=sei in:
header.canale.nome.label=«this.structure.appWindow.header.nomeCanale»
header.applicativo.nome.label=«this.structure.appWindow.header.nomeApplicativo»
header.ssologout.label=esci
header.nomeservizio.label=home nome servizio
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione del BUILD => file: buildfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera le dipendenze realtive ai temi di struts specifici per i portali«ENDREM»
«DEFINE strutsThemeIvy FOR GUIModel»
<dependency org="csipiemonte" name="util-struts2-customcomponent" rev="1.2.0">
	<artifact name="custom-component-1.2.0" type="jar"/>
	<artifact name="custom-component-attr-1.2.0" type="jar"/>
	<artifact name="custom-component-rich-1.2.0" type="jar"/>
</dependency>
<dependency org="csipiemonte" name="util-struts2-csitemplate" rev="1.0.3">
	<artifact name="util-struts2-csitemplate-1.0.3" type="jar"/>
</dependency>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei files di CONFIGURAZIONE => file: configfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera la porzione del file di configurazione della DisplayTag che potrebbe variare a seconda dei portali«ENDREM»
«DEFINE displayTagConfigurationFile FOR GUIModel»
############################################################################
# MESSAGES

basic.msg.empty_list=<div id="ncsdf">Non ci sono elementi da visualizzare.</div>
basic.msg.empty_list_row=<tr class="empty"><td colspan="{0}">Non ci sono elementi da visualizzare.</td></tr>
error.msg.invalid_page=pagina non valida


paging.banner.item_name=risultato
paging.banner.items_name=risultati

paging.banner.no_items_found=<div class="paginazione"><span class="sx">Nessun {0} trovato.</span><span class="bugFix"> | </span>
paging.banner.one_item_found=<div class="paginazione"><span class="sx">Un {0} trovato.</span><span class="bugFix"> | </span>
paging.banner.all_items_found=<div class="paginazione"><span class="sx">{0} {1} trovati, tutti i {2} visualizzati.</span><span class="bugFix"> | </span>
paging.banner.some_items_found=<div class="paginazione"><span class="sx">{0} {1} trovati ({5} pagine)</span><span class="bugFix"> | </span>

paging.banner.full=<span class="dx">{0} <a href="{1}">prima</a> <a href="{2}">&lt;&lt; prec</a> | <a href="{3}">succ &gt;&gt;</a> <a href="{4}">ultima</a></span></div>
paging.banner.first=<span class="dx">{0} <a href="{3}">succ &gt;&gt;</a> <a href="{4}">ultima</a></span></div>
paging.banner.last=<span class="dx">{0} <a href="{1}">prima</a> <a href="{2}">&lt;&lt; prec</a></span></div>
paging.banner.onepage=<span class="dx">pagina {0}</span></div>

paging.banner.page.selected=<span class="evidenzaLink">{0}</span>
paging.banner.page.link=<a href="{1}" title="Vai a pagina {0}">{0}</a>
paging.banner.page.separator=<span class="bugFix"> | </span>


export.banner=<div class="opzioni">{0}</div>
export.banner.sepchar=

export.csv.label=<span class="export csv">CSV</span>
export.excel.label=<span class="xls">scarica in excel</span>
export.pdf.label=<span class="pdf">scarica in pdf</span>
export.rtf.label=<span class="export rtf" title="Esporta solo la pagina corrente in formato rtf">RTF</span>


############################################################################
# CSS PERSONALIZZATI

#css.tr.even=normalRow
#css.tr.odd=alternateRow
#css.th.sorted=siord
#css.th.ascending=su
#css.th.descending=giu
#css.table
#css.th.sortable=dis
«ENDDEFINE»
