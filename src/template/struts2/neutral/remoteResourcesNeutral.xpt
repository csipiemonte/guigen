«IMPORT guigen»

«IMPORT template::struts2::resourcefiles»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::struts2::neutral::Struts2ExtensionsNeutral»


«REM»
**************************************************************************************************************************
Markup HTML per RuparPiemonte (versione 2)
Riferimenti:
	-
	-
**************************************************************************************************************************
«ENDREM»


«REM»
==========================================================================================================================
Definizioni generali: Pagine di ERRORE
==========================================================================================================================
«ENDREM»

«REM»Crea la pagina di errore 404 (Page Not Found) -> NO STRUTS«ENDREM»
«DEFINE getJspPageNotFoundError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<!-- TODO: IMPLEMENTARE CORRETTAMENTE -->
<h3><fmt:message key="error.notfound.title" /></h3>
<div>
	<fmt:message key="error.notfound.warning" />
	<br/>
	<fmt:message key="error.notfound.message" />
</div>
<div>
	<a href="HomePage.do"><fmt:message key="error.notfound.btnmsg" /></a>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore 500 (Internal Server Error) -> NO STRUTS«ENDREM»
«DEFINE getJspFatalError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<!-- TODO: IMPLEMENTARE CORRETTAMENTE -->
<h3><fmt:message key="error.fatalerror.title" /></h3>
<div>
	<fmt:message key="error.fatalerror.warning" />
	<br />
	<fmt:message key="error.fatalerror.message" />
</div>
<div>
	<a href="HomePage.do"><fmt:message key="error.fatalerror.btnmsg" /></a>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per le ApplicationError (Runtime) [java.lang.RuntimeException]«ENDREM»
«DEFINE getJspApplicationError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderStruts FOR this-»
<!-- TODO: IMPLEMENTARE CORRETTAMENTE -->
<h3><s:text name="error.applicationerror.title" /></h3>
<div>
	<s:text name="error.applicationerror.warning" /> <s:text name="error.applicationerror.message" />
	<br />
	<s:property value="%{exception.message}"/>
</div>
<div>
	<s:url id="homePageUrl" action="HomePage" />
	<s:a href="%{homePageUrl}"><s:text name="error.applicationerror.btnmsg" /></s:a>
</div>
«EXPAND getJspErrorPageFooterStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per errore da Sessione scaduta -> NO STRUTS«ENDREM»
«DEFINE getJspPageSessionExpiredFile FOR GUIModel»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<!-- TODO: IMPLEMENTARE CORRETTAMENTE -->
<h3><fmt:message key="error.sessionexpired.title" /></h3>
<div>
	<fmt:message key="error.sessionexpired.warning" />
	<br />
	<fmt:message key="error.sessionexpired.timeout" />
	<br />
	<br />
	<fmt:message key="error.sessionexpired.datanotsaved" />
	<br />
	<fmt:message key="error.sessionexpired.authentication" />
</div>
<div>
	<!-- NOTA: questa URL è da parametrizzare in qualche modo -->
	<a href="#"><fmt:message key="error.sessionexpired.btnmsgportalhome" /></a>
	<br />
	<a href="HomePage.do"><fmt:message key="error.sessionexpired.btnmsgservicehome" /></a>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di conferma chiusura sessione utente«ENDREM»
«DEFINE getJspPageConfirmLogoutFile(boolean skip_component_dir_creation) FOR GUIModel»
«FILE getJspErrorPagesDir(this, true) + "/confirmLogout.jsp"-»
«EXPAND getJspErrorPageHeaderStruts FOR this-»
<h3><s:text name="message.confirmlogout.title" /></h3>
<div>
	<s:text name="message.confirmlogout.warning" />
	<br />
	<s:text name="message.confirmlogout.closemessage" />
	<br />
	<s:text name="message.confirmlogout.certmessage" />
</div>
<div>
	<s:url id="localLogoutUrl" action="Logout" method="localLogout" />
	<s:a href="%{localLogoutUrl}"><s:text name="message.confirmlogout.btnmsglogout" /></s:a>
</div>
«EXPAND getJspErrorPageFooterStruts FOR this-»
«ENDFILE»
«ENDDEFINE»



«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeaderStruts FOR GUIModel-»<%@ taglib uri="/struts-tags" prefix="s" %>
	«IF this.structure.appWindow.header != null-»
	<s:include value="../fragments/header.jsp" ></s:include>
	«ENDIF-»

	<!-- ####################### PANNELLO CONTENUTI ###################### -->
	<div id="contentPanel">
		<div id="centerWrapper" class="floatWrapper">
			<div id="centerPanel">
				<div class="wrapper">
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooterStruts FOR GUIModel-»
				</div>
			</div>
		</div>
	</div>
	<!-- #################### FINE PANNELLO CONTENUTI #################### -->

	«IF this.structure.appWindow.footer != null-»
	<s:include value="../fragments/footer.jsp" ></s:include>
	«ENDIF-»
«ENDDEFINE»


«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeaderNoStruts FOR GUIModel-»<%@ taglib uri="http://java.sun.com/jstl/fmt" prefix="fmt" %>

<fmt:setBundle basename="globalMessages" />

	«IF this.structure.appWindow.header != null-»
	<jsp:include page="/jsp/fragments/headerNoStruts.jsp" />
	«ENDIF-»

	<!-- ####################### PANNELLO CONTENUTI ###################### -->
	<div id="contentPanel">
		<div id="centerWrapper" class="floatWrapper">
			<div id="centerPanel">
				<div class="wrapper">
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooterNoStruts FOR GUIModel-»
				</div>
			</div>
		</div>
	</div>
	<!-- #################### FINE PANNELLO CONTENUTI #################### -->

	«IF this.structure.appWindow.footer != null-»
	<jsp:include page="/jsp/fragments/footer.jsp" />
	«ENDIF-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Definizioni generali: header, footer, ecc
==========================================================================================================================
«ENDREM»

«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Header -»<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title><s:text name="header.applicativo.nome.label" /></title>

		«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("header.staticResourcesLinks.struts")»
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/yui_reset.css" media="screen" /> <!-- reset CSS -->
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/style.css" media="screen" /> <!-- stile di base -->

		<!--[if lte IE 6]>
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/ie/ie6.css" media="screen" />
		<![endif]-->

		<!--[if IE 7]>
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/ie/ie7.css" media="screen" />
		<![endif]-->

		<!-- jQuery -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jqlib/jquery/jquery-1.3.2.min.js"></script>

		<!-- jQuery UI -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jqlib/ui/1.7.2/jquery-ui-1.7.2.custom.min.js"></script>
		<!-- jQuery UI smoothness theme -->
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/js/jqlib/themes/smoothness/jquery-ui-1.7.2.custom.css" />

		<!-- jQuery Corners -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jqlib/plugins/jquery-corners-0.3/jquery.corners.min.js"></script>

		<!-- funzioni e definizioni javascript -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jsFunctions.js"></script>


		<!-- Aggiungere i link alle proprie risorse statiche (css, js, altro) -->
		«ENDPROTECT»

		«IF model.targetPlatform.enableRichUIBehavior-»<customtag:ajaxify-header />«ENDIF-»
	</head>

	<body>

		<!-- PAGE (OBBLIGATORIO) -->
		<div id="page">

			<!-- HEADER di PORTALE (facoltativo) -->
			«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("header.portalHeader.struts")»
			<div id="portalHeader">
				<!-- Inserire il codice della header di portale (se esiste) -->
				<h1>HEADER DI PORTALE [h1]</h1>
			</div>
			«ENDPROTECT»
			<!-- fine HEADER di PORTALE (facoltativo) -->

			<!-- APPICATION AREA (OBBLIGATORIO) -->
			<div id="applicationArea">

				<!-- HEADER di APPLICATIVO (facoltativo) -->
				«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("header.applicationHeader.struts")»
				<div id="applicationHeader">
					<!-- Inserire il codice della header applicativa (se esiste) -->
				</div>
				«ENDPROTECT»
				<!-- fine HEADER di APPLICATIVO (facoltativo) -->

<!-- FINE HEADER -->
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkupNoStruts(GUIModel model, boolean skip_component_dir_creation) FOR Header -»<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title><fmt:message key="header.applicativo.nome.label" /></title>

		«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("header.staticResourcesLinks.noStruts")»
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/yui_reset.css" media="screen" /> <!-- reset CSS -->
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/style.css" media="screen" /> <!-- stile di base -->

		<!--[if lte IE 6]>
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/ie/ie6.css" media="screen" />
		<![endif]-->

		<!--[if IE 7]>
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/ie/ie7.css" media="screen" />
		<![endif]-->

		<!-- jQuery -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jqlib/jquery/jquery-1.3.2.min.js"></script>

		<!-- jQuery UI -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jqlib/ui/1.7.2/jquery-ui-1.7.2.custom.min.js"></script>
		<!-- jQuery UI smoothness theme -->
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/js/jqlib/themes/smoothness/jquery-ui-1.7.2.custom.css" />

		<!-- jQuery Corners -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jqlib/plugins/jquery-corners-0.3/jquery.corners.min.js"></script>

		<!-- funzioni e definizioni javascript -->
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/jsFunctions.js"></script>


		<!-- Aggiungere i link alle proprie risorse statiche (css, js, altro) -->
		«ENDPROTECT»

		«IF model.targetPlatform.enableRichUIBehavior-»<customtag:ajaxify-header />«ENDIF-»
	</head>

	<body>

		<!-- PAGE (OBBLIGATORIO) -->
		<div id="page">

			<!-- HEADER di PORTALE (facoltativo) -->
			«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("header.portalHeader.struts")»
			<div id="portalHeader">
				<!-- Inserire il codice della header di portale (se esiste) -->
				<h1>HEADER DI PORTALE [h1]</h1>
			</div>
			«ENDPROTECT»
			<!-- fine HEADER di PORTALE (facoltativo) -->

			<!-- APPICATION AREA (OBBLIGATORIO) -->
			<div id="applicationArea">

				<!-- HEADER di APPLICATIVO (facoltativo) -->
				«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("header.applicationHeader.struts")»
				<div id="applicationHeader">
					<!-- Inserire il codice della header applicativa (se esiste) -->
				</div>
				«ENDPROTECT»
				<!-- fine HEADER di APPLICATIVO (facoltativo) -->

<!-- FINE HEADER -->
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) dei LINK STATICI.
TODO: capire cosa sono e come vadano realmente implementati realmente.«ENDREM»
«DEFINE getStaticLinkMarkup(GUIModel model, boolean skip_component_dir_creation) FOR StaticLinks»
«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("menu.staticLinks")»
<!-- Link statici -->
«ENDPROTECT»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della MENUBAR.«ENDREM»
«DEFINE getMenubarMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Menubar»
<div id="mainMenu">
	<h3>Menu di navigazione</h3>
	<ul>
	«LET 1 AS level -»
	«FOREACH this.topLevelMenu AS tlmenu -»
		«IF tlmenu.submenu.size > 0»
			«EXPAND expandMenuWithChild(level) FOR tlmenu -»«REM»Il menu ha dei figli: è un sovramenu«ENDREM»
		«ELSE»
			«EXPAND expandMenuNoChild(level) FOR tlmenu -»«REM»Il menu non ha dei figli: non è un sovramenu«ENDREM»
		«ENDIF»
	«ENDFOREACH-»
	«ENDLET-»

	«IF model.structure.appWindow.appArea.staticLinks != null-»
		«EXPAND getStaticLinkMarkup(model, skip_component_dir_creation) FOR model.structure.appWindow.appArea.staticLinks-»
	«ENDIF-»
	</ul>
</div>
«ENDDEFINE»


«REM»Genera un Menu che non ha dei sottomenu (corrispone al vecchio MenuItem)«ENDREM»
«DEFINE expandMenuNoChild(int level) FOR Menu -»
<s:if test="isMenuVisible('«this.name»')">
«IF this.eventHandler.eventType == EventTypes::CLICKED-»
	«LET this.eventHandler.command AS currAction-»
	<s:if test="isMenuEnabled('«this.name»')">
		<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
		<li«getMenuNoChildCssNeutral(this, level)»>
			<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»">
				«getMenuNoChildLabelNeutral(this, level)»
			</s:a>
		</li>
	</s:if>
	<s:else>
		<li>«getMenuNoChildLabelNeutral(this, level)»</li>
	</s:else>
	«ENDLET»
«ELSE»
	<li>«getMenuNoChildLabelNeutral(this, level)»</li>
«ENDIF»
</s:if>
«ENDDEFINE»


«REM»Genera un Menu che ha dei sottomenu (corrispone al vecchio SubMenu)«ENDREM»
«DEFINE expandMenuWithChild(int level) FOR Menu»
<s:if test="isMenuVisible('«this.name»')">
	<s:if test="isAtLeastOneSubMenuVisible('«this.name»')">
	«IF this.eventHandler.eventType == EventTypes::CLICKED-»
		«LET this.eventHandler.command AS currAction-»
		<s:if test="isMenuEnabled('«this.name»')">
			<li«getMenuWithChildCssNeutral(this, level)»>
				<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
				<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»">
					«getMenuWithChildLabelNeutral(this, level)»
				</s:a>
				<ul>
					«EXPAND expandSubMenu(level+1) FOREACH this.submenu»
				</ul>
			</li>
		</s:if>
		<s:else>
			<li«getMenuWithChildCssNeutral(this, level)»>«getMenuWithChildLabelNeutral(this, level)»
				<ul>
					«EXPAND expandSubMenu(level+1) FOREACH this.submenu»
				</ul>
			</li>
		</s:else>
		«ENDLET»
	«ELSE»
		<li«getMenuWithChildCssNeutral(this, level)»>«getMenuWithChildLabelNeutral(this, level)»
			<ul>
				«EXPAND expandSubMenu(level+1) FOREACH this.submenu»
			</ul>
		</li>
	«ENDIF»
	</s:if>
	<s:else>
	«IF this.eventHandler.eventType == EventTypes::CLICKED-»
		«LET this.eventHandler.command AS currAction-»
		<s:if test="isMenuEnabled('«this.name»')">
			<li«getMenuNoChildCssNeutral(this, level)»>
				<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
				<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»">
					«getMenuNoChildLabelNeutral(this, level)»
				</s:a>
			</li>
		</s:if>
		<s:else>
			<li>«getMenuNoChildLabelNeutral(this, level)»</li>
		</s:else>
		«ENDLET»
	«ELSE»
		<li>«getMenuNoChildLabelNeutral(this, level)»</li>
	«ENDIF»
	</s:else>
</s:if>
«ENDDEFINE»


«REM»Genera un sottoMenu«ENDREM»
«DEFINE expandSubMenu(int level) FOR Menu»
«IF this.submenu.size > 0»
	«EXPAND expandMenuWithChild(level) FOR this -»«REM»Il menu ha dei figli: è un sovramenu«ENDREM»
«ELSE»
	«EXPAND expandMenuNoChild(level) FOR this -»«REM»Il menu non ha dei figli: non è un sovramenu«ENDREM»
«ENDIF»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della FOOTER«ENDREM»
«DEFINE getFooterMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Footer»
<!-- FOOTER -->

			</div>
			<!-- FINE APPICATION AREA (OBBLIGATORIO) -->

			«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("footer.portalFooter")»
			<div id="portalFooter">
				<!-- Inserire il codice del FOOTER di PORTALE (se esiste) -->
			</div>
			«ENDPROTECT»

		</div>
		<!-- FINE PAGE (OBBLIGATORIO) -->
	</body>
</html>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei PANNELLI
==========================================================================================================================
«ENDREM»


«REM»Per il momento si parte dall'assunzione che a primo livello ci siano solo Form Pnels«ENDREM»
«DEFINE setupFirstLevelFormPanel(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
	«IF this.layout.metaType == VerticalFlowPanelLayout-»
		«EXPAND setupVFL(model, skip_component_dir_creation, cp) FOR this»
	«ELSEIF this.layout.metaType == UDLRCPanelLayout-»
		«EXPAND setupUDLRCL(model, skip_component_dir_creation, cp) FOR this»
	«ELSE-»
		«ERROR "Layout " + this.layout.metaType + " non gestito al primo livello per portale " + getPortalName()»
	«ENDIF-»
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per il Vertical Flow Layout«ENDREM»
«DEFINE setupVFL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ####################### PANNELLO CONTENUTI ###################### -->
<div id="contentPanel">
	<div id="centerWrapper" class="floatWrapper">
		<div id="centerPanel">
			<div class="wrapper">

				«IF !isNullOrEmpty(this.label) -»
				<!-- titolo pannello PRIMO livello -->
				<h3><s:text name="«cp.name».«this.name».label" /></h3>
				«ENDIF-»

				«REM»ATTENZIONE: qui devo espandere i sottopannelli del pannello di primo livello«ENDREM»
				«FOREACH this.subpanels AS subpanel»
					«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, true, UDLRCSpecConstants::CENTER) FOR subpanel»
				«ENDFOREACH»

			</div>
		</div>
	</div>
</div>
<!-- #################### FINE PANNELLO CONTENUTI #################### -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per l'UDLRC (Up-Down-Left-Right-Center) Layout«ENDREM»
«DEFINE setupUDLRCL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ####################### PANNELLO CONTENUTI ###################### -->
<div id="contentPanel">

	«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
	«IF upPanel != null -»
	<!-- ================ UDLRC Layout UP PANEL ================ -->
	<div id="northPanel">
		<div class="wrapper">
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		</div>
	</div>
	<!-- ================ FINE UDLRC Layout UP PANEL ================ -->
	«ENDIF-»
	«ENDLET-»


	«LET getSubPanelByLayout(this, UDLRCSpecConstants::LEFT) AS leftPanel-»
	«LET getSubPanelByLayout(this, UDLRCSpecConstants::RIGHT) AS rightPanel-»
	<!-- ================ UDLRC Layout WEST-CENTER-EAST WRAPPER ================ -->
	<div id="«getWestCenterEastWrapperId(leftPanel, rightPanel).toFirstLower()»Wrapper" class="floatWrapper">
		«IF leftPanel != null -»
		<!-- ***** UDLRC Layout LEFT PANEL ***** -->
		<div id="westPanel">
			<div class="wrapper">
			«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::LEFT) FOR leftPanel»
			</div>
		</div>
		<!-- ***** FINE UDLRC Layout LEFT PANEL ***** -->
		«ENDIF-»


		<!-- ***** UDLRC Layout CENTER PANEL ***** -->
		<div id="centerPanel">
			<div class="wrapper">
				«IF !isNullOrEmpty(this.label) -»
				<!-- titolo pannello PRIMO livello -->
				<h3><s:text name="«cp.name».«this.name».label" /></h3>
				«ENDIF-»

				«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
					«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::CENTER) FOR centerPanel»
				«ENDLET-»
			</div>
		</div>
		<!-- ***** FINE UDLRC Layout CENTER PANEL ***** -->


		«IF rightPanel != null -»
		<!-- ***** UDLRC Layout RIGHT PANEL ***** -->
		<div id="eastPanel">
			<div class="wrapper">
			«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::RIGHT) FOR rightPanel»
			</div>
		</div>
		<!-- ***** FINE UDLRC Layout RIGHT PANEL ***** -->
		«ENDIF-»

	</div>
	<!-- ================ FINE UDLRC Layout WEST-CENTER-EAST WRAPPER ================ -->
	«ENDLET-»
	«ENDLET-»


	«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
	«IF downPanel != null -»
	<!-- ================ UDLRC Layout DOWN PANEL ================ -->
	<div id="southPanel">
		<div class="wrapper">
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		</div>
	</div>
	<!-- ================ FINE UDLRC Layout DOWN PANEL ================ -->
	«ENDIF-»
	«ENDLET-»

</div>
<!-- #################### FINE PANNELLO CONTENUTI #################### -->
«ENDDEFINE»



«REM»
************** Multi Panel e tipi derivati (TabsetPanel, WizardPanel) **************
«ENDREM»

«REM»TabsetPanel«ENDREM»
«DEFINE setupTabSetPanel(GUIModel model) FOR TabSetPanel»
«IF !isNullOrEmpty(this.label)-»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
<div class="tabSetPanel" id="«this.name»">
	<ul>
	«FOREACH this.panels AS currTab ITERATOR i-»
		«LET i.firstIteration ? " || #session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == null" : "" AS stepExtraCondition -»
		<s:url id="«getMultiPanelName(this, currTab)»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«getSelectedMultiPanelName(this)»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«getMultiPanelName(this, currTab)»'}" />
		</s:url>
		<s:if test="%{#session.«getSelectedMultiPanelName(this)»_selectedMultiPanel == '«getMultiPanelName(this, currTab)»'«stepExtraCondition»}">
			<li class="item-«i.counter1» active"><span class="activeItem"><s:text name="«findParentContentPanel(this).name».«currTab.name».label" /></span></li>
		</s:if>
		<s:else>
			<li class="item-«i.counter1»"><s:a href="%{«getMultiPanelName(this, currTab)»_URL}"><s:text name="«findParentContentPanel(this).name».«currTab.name».label" /></s:a></li>
		</s:else>
		«ENDLET-»
	«ENDFOREACH-»
	</ul>
</div>
«ENDDEFINE»

«REM»WizardPanel«ENDREM»
«DEFINE setupWizardPanel(GUIModel model) FOR WizardPanel»
«IF !isNullOrEmpty(this.label)-»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
<div class="wizardPanel" id="«this.name»">
	<ol>
	«FOREACH this.panels AS currStep ITERATOR i-»
		«LET i.firstIteration ? " || #session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == null" : "" AS stepExtraCondition -»
		<s:url id="«getMultiPanelName(this, currStep)»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«getSelectedMultiPanelName(this)»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«getMultiPanelName(this, currStep)»'}" />
		</s:url>
		«LET i.counter1.toString() AS stepNumber-»
		<s:if test="%{#session.«getSelectedMultiPanelName(this)»_selectedMultiPanel == '«getMultiPanelName(this, currStep)»'«stepExtraCondition»}">
			«EXPAND setupActiveWizardNavigatorCurrentItem(model, this, stepExtraCondition, stepNumber) FOR currStep-»
		</s:if>
		<s:else>
			«IF this.navigatorActive-»
				«EXPAND setupActiveWizardNavigatorNotCurrentItem(model, this, stepNumber) FOR currStep-»
			«ELSE-»
				«EXPAND setupPassiveWizardNavigatorNotCurrentItem(model, this, stepNumber) FOR currStep-»
			«ENDIF-»
		</s:else>
		«ENDLET-»
		«ENDLET-»
	«ENDFOREACH-»
	</ol>
</div>
«ENDDEFINE»

«DEFINE setupActiveWizardNavigatorCurrentItem(GUIModel model, WizardPanel wizard, String stepExtraCondition, String stepNumber) FOR Panel-»
	«LET this AS currStep-»
	<li class="item-«stepNumber» active"><span class="activeItem"><s:text name="«findParentContentPanel(wizard).name».«currStep.name».label" /></span></li>
	«ENDLET-»
«ENDDEFINE»

«DEFINE setupActiveWizardNavigatorNotCurrentItem(GUIModel model, WizardPanel wizard, String stepNumber) FOR Panel»
	«LET this AS currStep-»
	<li class="item-«stepNumber»"><s:a href="%{«getMultiPanelName(wizard, currStep)»_URL}"><s:text name="«findParentContentPanel(wizard).name».«currStep.name».label" /></s:a></li>
	«ENDLET-»
«ENDDEFINE»

«DEFINE setupPassiveWizardNavigatorNotCurrentItem(GUIModel model, WizardPanel wizard, String stepNumber) FOR Panel»
	«LET this AS currStep-»
	<li class="item-«stepNumber»"><s:text name="«findParentContentPanel(wizard).name».«currStep.name».label" /></li>
	«ENDLET-»
«ENDDEFINE»


«REM»
************** StdMessagePanel (Pannello per errori) **************
«ENDREM»

«DEFINE setupStdMessagePanel(GUIModel model, ContentPanel cp) FOR StdMessagePanel»
<div class="stdMessagePanel" id="«this.name»">
	<customtag:stdMessagePanel id="«this.name»" errorMessage="«showFieldErrors»" errorDetails="«showFieldErrorDetails»" actionMessage="«showGlobalMessages»" isStandalone="true" />
</div>
«ENDDEFINE»


«REM»
************** UserInfoPanel (pannello con le informazioni sull'utente loggato) **************
«ENDREM»

«DEFINE setupUserInfoPanel(GUIModel model, ContentPanel cp) FOR UserInfoPanel»
«LET ((List[ApplicationData])getAllApplicationData(model)).select(ad|ad.name=="currentUser").first() AS currentUserAD-»
<div class="userInfoPanel" id="«this.name»">
	<div class="userData">
		<span class="user">Utente: <span class="value"><s:property value="«getAppDataKey(currentUserAD)».nome" /> <s:property value="«getAppDataKey(currentUserAD)».cognome" /></span></span>
		<span class="organization">Ente: <span class="value"><s:property value="«getAppDataKey(currentUserAD)».ente" /></span></span>
		<span class="role">Ruolo: <span class="value"><s:property value="«getAppDataKey(currentUserAD)».ruolo" /></span></span>
	</div>
	<div class="userInfoActions">
		<!-- uscita dal servizio e/o cambio ruolo -->
		<s:url id="localLogoutUrl" action="Logout" method="localLogout" />
		<s:a href="%{localLogoutUrl}" title="chiudi: questo link fa uscire dal servizio">esci</s:a>
	</div>
</div>
«ENDLET-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - PANNELLI
==========================================================================================================================
«ENDREM»

«REM»Genera la header di un sottopannello di tipo FormPanel (solo se non è un FormPanel "contenitore")«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF (this.subpanels.select(e|e.metaType == MultiPanel).size == 0 && this.subpanels.select(e|e.metaType == TabSetPanel).size == 0 && this.subpanels.select(e|e.metaType == WizardPanel).size == 0) && !((this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) && !(this.subpanels.select(e|e.metaType == FormPanel).size == 0)) -»
«IF !isNullOrEmpty(this.label) && !(this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) -»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
<div class="formPanel«IF this.layout.metaType == UDLRCPanelLayout» floatWrapper«ENDIF»" id="«this.name»">
«ENDIF-»
«ENDDEFINE»

«REM»Genera la header di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR CommandPanel»
«LET (this.cmdStyle == CommandStyles::NAVIGATION ? " navigation" : (this.cmdStyle == CommandStyles::FUNCTIONAL ? " functional" : "" ) ) AS ptype-»
<div class="commandPanel«ptype»" id="«this.name»">
«ENDLET-»
«ENDDEFINE»

«REM»Genera la header di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR MenuPanel»
<div class="menuPanel«getMenuPanelOrientation(this)»" id="«this.name»">
«ENDDEFINE»


«REM»Genera la footer di un sottopannello di tipo FormPanel (solo se non è un FormPanel "contenitore")«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF (this.subpanels.select(e|e.metaType == MultiPanel).size == 0 && this.subpanels.select(e|e.metaType == TabSetPanel).size == 0 && this.subpanels.select(e|e.metaType == WizardPanel).size == 0) && !((this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) && !(this.subpanels.select(e|e.metaType == FormPanel).size == 0)) -»
</div>
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR CommandPanel»
</div>
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR MenuPanel»
</div>
«ENDDEFINE»


«REM»
************** WidgetsPanel **************
«ENDREM»

«REM»Genera la header di un sottopannello di tipo WidgetsPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR WidgetsPanel»
«IF !this.widgets.isEmpty -»
<div class="widgetsPanel" id="«this.name»">
	«IF this.widgets.select(e|e.metaType == Table).size == 0»
	<customtag:widgetsPanel id="«this.name»Tbl" columns="«getGridPanelColumnsNumber(this)»" tableStyleClass="formTable"
		summary="«this.summary»" «IF !isNullOrEmpty(this.label)»caption="«this.label»"«ENDIF» isStandalone="true"
		«getPanelGridPercentCols(this)»>
	«ENDIF»
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo WidgetsPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR WidgetsPanel»
«IF !this.widgets.isEmpty -»
	«IF this.widgets.select(e|e.metaType == Table).size == 0»
	</customtag:widgetsPanel>
	«ENDIF»
</div>
«ENDIF-»
«ENDDEFINE»


«REM»
************** User Defined Panel **************
«ENDREM»

«REM»Genera la header di un pannello di tipo UserDefinedPanel«ENDREM»
«DEFINE userDefinedPanelControlHeader(GUIModel model) FOR UserDefinedPanel-»
<div class="userDefinedPanel" id="«this.name»">
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo UserDefinedPanel«ENDREM»
«DEFINE userDefinedPanelControlFooter(GUIModel model) FOR UserDefinedPanel-»
</div>
«ENDDEFINE»


«REM»
************** Dialog Panel **************
«ENDREM»

«REM»Genera la header di un pannello di tipo DialogPanel«ENDREM»
«DEFINE dialogPanelControlHeader(GUIModel model) FOR DialogPanel-»
«IF model.structure.appWindow.header != null-»
<s:include value="../fragments/header.jsp" ></s:include>
«ENDIF-»

<s:form id="«this.name»Form" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="post">

	<!-- ####################### PANNELLO CONTENUTI ###################### -->
	<div id="contentPanel">
		<div id="centerWrapper" class="floatWrapper">
			<div id="centerPanel">

				<div class="dialogPanel" id="«this.name»">
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo DialogPanel«ENDREM»
«DEFINE dialogPanelControlFooter(GUIModel model) FOR DialogPanel-»
				</div>

			</div>
		</div>
	</div>
	<!-- #################### FINE PANNELLO CONTENUTI #################### -->

</s:form>

«IF model.structure.appWindow.footer != null-»
<s:include value="../fragments/footer.jsp" ></s:include>
«ENDIF-»
«ENDDEFINE»


«REM»
************** MsgBoxPanel (STDMDD-245: solo se inseriti in DialogPanel ) **************
«ENDREM»

«REM»Genera la header di un pannello di tipo MsgBoxPanel«ENDREM»
«DEFINE msgBoxPanelControlHeader FOR MsgBoxPanel»
<div class="msgBoxPanel«getMsgBoxPanelStyleByPortal((GUIModel)this.eRootContainer, this)»" id="«this.name»">
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo MsgBoxPanel«ENDREM»
«DEFINE msgBoxPanelControlFooter FOR MsgBoxPanel»
</div>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - WIDGETS
==========================================================================================================================
«ENDREM»

«REM»--------------- Widget ---------------«ENDREM»

«REM»Genera la header di un widget generico«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
<customtag:widgetsPanelColumn «IF this.label != null»labelField="true" textLabel="«getText(this)»" labelFor="«getWidgetLabelFor(this)»"«ENDIF»
	«getCustomtagColumnPosition(wp, this, isFirst, isLast)» «getCustomtagHeaderColspan(wp, this)» «getCustomtagRequiredField(this)»>
«ENDDEFINE»

«REM»Genera la footer di un widget generico«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
</customtag:widgetsPanelColumn>
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget generico«ENDREM»
«DEFINE widgetClose(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
«IF needHandleCustomtagCloseHspan(wp, this) -»
<s:else>
	<customtag:widgetsPanelColumn textValue="" «getCustomtagCloseColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»/>
</s:else>
«ENDIF-»
«ENDDEFINE»


«REM»--------------- PlainText ---------------«ENDREM»

«REM»Genera la header di un widget di tipo PlainText per un FormPanel«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR PlainText»
<customtag:widgetsPanelColumn «IF this.label != null»labelField="true" textLabel="«getText(this)»" labelFor="«getWidgetLabelFor(this)»"«ENDIF» «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)» «getCustomComponentColumnStyleByPortal((GUIModel)wp.eRootContainer, this)»>
«ENDDEFINE»

«REM»Genera la header di un widget di tipo PlainText per un MsgBoxPanel«ENDREM»
«DEFINE widgetControlHeader(MsgBoxPanel mbp, Boolean isFirst, Boolean isLast) FOR PlainText»
<p>
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo PlainText per un MsgBoxPanel«ENDREM»
«DEFINE widgetControlFooter(MsgBoxPanel mbp, Boolean isFirst, Boolean isLast) FOR PlainText»
</p>
«ENDDEFINE»


«REM»--------------- HiddenValue ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
<div class="hidden">
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
</div>
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»--------------- Button ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«REM»Non faccio niente«ENDREM»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«REM»Non faccio niente«ENDREM»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Button»
<customtag:widgetsPanelColumn «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
«ENDDEFINE»


«REM»--------------- Table ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Table (ATTENZIONE: non ci devono essere tabelle annidate, quindi niente CustomTag)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Table»
<div class="tableWidget">
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Table (ATTENZIONE: non ci devono essere tabelle annidate, quindi niente CustomTag)«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Table»
</div>
«ENDDEFINE»



«REM»--------------- UserDefinedWidget ---------------«ENDREM»

«REM»Genera la header di un widget di tipo UserDefinedWidget (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR UserDefinedWidget»
<customtag:widgetsPanelColumn «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
	<div class="userDefinedWidget" id="«this.name»">
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo UserDefinedWidget«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR UserDefinedWidget»
	</div>
</customtag:widgetsPanelColumn>
«ENDDEFINE»


«REM»--------------- MenuView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»


«REM»--------------- TreeView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»



«REM»
************** Markup HTML dei Widgets specifici  **************
«ENDREM»

«REM»Genera la componente di markup (HTML) della header un grupppo di RadioButton (RadioButtons).«ENDREM»
«DEFINE widgetMarkupHeader FOR RadioButtons»
<div id="«getWidgetLabelFor(this)»">
«ENDDEFINE»

«REM»Genera la componente di markup (HTML) del footer un grupppo di RadioButton (RadioButtons).«ENDREM»
«DEFINE widgetMarkupFooter FOR RadioButtons»
</div>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione delle LABEL (i18n) => file: i18nfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera le label per la header«ENDREM»
«DEFINE headerLabels FOR GUIModel-»
header.applicativo.nome.label=«this.structure.appWindow.header.nomeApplicativo»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione del BUILD => file: buildfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera le dipendenze realtive ai temi di struts specifici per i portali«ENDREM»
«DEFINE strutsThemeIvy FOR GUIModel»
<dependency org="csipiemonte" name="util-struts2-customcomponent" rev="1.2.0">
	<artifact name="custom-component-1.2.0" type="jar"/>
	<artifact name="custom-component-attr-1.2.0" type="jar"/>
	<artifact name="custom-component-rich-1.2.0" type="jar"/>
</dependency>
<dependency org="csipiemonte" name="util-struts2-csitemplate" rev="1.1.0">
	<artifact name="util-struts2-csitemplate-1.1.0" type="jar"/>
</dependency>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei files di CONFIGURAZIONE => file: configfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera la porzione del file di configurazione della DisplayTag che potrebbe variare a seconda dei portali«ENDREM»
«DEFINE displayTagConfigurationFile FOR GUIModel»
############################################################################
# MESSAGES

basic.msg.empty_list=<div class="feedSearch">Non ci sono elementi da visualizzare.</div>
basic.msg.empty_list_row=<tr class="empty"><td colspan="{0}">Non ci sono elementi da visualizzare.</td></tr>
error.msg.invalid_page=pagina non valida

# PAGING
paging.banner.item_name=risultato
paging.banner.items_name=risultati

paging.banner.no_items_found=<div class="paging"><div class="pagingLeft">Nessun {0} trovato.</div>
paging.banner.one_item_found=<div class="paging"><div class="pagingLeft">Un {0} trovato.</div>
paging.banner.all_items_found=<div class="paging"><div class="pagingLeft">{0} {1} trovati, tutti i {2} visualizzati.</div>
paging.banner.some_items_found=<div class="paging"><div class="pagingLeft">{0} {1} trovati ({5} pagine)</div>

paging.banner.full=<div class="pagingRight"><span class="pageNumbers">{0}</span><span class="pageNavigation"><span class="firstPage"><a href="{1}">prima</a></span><span class="separator"> | </span><span class="previousPage"><a href="{2}"><abbr title="precedente">prec</abbr></a></span><span class="separator"> | </span><span class="nextPage"><a href="{3}"><abbr title="successivo">succ</abbr></a></span><span class="separator"> | </span><span class="lastPage"><a href="{4}">ultima</a></span></span></div></div>
paging.banner.first=<div class="pagingRight"><span class="pageNumbers">{0}</span><span class="pageNavigation"><span class="nextPage"><a href="{3}"><abbr title="successivo">succ</abbr></a></span><span class="separator"> | </span><span class="lastPage"><a href="{4}">ultima</a></span></span></div></div>
paging.banner.last=<div class="pagingRight"><span class="pageNumbers">{0}</span><span class="pageNavigation"><span class="firstPage"><a href="{1}">prima</a></span><span class="separator"> | </span><span class="previousPage"><a href="{2}"><abbr title="precedente">prec</abbr></a></span></span></div></div>
paging.banner.onepage=<div class="pagingRight"><span class="pageNumbers">pagina {0}</span></div></div>

paging.banner.page.selected=<span class="currentPage">{0}</span>
paging.banner.page.link=<a href="{1}" title="Vai a pagina {0}">{0}</a>
paging.banner.page.separator=<span class="separator"> | </span>


#EXPORT
export.banner=<div class="export">{0}</div>
export.banner.sepchar=<span class="separator"> | </span>

export.excel.label=<span class="xls">scarica in Excel</span>
export.pdf.label=<span class="pdf">scarica in PDF</span>
export.csv.label=<span class="csv">CSV</span>
export.xml.label=<span class="xml">XML</span>
export.rtf.label=<span class="rtf">RTF</span>


############################################################################
# CSS PERSONALIZZATI

css.table=

css.th.sortable=sortable
css.th.sorted=sorted
css.th.ascending=asc
css.th.descending=desc

css.tr.even=even
css.tr.odd=odd
«ENDDEFINE»
