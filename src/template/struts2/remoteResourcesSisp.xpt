«IMPORT guigen»

«IMPORT template::struts2::resourcefiles»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»


«REM»
**************************************************************************************************************************
Markup HTML per SISTEMA PIEMONTE
Riferimenti:
	- Pattern Sistema Piemonte (http://dev-www.sistemapiemonte.it/sandbox/templates/repository/pattern/index.shtml)
	- Reference implementation su Efesto (http://dev-proxy.csi.it:10080/refimplsisp/)
**************************************************************************************************************************
«ENDREM»


«REM»
==========================================================================================================================
Definizioni generali: Pagine di ERRORE
==========================================================================================================================
«ENDREM»

«REM»Crea la pagina di errore 404 Page Not Found«ENDREM»
«DEFINE getJspPageNotFoundErrorSistemaPiemonte FOR GUIModel-»
«EXPAND getJspErrorPageHeader FOR this-»
<h3><s:text name="error.notfound.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		Attenzione! <br/> Pagina non trovata
		<s:text name="error.notfound.warning" /> <br/> <s:text name="error.notfound.message" />
	</div>
	<div class="pulsNav">
		<div class="pulsNavDx">
			<s:url id="homePageUrl" action="HomePage" />
			<s:a href="%{homePageUrl}" title="%{getText('error.notfound.btnmsg')" cssClass="nav95"><s:text name="error.notfound.btnmsg" /></s:a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooter FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per le ApplicationError (Runtime) [java.lang.RuntimeException]«ENDREM»
«DEFINE getJspApplicationErrorSistemaPiemonte FOR GUIModel-»
«EXPAND getJspErrorPageHeader FOR this-»
<h3><s:text name="error.applicationerror.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		<s:property value="#session.errore"/>
		<s:actionerror/>
	</div>
	<div class="pulsNav">
		<div class="pulsNavDx">
			<s:url id="homePageUrl" action="HomePage" />
			<s:a href="%{homePageUrl}" title="%{getText('error.applicationerror.btnmsg')" cssClass="nav95"><s:text name="error.applicationerror.btnmsg" /></s:a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooter FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per un Errore generico (FATAL) [java.lang.Throwable]«ENDREM»
«DEFINE getJspFatalErrorSistemaPiemonte FOR GUIModel-»
«EXPAND getJspErrorPageHeader FOR this-»
<h3><s:text name="error.fatalerror.title" /></h3>
<div class="contenuti">
	<div class="messaggioKo">
		<s:text name="error.fatalerror.message" />
		<s:actionerror/>
	</div>
	<div class="pulsNav">
		<div class="pulsNavDx">
			<s:url id="homePageUrl" action="HomePage" />
			<s:a href="%{homePageUrl}" title="%{getText('error.fatalerror.btnmsg')" cssClass="nav95"><s:text name="error.fatalerror.btnmsg" /></s:a>
		</div>
	</div>
</div>
«EXPAND getJspErrorPageFooter FOR this-»
«ENDDEFINE»


«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeader FOR GUIModel-»
	«IF this.structure.appWindow.header != null-»
	<s:include value="../fragments/header.jsp" ></s:include>
	«ENDIF-»

	<!-- ----------------------- PANNELLO CONTENUTI ---------------------- -->
	«IF this.structure.appWindow.appArea.menubar != null-»
	<div id="sfondo">
		<h2 class="alt">menu della sezione</h2>

		<!------------------ COLONNA SX ------------------>
		<div id="colonnaSinistra">
			<s:include value="../fragments/menu.jsp"></s:include>
		</div>
		<!---------------- FINE COLONNA SX ---------------->

		<hr />

		<!------------------ COLONNA DX ------------------>
		<div id="colonnaDestra">
			<h2 class="alt">contenuti</h2>
	«ELSE-»
	<div id="sfondoColonna">

		<!----------------- COLONNA UNICA ---------------->
		<div id="colonna">
			<h2 class="alt">contenuti</h2>
	«ENDIF-»
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooter FOR GUIModel-»
	«IF this.structure.appWindow.appArea.menubar != null-»
		</div>
		<!---------------- FINE COLONNA DX ---------------->
	«ELSE-»
		</div>
		<!-------------- FINE COLONNA UNICA -------------->
	«ENDIF-»
	</div>
	<!-- -------------------- FINE PANNELLO CONTENUTI -------------------- -->

	«IF this.structure.appWindow.footer != null-»
	<s:include value="../fragments/footer.jsp" ></s:include>
	«ENDIF-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Definizioni generali: header, footer, ecc
==========================================================================================================================
«ENDREM»

«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkupSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation) FOR Header -»
<r:include url="/ris/include/«codCanale»/«codApplicativo»/head.html" resourceProvider="sp" />
<!--/head -->
«REM»RIMOSSO: implementata REMINCL
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--head (senza remincl: TMP)-->
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
		<title>Sistema Piemonte - Area Tematica - Nome servizio</title>
		<meta name="author" content="CSI-Piemonte" />
		<meta name="description" content="Sistema Piemonte il portale per cittadini ed imprese" />
		<meta name="keywords" content="piemonte, servizi, cittadini, imprese, sistema, amministrazione" />

		<link type="text/css" href="<%=request.getContextPath()%>/css/area/area.css" rel="stylesheet" media="screen" />
		<link rel="stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/struttura800dueCol.css" title="plain"/>
		<link rel="alternate stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/strutturaFluidodueCol.css" title="fluido" />
		<link rel="alternate stylesheet" type="text/css" href="<%=request.getContextPath()%>/ris/css/generaliV3/struttura800dueCol.css" title="standard" />
		<link href="<%=request.getContextPath()%>/css/tab_righeAlterne.css" rel="stylesheet" type="text/css" media="screen" />
		<link href="<%=request.getContextPath()%>/css/paginazione.css" rel="stylesheet" type="text/css" media="screen" />

		<script type="text/javascript" src="<%=request.getContextPath()%>/sandbox/templates/repository/pattern/javascript/changeStyle.js"></script>
		<script type="text/javascript" src="<%=request.getContextPath()%>/ris/js/generaliV3/jquery/jqsisp-0.9.pack.js"></script>
		<script type="text/javascript" src="<%=request.getContextPath()%>/js/lib.js"></script>

<!--/head -->
«ENDREM»

		<script type="text/javascript" src="/ris/js/generaliV3/pulsantiPadreFiglio.js"></script>

	</head>
	<body>

		<!-- PAGINA (ATTENZIONE: verra' chiusa nella footer (remincl) -->
		<div id="pagina" class="colonnaUnica">

			<!-- TESTATA -->
			<div id="intestazione">

				<!--header (con remincl)-->
				<r:include url="/ris/include/headerSisp.html" resourceProvider="sp" />
				<!--/header-->

				«REM»RIMOSSO: implementata REMINCL
				<!--header (senza remincl: TMP)-->
				<p id="avviso" class="navigazionePagina">
					<a href="#contPath" id="A-inizio"
						title="Salta i menu e vai direttamente ai contenuti" tabindex="1">Salta
						l&#8217;intestazione</a><span class="alt">|</span>
				</p>
				<div id="logo">
					<h1 class="alt">
						<a href="http://www.sistemapiemonte.it/"
							title="Home page SistemaPiemonte">Sistema Piemonte</a>
					</h1>
				</div>
				<div id="scritta">
					<span class="alt"> - <a
						href="http://www.sistemapiemonte.it/"
						title="Home page SistemaPiemonte">l'amministrazione pubblica
							al tuo servizio</a> </span>
				</div>
				<hr />
				<p class="navigazionePagina">
					<a href="#colonnaDestra" title="vai direttamente ai contenuti">vai
						ai contenuti</a> |
					<a href="#sfondo" title="vai al menu della sezione">vai al menu
						della sezione</a>
				</p>
				<hr />
				<div id="sisp">
				</div>

				<div id="menuDiServizio">
					<p class="navigazionePagina">Sistema piemonte - menu di navigazione</p>
					<ul class="menuTendinaOrizz" id="menu-1">
						<li><a href="http://www.sistemapiemonte.it/index.shtml">home</a></li>
						<li><a href="http://www.sistemapiemonte.it/servizi/">indice servizi</a></li>
						<li><a href="http://www.sistemapiemonte.it/informazioni/">informazioni</a></li>
						<li><a href="http://search.sistemapiemonte.it/mrceli/searchsp">cerca</a></li>
						<li><a href="http://webmail.sistemapiemonte.it/">posta</a></li>
						<!-- <li><a href="#">profilo personale</a></li> -->
					</ul>
				</div>

				<noscript>
					<div id="avvisoJavascript">
						<p>
							<strong>ATTENZIONE - Il browser in uso non supporta le applicazioni Javascript.</strong>
							<br />
							Per poter usufruire in maniera completa dei servizi presenti in
							SistemaPiemonte, &eacute; necessario utilizzare un browser che
							supporti le funzioni Javascript.
						</p>
					</div>
				</noscript>
				<hr />
				<!--/header (senza remincl: TMP)-->
				«ENDREM»
				«IF model.securityModel!=null-»
				«LET model.appDataDefs.appData.select(ad|ad.name=="currentUser").first() AS currentUserAD-»
				<div id="contUtenza">
					<div id="Utenza">
						utente:
						<strong><s:property value="«getAppDataKey(currentUserAD)».nome" /> <s:property value="«getAppDataKey(currentUserAD)».cognome" /></strong>&nbsp;
						<span class="logout"><a href="#" title="esci: questo link fa uscire dal servizio">esci</a></span>
					</div>
				</div>
				«ENDLET-»
				«ENDIF-»
				<!--filo d'arianna canale-->
				<div id="contPath">
					<div id="path">
						sei in:
						<a href="http://www.sistemapiemonte.it/index.shtml">sistema
							piemonte</a><span class="connessionePath">,&nbsp;</span><a
							href="http://www.sistemapiemonte.it/index.shtml">area
							tematica</a><span class="connessionePath">,&nbsp;</span>
						<span class="selezione">Reference implementation sistema piemonte</span>
					</div>
				</div>
				<hr />
				<!--fine filo arianna canale-->

				<div id="contTitoloEmenu">
					<div id="titoloEmenu" class="nomeServizio">
						<a href="#"><span class="txtHidden">home nome servizio</span>
						</a>
					</div>
				</div>
			</div>
			<!-- FINE TESTATA -->

			<hr />

			<!-- CONTENITORE + CORPO -->
			<div id="contenitore">
				<div id="corpo">
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) deli LINK STATICI.
TODO: capire cosa sono e come vadano realmente implementati realmente.«ENDREM»
«DEFINE getStaticLinkMarkupSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation) FOR StaticLinks»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della MENUBAR.
TODO: come faccio a sapere qual'è il menu attivo?
NOTE IMPLEMENTATIVE: E' stato utilizzato il pattern menu (http://dev-www.sistemapiemonte.it/sandbox/templates/repository/pattern/menu.shtml).
Questo pattern prevede due possibilità:
- menu "cavalieri" con struttura già espansa (non richiede JavaScript): quattro livelli
- menu "dropDown" con struttura espandibile (richiede JavaScript): due livelli?
Si è scelta l'opzione "cavalieri" in quanto non richiede nè JavaScript nè indicatori sequenziali per le voci di menu.
Dal momento che i CSS gestiscono fino a quattro livelli, è necessario porre un check in fase di generazione del codice
(o di definizione del modello) in modo che non si possa andare più in profondità del quarto livello,
e che il quarto livello sia obbligatoriamente un MenuItem con possibilità di link.
«ENDREM»
«DEFINE getMenubarMarkupSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation) FOR Menubar»
<div id="menuDiNavigazioneSisp2">
	<ul class="menuCavalieri">
	«LET 1 AS level -»
	«FOREACH this.topLevelMenu AS tlmenu -»
	«IF hasUniqueMenuItem(tlmenu)-»
		«REM»Se c'è un solo item, lo espando come fosse un primo livello«ENDREM»
		«EXPAND getMenuItemMarkupSistemaPiemonte(level) FOR tlmenu.item.first() -»
	«ELSE-»
		«EXPAND getMenuMarkupSistemaPiemonte(level) FOR tlmenu»
	
	«ENDIF-»
	«ENDFOREACH-»
	«ENDLET-»
	</ul>
</div>
«ENDDEFINE»

«REM»Genera un MenuItem«ENDREM»
«DEFINE getMenuItemMarkupSistemaPiemonte(int level) FOR MenuItem -»
	<s:if test="isMenuVisible('«this.name»')" >
«IF this.eventHandler.eventType == EventTypes::CLICKED-»
	«LET this.eventHandler.command AS currAction-»
	  <s:if test="isMenuEnabled('«this.name»')" >
	    <s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" />
	    <li «getMenuItemCssSistemaPiemonte(this, level)»>
		  <s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»">
			  «getMenuItemLabelSistemaPiemonte(this, level)»
		  </s:a>
	    </li>
	  </s:if>
	  <s:else>
	  	<li><s:text name="«this.name».label" /></li>
	  </s:else>
	«ENDLET-»
«ELSE-»
	  	<li><s:text name="«this.name».label" /></li>
«ENDIF-»
	</s:if>
«ENDDEFINE»

«DEFINE getMenuMarkupSistemaPiemonte(int level) FOR Menu -»
	<s:if test="isMenuVisible('«this.name»')" >
«IF this.eventHandler.eventType == EventTypes::CLICKED-»
	«LET this.eventHandler.command AS currAction-»
	  <s:if test="isMenuEnabled('«this.name»')" >
	    <s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" />
	    <li «getMenuCssSistemaPiemonte(this, level, true)»>
		  <s:a «getMenuLinkCssSistemaPiemonte(this, level)» href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»">
			  «getMenuLabelSistemaPiemonte(this, level)»
		  </s:a>
		  «IF this.item.size>0 || this.submenu.size>0»
		  <ul>
		  	«EXPAND getMenuItemMarkupSistemaPiemonte(level+1) FOREACH this.item»
	  	  	«EXPAND getSubMenuMarkupSistemaPiemonte(level+1) FOREACH this.submenu»
	  	  </ul>
	  	  «ENDIF»
	    </li>
	  </s:if>
	  <s:else>
	  	<li «getMenuCssSistemaPiemonte(this, level, false)»><s:text name="«this.name».label" />
	  	«IF this.item.size>0 || this.submenu.size>0»
		  <ul>
	  		«EXPAND getMenuItemMarkupSistemaPiemonte(level+1) FOREACH this.item»
	  		«EXPAND getSubMenuMarkupSistemaPiemonte(level+1) FOREACH this.submenu»
	      </ul>
	    «ENDIF»
	  	</li>
	  </s:else>
	«ENDLET-»
«ELSE-»
	  	<li «getMenuCssSistemaPiemonte(this, level, false)»><s:text name="«this.name».label" />
	  	«IF this.item.size>0 || this.submenu.size>0»
		  <ul>
	  		«EXPAND getMenuItemMarkupSistemaPiemonte(level+1) FOREACH this.item»
	  		«EXPAND getSubMenuMarkupSistemaPiemonte(level+1) FOREACH this.submenu»
	  	  </ul>
	  	«ENDIF»
	  	</li>
«ENDIF-»
	</s:if>
«ENDDEFINE»


«REM»Genera un sottoMenu«ENDREM»
«DEFINE getSubMenuMarkupSistemaPiemonte(int level) FOR Menu»
<s:if test="isMenuVisible('«this.name»')" >
  <li class="sottomenu">«this.label»
	<ul>

	«REM»Espando gli Item«ENDREM»
	«FOREACH this.item AS currMenuItem-»
		«EXPAND getMenuItemMarkupSistemaPiemonte(level+1) FOR currMenuItem»
	«ENDFOREACH-»

	«REM»Espando i sottomenu«ENDREM»
	«FOREACH this.submenu AS currSubMenu-»
		«EXPAND getSubMenuMarkupSistemaPiemonte(level+1) FOR currSubMenu»
	«ENDFOREACH-»
	</ul>
  </li>
</s:if>
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della FOOTER«ENDREM»
«DEFINE getFooterMarkupSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation) FOR Footer»
					<hr />

				</div>
			</div>
			<!-- CONTENITORE + CORPO -->

<!--footer (con remincl)-->
<r:include url="/ris/include/footerSisp.html" resourceProvider="sp" />

«REM»RIMOSSO: implementata REMINICL
<!--footer (senza remincl: TMP)-->
			<!--piedipagina-->
			<div id="piedipagina">
				<p id="noteSito" title="per informazioni: info@sistemapiemonte.it">
					<a href="mailto:info@sistemapiemonte.it"><span class="alt">per informazioni: info@sistemapiemonte.it</span></a>
				</p>
				<p class="navigazionePagina">
					[ <a href="#intestazione">Torna all'inizio della pagina</a> ]
				</p>
			</div>
			<!--/piedipagina-->

		</div>
		<!--/pagina-->

	</body>
</html>
«ENDREM»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei PANNELLI
==========================================================================================================================
«ENDREM»


«REM»Per il momento si parte dall'assunzione che a primo livello ci siano solo Form Pnels«ENDREM»
«DEFINE setupFirstLevelFormPanelSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«IF this.layout.metaType == VerticalFlowPanelLayout-»
	«EXPAND setupVFLSistemaPiemonte(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF this.layout.metaType == UDLRCPanelLayout-»
	«EXPAND setupUDLRCLSistemaPiemonte(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF this.layout.metaType == HorizontalFlowPanelLayout-»
	«REM»Come lo gestisco?«ENDREM»
«ENDIF-»

«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per il Vertical Flow Layout«ENDREM»
«DEFINE setupVFLSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ----------------------- PANNELLO CONTENUTI ---------------------- -->
<div id="sfondoColonna">

	<!----------------- COLONNA UNICA ---------------->
	<div id="colonna">
		<h2 class="alt">contenuti</h2>

		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello 1° livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«REM»ATTENZIONE: qui devo espandere i sottopannelli del pannello di primo livello«ENDREM»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::CENTER) FOR this»

	</div>
	<!-------------- FINE COLONNA UNICA -------------->

</div>
<!-- -------------------- FINE PANNELLO CONTENUTI -------------------- -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per l'UDLRC (Up-Down-Left-Right-Center) Layout«ENDREM»
«DEFINE setupUDLRCLSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
«LET getColumnsLayout(this) AS numeroColonne-»
«IF numeroColonne == 1 -»
	«EXPAND setupUnaColonnaSistemaPiemonte(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF numeroColonne == 2 -»
	«EXPAND setupDueColonneSistemaPiemonte(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF numeroColonne == 3 -»
	«EXPAND setupTreColonneSistemaPiemonte(model, skip_component_dir_creation, cp) FOR this»
«ELSE-»

«ENDIF-»
«ENDLET-»
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a COLONNA UNICA ([U][D]C)«ENDREM»
«DEFINE setupUnaColonnaSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ----------------------- PANNELLO CONTENUTI ---------------------- -->
<div id="sfondoColonna">

	<!----------------- COLONNA UNICA ---------------->
	<div id="colonna">
		<h2 class="alt">contenuti</h2>

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ##### UDLRC Layout: UP PANEL ##### -->
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ##### FINE UDLRC Layout: UP PANEL ##### -->
		«ENDIF-»
		«ENDLET-»


		<!-- ##### UDLRC Layout: CENTER PANEL ##### -->

		<!-- titolo pannello 1° livello -->
		«IF !isNullOrEmpty(this.label) -»
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ##### FINE UDLRC Layout: CENTER PANEL ##### -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ##### UDLRC Layout: DOWN PANEL ##### -->
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ##### FINE UDLRC Layout: DOWN PANEL ##### -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!-------------- FINE COLONNA UNICA -------------->

</div>
<!-- -------------------- FINE PANNELLO CONTENUTI -------------------- -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a DUE COLONNE ([U][D]LC)«ENDREM»
«DEFINE setupDueColonneSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ----------------------- PANNELLO CONTENUTI ---------------------- -->
<div id="sfondo">
	<h2 class="alt">menu della sezione</h2>

	<!------------------ COLONNA SX ------------------>
	<div id="colonnaSinistra">
		«LET getSubPanelByLayout(this, UDLRCSpecConstants::LEFT) AS leftPanel-»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::LEFT) FOR leftPanel»
		«ENDLET-»
	</div>
	<!---------------- FINE COLONNA SX ---------------->

	<hr />

	<!------------------ COLONNA DX ------------------>
	<div id="colonnaDestra">
		<h2 class="alt">contenuti</h2>

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ##### UDLRC Layout: UP PANEL ##### -->
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ##### FINE UDLRC Layout: UP PANEL ##### -->
		«ENDIF-»
		«ENDLET-»

		<!-- ##### UDLRC Layout: CENTER PANEL ##### -->

		<!-- titolo pannello primo livello -->
		«IF !isNullOrEmpty(this.label) -»
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ##### FINE UDLRC Layout: CENTER PANEL ##### -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ##### UDLRC Layout: DOWN PANEL ##### -->
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ##### FINE UDLRC Layout: DOWN PANEL ##### -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!---------------- FINE COLONNA DX ---------------->

</div>
<!-- -------------------- FINE PANNELLO CONTENUTI -------------------- -->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a TRE COLONNE ([U][D]LRC)«ENDREM»
«DEFINE setupTreColonneSistemaPiemonte(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- ----------------------- PANNELLO CONTENUTI ---------------------- -->
<div id="sfondo" class="treColonne">
	<h2 class="alt">menu della sezione</h2>

	<!-- ---------------- COLONNA SX ---------------- -->
	<div id="colonnaSinistra">
		«LET getSubPanelByLayout(this, UDLRCSpecConstants::LEFT) AS leftPanel-»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::LEFT) FOR leftPanel»
		«ENDLET-»
	</div>
	<!-- -------------- FINE COLONNA SX -------------- -->

	<hr />

	<!-- ----------------- COLONNA CENTRALE ---------------- -->
	<div id="colonnaCentrale">

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ##### UDLRC Layout: UP PANEL ##### -->
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ##### FINE UDLRC Layout: UP PANEL ##### -->
		«ENDIF-»
		«ENDLET-»


		<!-- ##### UDLRC Layout: CENTER PANEL ##### -->

		<!-- titolo pannello primo livello -->
		«IF !isNullOrEmpty(this.label) -»
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ##### FINE UDLRC Layout: CENTER PANEL ##### -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ##### UDLRC Layout: DOWN PANEL ##### -->
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ##### FINE UDLRC Layout: DOWN PANEL ##### -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!-- -------------- FINE COLONNA CENTRALE -------------- -->


	<!-- ----------- COLONNA EXTRA (DESTRA) ---------- -->
	<div id="colonnaExtra">
		<h2 class="alt">informazioni</h2>

		«LET getSubPanelByLayout(this, UDLRCSpecConstants::RIGHT) AS rightPanel-»
		«EXPAND resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::RIGHT) FOR rightPanel»
		«ENDLET-»
	</div>
	<!-- -------- FINE COLONNA EXTRA (DESTRA) -------- -->

</div>
<!-- -------------------- FINE PANNELLO CONTENUTI -------------------- -->
«ENDDEFINE»


«REM»
************** Tabset Panel **************
«ENDREM»

«REM»
TODO:
1. stili: ci sono stili diversi da gestire sulla base della posizione del pannello e della sua attivazione o meno
     - tab3 (tab normale), tabAttivo3 (nel caso il tab sia attivo)
     - tabUltimo3 (ultimo tab del pannello), tabAttivoUltimo3 (nel caso l'ultimo tab sia attivo)
2. Come si fa a riconoscere il tab attivo?
3. Come si può implementare il meccanismo di cambio tab? (va fatto sulla classe Java della Action)
«ENDREM»
«DEFINE setupTabSetPanelSistemaPiemonte(GUIModel model) FOR TabSetPanel»
	<div class="conthTab">
	«FOREACH this.panels AS currTab ITERATOR i-»
		«REM»TAPPO PER PROVARE SENZA LOGICA JAVA DI APPOGGIO -> SOSTITUIRE CON LOGICA VERA«ENDREM»
		«LET i.lastIteration ? "<s:property value=\"%{#session."+this.name+"_selectedMultiPanel == '"+this.name+"_"+currTab.name+"' ? 'tabAttivoUltimo3' : 'tabUltimo3'}\" />" : "<s:property value=\"%{#session."+this.name+"_selectedMultiPanel == '"+this.name+"_"+currTab.name+"'" + (i.firstIteration ? " || #session."+this.name+"_selectedMultiPanel == null" : "") + " ? 'tabAttivo3' : 'tab3'}\" />" AS tabStyle-»
		<s:url id="«this.name»_«currTab.name»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«this.name»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«this.name»_«currTab.name»'}" />
		</s:url>
		<div class="«tabStyle»"><s:a href="%{«this.name»_«currTab.name»_URL}"><s:text name="«findParentContentPanel(this).name».«currTab.name».label" /></s:a></div>
		«ENDLET-»
	«ENDFOREACH-»
	</div>
«ENDDEFINE»


«REM»
************** StdMessagePanel (Pannello per errori) **************
«ENDREM»

«DEFINE setupStdMessagePanelSistemaPiemonte(GUIModel model, ContentPanel cp) FOR StdMessagePanel»
<div class="contenuti">
	<customtag:panelGrid id="«this.name»" errorDetails="«showFieldErrorDetails»" errorMessage="«showFieldErrors»" actionMessage="«showGlobalMessages»" />
</div>
«ENDDEFINE»


«REM»
************** UserInfoPanel (pannello con le informazioni sull'utente loggato) **************
«ENDREM»

«DEFINE setupUserInfoPanelSistemaPiemonte(GUIModel model, ContentPanel cp) FOR UserInfoPanel»
«LET model.appDataDefs.appData.select(ad|ad.name=="currentUser").first() AS currentUserAD-»
<div id="contUtente">
	<div id="Utente">
		<span id="datiUtente">
			Utente: <strong><s:property value="«getAppDataKey(currentUserAD)».nome" /> <s:property value="«getAppDataKey(currentUserAD)».cognome" /></strong> | Ente: <strong><s:property value="«getAppDataKey(currentUserAD)».ente" /></strong><br/>
			Ruolo: <strong><s:property value="«getAppDataKey(currentUserAD)».ruolo" /></strong>
		</span>
		<span class="logoutApplicativo"><a href="#" title="chiudi: questo link fa uscire dal servizio">esci</a></span>
	</div>
</div>
«ENDLET-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - PANNELLI
==========================================================================================================================
«ENDREM»

«REM»Genara la header di un sottopannello di tipo FormPanel«ENDREM»
«DEFINE subPanelControlHeaderSistemaPiemonte(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF !isNullOrEmpty(this.label) -»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
<div class="contenuti">
	«IF !this.subpanels.isEmpty || !this.widgets.isEmpty -»
	<customtag:panelGrid id="«this.name»" columns="«getGridPanelColumnsNumber(this)»" errorDetails="false" errorMessage="false" actionMessage="false">
	«ENDIF-»
«ENDDEFINE»

«REM»Genara la header di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlHeaderSistemaPiemonte(UDLRCSpecConstants quadrante) FOR CommandPanel»
«LET (this.layout.metaType == UDLRCPanelLayout ? "class=\"pulsNav\"" : (this.layout.metaType == HorizontalFlowPanelLayout ? "class=\"pulsFunz\"" : "" ) ) AS ptype-»
<div «ptype»>
«ENDLET-»
«ENDDEFINE»

«REM»Genara la header di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlHeaderSistemaPiemonte(UDLRCSpecConstants quadrante) FOR MenuPanel»
«REM»Non faccio niente (per il momento)«ENDREM»
«ENDDEFINE»


«REM»Genara la footer di un sottopannello di tipo FormPanel«ENDREM»
«DEFINE subPanelControlFooterSistemaPiemonte(UDLRCSpecConstants quadrante) FOR FormPanel»
	«IF !this.subpanels.isEmpty || !this.widgets.isEmpty -»
	</customtag:panelGrid>
	«ENDIF-»
</div>
«ENDDEFINE»

«REM»Genara la footer di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlFooterSistemaPiemonte(UDLRCSpecConstants quadrante) FOR CommandPanel»
</div>
«ENDDEFINE»

«REM»Genara la footer di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlFooterSistemaPiemonte(UDLRCSpecConstants quadrante) FOR MenuPanel»
«REM»Non faccio niente (per il momento)«ENDREM»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - WIDGETS
==========================================================================================================================
«ENDREM»

«REM»--------------- Widget ---------------«ENDREM»

«REM»Genera la header di un widget generico«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Widget»
«IF needHandleCustomtagHeaderHspan(fp, this)-»
<customtag:column textLabel="«getText(this)»" labelFor="widg_«this.name»" «getCustomtagColumnPosition(fp, this, isFirst, isLast, true)» />
<customtag:column colSpan="«getCustomtagHeaderColspan(this)»" «getCustomtagColumnPosition(fp, this, isFirst, isLast, false)»>
«ELSE-»
<customtag:column labelField="true" textLabel="«getText(this)»" labelFor="widg_«this.name»" «getCustomtagColumnPosition(fp, this, isFirst, isLast, false)»>
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un widget generico«ENDREM»
«DEFINE widgetControlFooterSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Widget»
</customtag:column>
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget generico«ENDREM»
«DEFINE widgetCloseSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Widget»
«IF needHandleCustomtagCloseHspan(fp, this) -»
<s:else>
	<customtag:column textValue="" «getCustomtagCloseColspan(fp, this)» «getCustomtagColumnPosition(fp, this, isFirst, isLast, false)»/>
</s:else>
«ENDIF-»
«ENDDEFINE»


«REM»--------------- HiddenValue ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooterSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetCloseSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»--------------- Button ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Button»
«IF fp.layout.metaType == UDLRCPanelLayout-»
«LET (((UDLRCWidgetLayoutSpec)this.layoutSpec).value == UDLRCSpecConstants::LEFT ? "class=\"pulsNavSx\"" : (((UDLRCWidgetLayoutSpec)this.layoutSpec).value == UDLRCSpecConstants::RIGHT ? "class=\"pulsNavDx\"" : "" ) ) AS side-»
<div «side»>
«ENDLET-»
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooterSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Button»
«IF fp.layout.metaType == UDLRCPanelLayout-»
</div>
«ENDIF-»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetCloseSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»


«REM»--------------- Table ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Table»
«LET needHandleCustomtagHeaderHspan(fp, this) ? getCustomtagHeaderColspan(this)+1 : 2 AS colSpan-»
<customtag:column colSpan="«colSpan»" «getCustomtagColumnPosition(fp, this, isFirst, isLast, false)»>
«ENDLET-»
«ENDDEFINE»


«REM»--------------- UserDefinedWidget ---------------«ENDREM»

«REM»Genera la header di un widget di tipo UserDefinedWidget (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR UserDefinedWidget»
«LET needHandleCustomtagHeaderHspan(fp, this) ? getCustomtagHeaderColspan(this)+1 : 2 AS colSpan-»
<customtag:column colSpan="«colSpan»" «getCustomtagColumnPosition(fp, this, isFirst, isLast, false)»>
«ENDLET-»
«ENDDEFINE»


«REM»--------------- MenuView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooterSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetCloseSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»


«REM»--------------- TreeView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeaderSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooterSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetCloseSistemaPiemonte(FormPanel fp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

