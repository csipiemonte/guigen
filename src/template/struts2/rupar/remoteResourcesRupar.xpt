«IMPORT guigen»

«IMPORT template::struts2::resourcefiles»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::struts2::rupar::Struts2ExtensionsRupar»


«REM»
**************************************************************************************************************************
Markup HTML per RUPAR
Riferimenti:
    - Repository RuparPiemonte (http://dev-portale.ruparpiemonte.it/sandbox/template/repository/index.shtml)
	- Pattern RuparPiemonte (http://dev-portale.ruparpiemonte.it/sandbox/template/repository/patterns/index.shtml)
	- Reference implementation su Efesto (http://dev-proxy.csi.it:10080/refimpl/)
**************************************************************************************************************************
«ENDREM»


«REM»
==========================================================================================================================
Definizioni generali: Pagine di ERRORE
==========================================================================================================================
«ENDREM»

«REM»Crea la pagina di errore 404 (Page Not Found) -> NO STRUTS«ENDREM»
«DEFINE getJspPageNotFoundError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<h3><fmt:message key="error.notfound.title" /></h3>
<div id="boxError">
	<p>
		<fmt:message key="error.notfound.warning" /> <br/> <fmt:message key="error.notfound.message" />
	</p>
</div>
<div class="pulsanti">
	<span class="barraTot">
		<a href="HomePage.do"><fmt:message key="error.notfound.btnmsg" /></a>
	</span>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore 500 (Internal Server Error) -> NO STRUTS«ENDREM»
«DEFINE getJspFatalError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<h3><fmt:message key="error.fatalerror.title" /></h3>
<div id="boxError">
	<p>
		<fmt:message key="error.fatalerror.warning" /> <br/> <fmt:message key="error.fatalerror.message" />
	</p>
</div>
<div class="pulsanti">
	<span class="barraTot">
		<a href="HomePage.do"><fmt:message key="error.fatalerror.btnmsg" /></a>
	</span>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per le ApplicationError (Runtime) [java.lang.RuntimeException]«ENDREM»
«DEFINE getJspApplicationError FOR GUIModel-»
«EXPAND getJspErrorPageHeaderStruts FOR this-»
<h3><s:text name="error.applicationerror.title" /></h3>
<div id="boxError">
	<p>
		<s:text name="error.applicationerror.warning" /> <s:text name="error.applicationerror.message" /><br/>
		<s:property value="%{exception.message}"/>
	</p>
</div>
<div class="pulsanti">
	<span class="barraTot">
		<s:url id="homePageUrl" action="HomePage" />
		<s:a href="%{homePageUrl}"><s:text name="error.applicationerror.btnmsg" /></s:a>
	</span>
</div>
«EXPAND getJspErrorPageFooterStruts FOR this-»
«ENDDEFINE»


«REM»Crea la pagina di errore per errore da Sessione scaduta -> NO STRUTS«ENDREM»
«DEFINE getJspPageSessionExpiredFile FOR GUIModel»
«EXPAND getJspErrorPageHeaderNoStruts FOR this-»
<h3><fmt:message key="error.sessionexpired.title" /></h3>
<div id="boxError">
	<p>
		<fmt:message key="error.sessionexpired.warning" /><br/>
		<fmt:message key="error.sessionexpired.timeout" /><br/>
	</p>
	<p class="msgError">
		<fmt:message key="error.sessionexpired.datanotsaved" /><br/>
		<fmt:message key="error.sessionexpired.authentication" />
	</p>
</div>
<div class="pulsanti">
	<span class="barraTot">
		<a href="HomePage.do"><fmt:message key="error.sessionexpired.btnmsgservicehome" /></a>
	</span>
</div>
<div class="pulsanti">
	<span class="barraTot">
		<a href="http://www.ruparpiemonte.it/"><fmt:message key="error.sessionexpired.btnmsgportalhome" /></a>
	</span>
</div>
«EXPAND getJspErrorPageFooterNoStruts FOR this-»
«ENDDEFINE»



«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeaderStruts FOR GUIModel-»
<%@ taglib uri="/struts-tags" prefix="s" %>
	«IF this.structure.appWindow.header != null-»
	<s:include value="../fragments/header.jsp" ></s:include>
	«ENDIF-»

	<!-- righe -->
	<div id="righe">
	
		<!-- =============== COLONNA UNICA ============== -->
		<div id="colonna">
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooterStruts FOR GUIModel-»
		</div>
		<!-- ============ FINE COLONNA UNICA ============ -->
	
	</div>
	<!-- fine righe-->

	«IF this.structure.appWindow.footer != null-»
	<s:include value="../fragments/footer.jsp" ></s:include>
	«ENDIF-»
«ENDDEFINE»


«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeaderNoStruts FOR GUIModel-»
<%@ taglib uri="http://java.sun.com/jstl/fmt" prefix="fmt" %>

<fmt:setBundle basename="globalMessages" />

	«IF this.structure.appWindow.header != null-»
	<jsp:include page="../fragments/headerNoStruts.jsp" />
	«ENDIF-»

	<!-- righe -->
	<div id="righe">
	
		<!-- =============== COLONNA UNICA ============== -->
		<div id="colonna">
«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooterNoStruts FOR GUIModel-»
		</div>
		<!-- ============ FINE COLONNA UNICA ============ -->
	
	</div>
	<!-- fine righe-->

	«IF this.structure.appWindow.footer != null-»
	<jsp:include page="../fragments/footer.jsp" />
	«ENDIF-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Definizioni generali: header, footer, ecc
==========================================================================================================================
«ENDREM»

«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Header -»
<r:include url="/include/«codApplicativo»/head.html" resourceProvider="sp" />
<!-- fine head (con remincl) -->
«REM»RIMOSSO: implementata REMINCL
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
		<meta name="author" content="CSI-Piemonte" />
		<title>Intranet RuparPiemonte - Nome servizio</title>

		<link href="/css_rupar/generali/NN4.css" rel="stylesheet" type="text/css" media="screen" />
		<link href="/css_rupar/generali/print.css" rel="stylesheet" type="text/css" media="print" />
		<link href="/css_rupar/generali/templateBASE/indiceTemplate.css" type="text/css" rel="stylesheet" media="screen" id="skin" />

		<script type="text/javascript" src="/js_rupar/menu.js"></script>
		<script type="text/javascript" src="/js_rupar/newWinPop.js"></script>
		<script type="text/javascript" src="/js_rupar/overOutHandler.js"></script>

		<!--QUI SOTTO INCLUSIONE ELENCO DI TUTTI I JS DISPONIBILI
		INSERIRE SOLO QUELLI CHE SERVONO PER UN NUOVO SERVIZIO DIRETTAMENTE SULL'HEAD DEL SERVIZIO-->
		<!--#include virtual="/include/templateBASE/head_js_generali.html" -->
<!--/head -->
«ENDREM»
		<customtag:ajaxify-header />
	</head>
	<body>
		<div id="pagina" class="colonnaUnica">«REM»ATTENZIONE!!! questo è PARTE di un layout ad una colonna: in futuro bisognerà intervenire«ENDREM»

			<!-- INTESTAZIONE -->
			<div id="intestazione">

				<!-- testalino (con remincl) -->
				<r:include url="/include/headerRuparNoCav.html" resourceProvider="sp" />
				<!-- fine testalino (con remincl) -->

				«REM»RIMOSSO: implementata REMINCL
				<!-- testalino (senza remincl) -->
				<noscript>
					<div id="avvisoJavascript"><p><strong>ATTENZIONE! Il browser in uso non supporta le applicazioni Javascript.</strong><br />
						Per usufruire in maniera completa di alcuni servizi presenti in Intranet RuparPiemonte,<br />
				 		potrebbe essere necessario l'utilizzo dei <a href="javascript.shtml" title="informazioni su come abilitare le funzioni javascript su i pi&ugrave; diffusi browser">Javascript</a>.</p>
					</div>
					<hr />
				</noscript>

				<div id="bannerRuparNoCav">
					<p id="avviso" class="navigazionePagina"><a href="#navigazione" title="Salta i menu e vai direttamente ai contenuti">Salta l&#8217;intestazione</a></p>
					<hr />
					<h1><a id="A-inizio"><span class="alt">intranet.ruparpiemonte.it</span></a></h1>
				</div>

				<hr />

				<div id="menuNN4" class="navigazionePagina">
					<a href="#corpo">Vai ai contenuti</a> | <a href="#navigazione">Vai al men&ugrave; della sezione</a>
				</div>
				<!-- fine testalino (senza remincl) -->
				«ENDREM»

				<hr />

				<!-- MENU' DI NAVIGAZIONE -->
				<div id="titoloEmenu">
					<h2><a id="navigazione"><span class="alt">«this.nomeCanale» - «this.nomeApplicativo»</span></a></h2>
					«IF model.structure.appWindow.appArea.menubar != null-»
					<s:include value="menu.jsp"></s:include>
					«ENDIF-»
				</div>
				<!-- FINE MENU' DI NAVIGAZIONE -->

			</div>
			<div class="left"></div>
			<!--FINE INTESTAZIONE-->

			<hr />

			<!-- CORPO -->
			<div id="corpo">
				<h2 class="alt">Contenuti</h2>
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkupNoStruts(GUIModel model, boolean skip_component_dir_creation) FOR Header -»
<r:include url="/include/«codApplicativo»/head.html" resourceProvider="sp" />
<!-- fine head (con remincl) -->

	</head>
	<body>
		<div id="pagina" class="colonnaUnica">«REM»ATTENZIONE!!! questo è PARTE di un layout ad una colonna: in futuro bisognerà intervenire«ENDREM»

			<!-- INTESTAZIONE -->
			<div id="intestazione">

				<!-- testalino (con remincl) -->
				<r:include url="/include/headerRuparNoCav.html" resourceProvider="sp" />
				<!-- fine testalino (con remincl) -->

				<hr />

				<!-- MENU' DI NAVIGAZIONE -->
				<div id="titoloEmenu">
					<h2><a id="navigazione"><span class="alt">«this.nomeCanale» - «this.nomeApplicativo»</span></a></h2>
					«REM»il menu utilizza struts... che facciamo?
					«IF model.structure.appWindow.appArea.menubar != null-»
					<s:include value="menu.jsp"></s:include>
					«ENDIF-»«ENDREM»
				</div>
				<!-- FINE MENU' DI NAVIGAZIONE -->

			</div>
			<div class="left"></div>
			<!--FINE INTESTAZIONE-->

			<hr />

			<!-- CORPO -->
			<div id="corpo">
				<h2 class="alt">Contenuti</h2>
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) deli LINK STATICI.
TODO: capire cosa sono e come vadano realmente implementati realmente.«ENDREM»
«DEFINE getStaticLinkMarkup(GUIModel model, boolean skip_component_dir_creation) FOR StaticLinks»
<s:include value="staticLinks.jsp"></s:include>

	«FILE getJspFragmentsMarkupDir(model, skip_component_dir_creation) + "/staticLinks.jsp"-»<%@ taglib uri="/struts-tags" prefix="s" %>
	«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("staticLinksJspFile")»
	<!-- STATIC LINKS CODE -->
	«ENDPROTECT»
	«ENDFILE-»

«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della MENUBAR.
NOTA: per il momento è stata implementato il menu ad un livello solo«ENDREM»
«DEFINE getMenubarMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Menubar»
<div id="menuDiNavigazione">
	<span class="alt">Menu di navigazione</span>
	<ul class="menuTendina" id="menu-2">
	«LET 1 AS level -»
	«FOREACH this.topLevelMenu AS tlmenu -»
		«IF tlmenu.submenu.size > 0»
			«EXPAND expandMenuWithChild(level) FOR tlmenu -»«REM»Il menu ha dei figli: è un sovramenu«ENDREM»
		«ELSE»
			«EXPAND expandMenuNoChild(level) FOR tlmenu -»«REM»Il menu non ha dei figli: non è un sovramenu«ENDREM»
		«ENDIF»
	«ENDFOREACH-»
	«ENDLET-»
	
	«IF model.structure.appWindow.appArea.staticLinks != null-»
		«EXPAND getStaticLinkMarkup(model, skip_component_dir_creation) FOR model.structure.appWindow.appArea.staticLinks-»
	«ENDIF-»	
	</ul>
</div>
«ENDDEFINE»


«REM»Genera un Menu che non ha dei sottomenu (corrispone al vecchio MenuItem)«ENDREM»
«DEFINE expandMenuNoChild(int level) FOR Menu -»
<s:if test="isMenuVisible('«this.name»')">
«IF this.eventHandler.eventType == EventTypes::CLICKED-»
	«LET this.eventHandler.command AS currAction-»
	<s:if test="isMenuEnabled('«this.name»')" >
		<s:url id="targetUrl«this.name.toFirstUpper()»" action="goTo«this.name.toFirstUpper()»FromMenu" includeParams="none" />
		<li«getMenuNoChildCssRupar(this, level)»>
			<s:a href="%{targetUrl«this.name.toFirstUpper()»}" id="menu_items_«this.name»"«getMenuNoChildLinkCssRupar(this, level)»>
				«getMenuNoChildLabelRupar(this, level)»
			</s:a>
		</li>
	</s:if>
	<s:else>
		<li«getMenuNoChildCssRupar(this, level)»>«getMenuNoChildLabelRupar(this, level)»</li>
	</s:else>
	«ENDLET»
«ELSE»
	<li«getMenuNoChildCssRupar(this, level)»>«getMenuNoChildLabelRupar(this, level)»</li>
«ENDIF»
</s:if>
«ENDDEFINE»

«REM»Genera un Menu che ha dei sottomenu (corrispone al vecchio SubMenu)«ENDREM»
«DEFINE expandMenuWithChild(int level) FOR Menu»
	«ERROR "RUPAR: menu di secondo livello non ancora implementato"»
«ENDDEFINE»

«REM»Genera un sottoMenu«ENDREM»
«DEFINE expandSubMenu(int level) FOR Menu»
«IF this.submenu.size > 0»
	«EXPAND expandMenuWithChild(level) FOR this -»«REM»Il menu ha dei figli: è un sovramenu«ENDREM»
«ELSE»
	«EXPAND expandMenuNoChild(level) FOR this -»«REM»Il menu non ha dei figli: non è un sovramenu«ENDREM»
«ENDIF»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della FOOTER«ENDREM»
«DEFINE getFooterMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Footer»
			</div>
			<!-- FINE CORPO -->

			<hr />

			<r:include url="/include/footerRupar.html" resourceProvider="sp" />

«REM»RIMOSSO: implementata REMINICL
			<!--PIE DI PAGINA-->
			<div id="piedipagina">
				<p id="noteSito" title="RUPAR PIEMONTE LA RETE UNITARIA DELLA PUBBLICA AMMINISTRAZIONE DEL PIEMONTE"><span class="alt">RUPAR PIEMONTE LA RETE UNITARIA DELLA PUBBLICA AMMINISTRAZIONE DEL PIEMONTE</span></p>
				<p class="navigazionePagina"><a href="#A-inizio">Torna all'inizio della pagina</a></p>
			</div>
			<!--FINE PIE DI PAGINA-->

		</div>
		<!--/pagina-->
	</body>
</html>
«ENDREM»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei PANNELLI
==========================================================================================================================
«ENDREM»


«REM»Per il momento si parte dall'assunzione che a primo livello ci siano solo Form Pnels«ENDREM»
«DEFINE setupFirstLevelFormPanel(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«IF this.layout.metaType == VerticalFlowPanelLayout-»
	«EXPAND setupVFL(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF this.layout.metaType == UDLRCPanelLayout-»
	«EXPAND setupUDLRCL(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF this.layout.metaType == HorizontalFlowPanelLayout-»
	«ERROR "HorizontalFlowPanelLayout non gestito al primo livello per portale " + getPortalName()»
«ENDIF-»

«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per il Vertical Flow Layout«ENDREM»
«DEFINE setupVFL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- righe -->
<div id="righe">

	<!-- =============== COLONNA UNICA ============== -->
	<div id="colonna">
	
		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello 1° livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»
		
		«REM»ATTENZIONE: qui devo espandere i sottopannelli del pannello di primo livello«ENDREM»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::CENTER) FOR this»

	</div>
	<!-- ============ FINE COLONNA UNICA ============ -->

</div>
<!-- fine righe-->
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per l'UDLRC (Up-Down-Left-Right-Center) Layout«ENDREM»
«DEFINE setupUDLRCL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
«LET getColumnsLayout(this, model) AS numeroColonne-»
«IF numeroColonne == 1 -»
	«EXPAND setupUnaColonna(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF numeroColonne == 2 -»
	«EXPAND setupDueColonne(model, skip_component_dir_creation, cp) FOR this»
«ELSEIF numeroColonne == 3 -»
	«EXPAND setupTreColonne(model, skip_component_dir_creation, cp) FOR this»
«ELSE-»
	«ERROR "Portale " + getPortalName() + ". Numero di colonne maggiore di 3 : colonne trovate " + numeroColonne»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a COLONNA UNICA ([U][D]C)«ENDREM»
«DEFINE setupUnaColonna(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
<!-- righe -->
<div id="righe">

	<!-- =============== COLONNA UNICA ============== -->
	<div id="colonna">
	
		«LET getSubPanelByLayout(this, UDLRCSpecConstants::UP) AS upPanel-»
		«IF upPanel != null -»
		<!-- ***** UDLRC Layout: UP PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::UP) FOR upPanel»
		<!-- ***** FINE UDLRC Layout: UP PANEL ***** -->
		«ENDIF-»
		«ENDLET-»


		<!-- ***** UDLRC Layout: CENTER PANEL ***** -->

		«IF !isNullOrEmpty(this.label) -»
		<!-- titolo pannello 1° livello -->
		<h3><s:text name="«cp.name».«this.name».label" /></h3>
		«ENDIF-»
		
		«LET getSubPanelByLayout(this, UDLRCSpecConstants::CENTER) AS centerPanel-»
		«LET centerPanel.metaType == TabSetPanel ? true : false AS expLay-»
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, expLay, UDLRCSpecConstants::CENTER) FOR centerPanel»
		«ENDLET-»
		«ENDLET-»
		<!-- ***** FINE UDLRC Layout: CENTER PANEL ***** -->


		«LET getSubPanelByLayout(this, UDLRCSpecConstants::DOWN) AS downPanel-»
		«IF downPanel != null -»
		<!-- ***** UDLRC Layout: DOWN PANEL ***** -->
		«EXPAND template::struts2::resourcefiles::createAndAddSubpanel(model, skip_component_dir_creation, cp, false, UDLRCSpecConstants::DOWN) FOR downPanel»
		<!-- ***** FINE UDLRC Layout: DOWN PANEL ***** -->
		«ENDIF-»
		«ENDLET-»

	</div>
	<!-- ============ FINE COLONNA UNICA ============ -->

</div>
<!-- fine righe -->
«ENDDEFINE»

«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a DUE COLONNE ([U][D]LC)«ENDREM»
«DEFINE setupDueColonne(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
	«REM»TEMPORANEAMENTE gestisco l'UDLRC come una sola colonna ignorando RIGHT e LEFT«ENDREM»
	«EXPAND setupUnaColonna(model, skip_component_dir_creation, cp) FOR this»
«ENDDEFINE»


«REM»
Genera la struttura di markup (HTML) per un UDLRC Layout a TRE COLONNE ([U][D]LRC)
NOTA: non esiste un layout a 3 colonne in RUPAR, ma solo a due colonne
«ENDREM»
«DEFINE setupTreColonne(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»
	«REM»TEMPORANEAMENTE gestisco l'UDLRC come una sola colonna ignorando RIGHT e LEFT«ENDREM»
	«EXPAND setupUnaColonna(model, skip_component_dir_creation, cp) FOR this»
«ENDDEFINE»


«REM»
************** Multi Panel e tipi derivati (TabsetPanel, WizardPanel) **************
«ENDREM»

«REM»TabsetPanel«ENDREM»
«DEFINE setupTabSetPanel(GUIModel model) FOR TabSetPanel»
<div class="wizard2">
	<h4 class="alt">Sezioni</h4>
	<ul>
	«FOREACH this.panels AS currTab ITERATOR i-»
		«LET i.firstIteration ? " || #session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == null" : "" AS tabExtraCondition -»
		<s:url id="«getMultiPanelName(this, currTab)»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«getSelectedMultiPanelName(this)»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«getMultiPanelName(this, currTab)»'}" />
		</s:url>
		<li>
		<s:if test="%{#session.«getSelectedMultiPanelName(this)»_selectedMultiPanel == '«getMultiPanelName(this, currTab)»'«tabExtraCondition»}">
			<span class="attivo"><span class="alt">sezione attiva:</span><s:text name="«findParentContentPanel(this).name».«currTab.name».label" /></span>
		</s:if>
		<s:else>
			<s:a href="%{«getMultiPanelName(this, currTab)»_URL}"><s:text name="«findParentContentPanel(this).name».«currTab.name».label" /></s:a>
		</s:else>
		</li>
		«ENDLET-»
	«ENDFOREACH-»
	</ul>
</div>
«ENDDEFINE»

«REM»WizardPanel«ENDREM»
«DEFINE setupWizardPanel(GUIModel model) FOR WizardPanel»
<div class="wizard2">
	<h4 class="alt">Sezioni</h4>
	<ul>
	«FOREACH this.panels AS currStep ITERATOR i-»
		«LET i.firstIteration ? " || #session."+getSelectedMultiPanelName(this)+"_selectedMultiPanel == null" : "" AS tabExtraCondition -»
		<s:url id="«getMultiPanelName(this, currStep)»_URL" action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="handleChangeTab" includeParams="get">
			<s:param name="selectedTabKey" value="%{'«getSelectedMultiPanelName(this)»_selectedMultiPanel'}" />
			<s:param name="selectedTabValue" value="%{'«getMultiPanelName(this, currStep)»'}" />
		</s:url>
		<li>
		<s:if test="%{#session.«getSelectedMultiPanelName(this)»_selectedMultiPanel == '«getMultiPanelName(this, currStep)»'«tabExtraCondition»}">
			<span class="attivo"><span class="alt">sezione attiva:</span>«i.counter1». <s:text name="«findParentContentPanel(this).name».«currStep.name».label" /></span>
		</s:if>
		<s:else>
			<s:a href="%{«getMultiPanelName(this, currStep)»_URL}">«i.counter1». <s:text name="«findParentContentPanel(this).name».«currStep.name».label" /></s:a>
		</s:else>
		</li>
		«ENDLET-»
	«ENDFOREACH-»
	</ul>
</div>
«ENDDEFINE»


«REM»
************** StdMessagePanel (Pannello per errori) **************
«ENDREM»

«DEFINE setupStdMessagePanel(GUIModel model, ContentPanel cp) FOR StdMessagePanel»
<customtag:panelGrid id="«this.name»" scope="message" errorDetails="«showFieldErrorDetails»" errorMessage="«showFieldErrors»" actionMessage="«showGlobalMessages»" portale="«getPortalCode()»" />
«ENDDEFINE»


«REM»
************** UserInfoPanel (pannello con le informazioni sull'utente loggato) **************
«ENDREM»

«DEFINE setupUserInfoPanel(GUIModel model, ContentPanel cp) FOR UserInfoPanel»
«LET ((List[ApplicationData])getAllApplicationData(model)).select(ad|ad.name=="currentUser").first() AS currentUserAD-»
<div id="Utente">
	<span id="datiUtente">Utente: <strong><s:property value="«getAppDataKey(currentUserAD)».nome" /> <s:property value="«getAppDataKey(currentUserAD)».cognome" /></strong> | Ente: <strong><s:property value="«getAppDataKey(currentUserAD)».ente" /></strong></span>
	<span class="bugFix">&nbsp;|&nbsp;</span>
	<span id="chiudiSessione">
		<s:url id="localLogoutUrl" action="Logout" method="localLogout" />
		<s:a href="%{localLogoutUrl}" title="chiudi sessione: questo link fa uscire dal servizio">chiudi sessione</s:a>
	</span>
	<div class="both"></div>
</div>
«ENDLET-»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - PANNELLI
==========================================================================================================================
«ENDREM»

«REM»Genera la header di un sottopannello di tipo FormPanel solo se non è un FormPanel "contenitore"«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF (this.subpanels.select(e|e.metaType == MultiPanel).size == 0 && this.subpanels.select(e|e.metaType == TabSetPanel).size == 0 && this.subpanels.select(e|e.metaType == WizardPanel).size == 0) && !((this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) && !(this.subpanels.select(e|e.metaType == FormPanel).size == 0)) -»
«IF !isNullOrEmpty(this.label) && !(this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) -»
<h4><s:text name="«findParentContentPanel(this).name».«this.name».label" /></h4>
«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«REM»Genera la header di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR CommandPanel»
«LET (this.cmdStyle == CommandStyles::NAVIGATION ? "class=\"pulsantiForm\"" : (this.cmdStyle == CommandStyles::FUNCTIONAL ? "class=\"azioniForm\"" : "" ) ) AS ptype-»
<div «ptype»>
«ENDLET-»
«ENDDEFINE»

«REM»Genera la header di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR MenuPanel»

«ENDDEFINE»


«REM»Genera la footer di un sottopannello di tipo FormPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR FormPanel»
«IF (this.subpanels.select(e|e.metaType == MultiPanel).size == 0 && this.subpanels.select(e|e.metaType == TabSetPanel).size == 0 && this.subpanels.select(e|e.metaType == WizardPanel).size == 0) && !((this.eContainer.metaType == TabSetPanel || this.eContainer.metaType == WizardPanel) && !(this.subpanels.select(e|e.metaType == FormPanel).size == 0)) -»
«REM»TODO: dopo l'introduzione del WidgetsPanel qui non rimane niente«ENDREM»
«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR CommandPanel»
</div>
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR MenuPanel»

«ENDDEFINE»


«REM»
************** WidgetsPanel **************
«ENDREM»

«REM»Genera la header di un sottopannello di tipo WidgetsPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR WidgetsPanel»
	«IF !this.widgets.isEmpty -»
	<customtag:panelGrid id="«this.name»" columns="«getGridPanelColumnsNumber(this)»" errorDetails="false" errorMessage="false" actionMessage="false" portale="«getPortalCode()»" «getPanelGridPercentCols(this)»>
	«ENDIF-»
«ENDDEFINE»

«REM»Genera la footer di un sottopannello di tipo WidgetsPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR WidgetsPanel»
	«IF !this.widgets.isEmpty -»
	</customtag:panelGrid>
	«ENDIF-»
«ENDDEFINE»


«REM»
************** User Defined Panel **************
«ENDREM»

«REM»Genera la header di un pannello di tipo UserDefinedPanel«ENDREM»
«DEFINE userDefinedPanelControlHeader(GUIModel model) FOR UserDefinedPanel-»
«ENDDEFINE»

«REM»Genera la footer di un pannello di tipo UserDefinedPanel«ENDREM»
«DEFINE userDefinedPanelControlFooter(GUIModel model) FOR UserDefinedPanel-»
«ENDDEFINE»


«REM»
************** Dialog Panel **************
«ENDREM»
«DEFINE dialogPanelControlHeader(GUIModel model) FOR DialogPanel»
«IF model.structure.appWindow.header != null-»
<s:include value="../fragments/header.jsp" ></s:include>
«ENDIF-»

<s:form action="«getStrutsActionConfigName(findParentContentPanel(this))»" method="post">

	<!-- righe -->
	<div id="righe">
	
		<!-- =============== COLONNA UNICA ============== -->
		<div id="colonna">
«ENDDEFINE»


«DEFINE dialogPanelControlFooter(GUIModel model) FOR DialogPanel»
		</div>
		<!-- ============ FINE COLONNA UNICA ============ -->
	
	</div>
	<!-- fine righe -->

</s:form>

«IF model.structure.appWindow.footer != null-»
<s:include value="../fragments/footer.jsp" ></s:include>
«ENDIF-»
«ENDDEFINE»


«REM»
************** MsgBoxPanel (STDMDD-245: solo se inseriti in DialogPanel ) **************
«ENDREM»
«DEFINE msgBoxPanelControlHeader FOR MsgBoxPanel»
<div «getMsgBoxPanelStyleByPortal((GUIModel)this.eRootContainer, this)»>
«ENDDEFINE»


«DEFINE msgBoxPanelControlFooter FOR MsgBoxPanel»
</div>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - WIDGETS
==========================================================================================================================
«ENDREM»

«REM»--------------- Widget ---------------«ENDREM»

«REM»Genera la header di un widget generico«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
<customtag:column labelField="true" textLabel="«getText(this)»" labelFor="«getWidgetLabelFor(this)»" «getCustomtagColumnPosition(wp, this, isFirst, isLast)» «getCustomtagHeaderColspan(wp, this)»>
«ENDDEFINE»

«REM»Genera la footer di un widget generico«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
</customtag:column>
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget generico«ENDREM»
«DEFINE widgetClose(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Widget»
«IF needHandleCustomtagCloseHspan(wp, this) -»
<s:else>
	<customtag:column textValue="" «getCustomtagCloseColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»/>
</s:else>
«ENDIF-»
«ENDDEFINE»


«REM»--------------- PlainText ---------------«ENDREM»

«REM»Genera la header di un widget di tipo PlainText per un FormPanel«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR PlainText»
<customtag:column «IF this.label != null»labelField="true" textLabel="«getText(this)»" labelFor="«getWidgetLabelFor(this)»"«ENDIF» «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)» «getCustomComponentColumnStyleByPortal((GUIModel)wp.eRootContainer, this)»>
«ENDDEFINE»

«REM»Genera la header di un widget di tipo PlainText per un MsgBoxPanel«ENDREM»
«DEFINE widgetControlHeader(MsgBoxPanel mbp, Boolean isFirst, Boolean isLast) FOR PlainText»
«REM»Al momento non si fa niente«ENDREM»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo PlainText per un MsgBoxPanel«ENDREM»
«DEFINE widgetControlFooter(MsgBoxPanel mbp, Boolean isFirst, Boolean isLast) FOR PlainText»
«IF !isLast»<br/>«ENDIF»
«ENDDEFINE»


«REM»--------------- HiddenValue ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(CommandPanel cp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»--------------- Button ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(CommandPanel cmdp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Button»
<customtag:column «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
«ENDDEFINE»


«REM»--------------- Table ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Table (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Table»
<customtag:column «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
<div class="dataTable">
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Table«ENDREM»
«DEFINE widgetControlFooter(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR Table»
</div>
</customtag:column>
«ENDDEFINE»




«REM»--------------- UserDefinedWidget ---------------«ENDREM»

«REM»Genera la header di un widget di tipo UserDefinedWidget (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(WidgetsPanel wp, Boolean isFirst, Boolean isLast) FOR UserDefinedWidget»
<customtag:column «getCustomtagHeaderColspan(wp, this)» «getCustomtagColumnPosition(wp, this, isFirst, isLast)»>
«ENDDEFINE»


«REM»--------------- MenuView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»


«REM»--------------- TreeView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(MenuPanel mp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione delle LABEL (i18n) => file: i18nfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera le label per la header«ENDREM»
«DEFINE headerLabels FOR GUIModel-»




«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione del BUILD => file: buildfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera le dipendenze realtive ai temi di struts specifici per i portali«ENDREM»
«DEFINE strutsThemeIvy FOR GUIModel»
<dependency org="csipiemonte" name="util-struts2-csitemplate" rev="1.0.0">
	<artifact name="util-struts2-csitemplate-rupar-1.0.0" type="jar"/>
</dependency>
<dependency org="csipiemonte" name="util-struts2-csitemplate" rev="1.1.0">
	<artifact name="custom-component-1.1.0" type="jar"/>
	<artifact name="custom-component-attr-1.1.0" type="jar"/>
	<artifact name="custom-component-rich-1.1.0" type="jar"/>
</dependency>
<dependency org="csipiemonte" name="util-struts2-csitemplate" rev="1.0.3">
	<artifact name="util-struts2-csitemplate-1.0.3" type="jar"/>
</dependency>
«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei files di CONFIGURAZIONE => file: configfiles.xpt
==========================================================================================================================
«ENDREM»

«REM»Genera la porzione del file di configurazione della DisplayTag che potrebbe variare a seconda dei portali«ENDREM»
«DEFINE displayTagConfigurationFile FOR GUIModel»
############################################################################
# MESSAGES

basic.msg.empty_list=<div id="ncsdf">Non ci sono elementi da visualizzare.</div>
basic.msg.empty_list_row=<tr class="empty"><td colspan="{0}">Non ci sono elementi da visualizzare.</td></tr>
error.msg.invalid_page=pagina non valida


paging.banner.item_name=risultato
paging.banner.items_name=risultati

paging.banner.no_items_found=<div class="paginazione"><span class="sx">Nessun {0} trovato.</span><span class="bugFix"> | </span>
paging.banner.one_item_found=<div class="paginazione"><span class="sx">Un {0} trovato.</span><span class="bugFix"> | </span>
paging.banner.all_items_found=<div class="paginazione"><span class="sx">{0} {1} trovati, tutti i {2} visualizzati.</span><span class="bugFix"> | </span>
paging.banner.some_items_found=<div class="paginazione"><span class="sx">{0} {1} trovati ({5} pagine)</span><span class="bugFix"> | </span>

paging.banner.full=<span class="dx">{0} <a href="{1}">prima</a> <a href="{2}">&lt;&lt; prec</a> | <a href="{3}">succ &gt;&gt;</a> <a href="{4}">ultima</a></span></div>
paging.banner.first=<span class="dx">{0} <a href="{3}">succ &gt;&gt;</a> <a href="{4}">ultima</a></span></div>
paging.banner.last=<span class="dx">{0} <a href="{1}">prima</a> <a href="{2}">&lt;&lt; prec</a></span></div>
paging.banner.onepage=<span class="dx">pagina {0}</span></div>

paging.banner.page.selected=<span class="evidenzaLink">{0}</span>
paging.banner.page.link=<a href="{1}" title="Vai a pagina {0}">{0}</a>
paging.banner.page.separator=<span class="bugFix"> | </span>


export.banner=<div class="opzioni">{0}</div>
export.banner.sepchar= 

export.csv.label=<span class="export csv">CSV</span>
export.excel.label=<span class="xls">scarica in excel</span>
export.pdf.label=<span class="pdf">scarica in pdf</span>
export.rtf.label=<span class="export rtf" title="Esporta solo la pagina corrente in formato rtf">RTF</span>


############################################################################
# CSS PERSONALIZZATI

#css.tr.even=normalRow
#css.tr.odd=alternateRow
#css.th.sorted=siord
#css.th.ascending=su
#css.th.descending=giu
#css.table
#css.th.sortable=dis
«ENDDEFINE»
