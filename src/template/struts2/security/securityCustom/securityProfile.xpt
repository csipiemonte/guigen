«REM»
C) Copyright 2011 CSI-PIEMONTE;                                             
                                                                            
Concesso in licenza a norma dell'EUPL, esclusivamente versione 1.1;         
Non e' possibile utilizzare l'opera salvo nel rispetto della Licenza.       
E' possibile ottenere una copia della Licenza al seguente indirizzo:        
                                                                            
http://www.eupl.it/opensource/eupl-1-1                                      
                                                                            
Salvo diversamente indicato dalla legge applicabile o concordato per        
iscritto, il software distribuito secondo i termini della Licenza e'        
distribuito "TAL QUALE", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO,         
esplicite o implicite.                                                      
Si veda la Licenza per la lingua specifica che disciplina le autorizzazioni 
e le limitazioni secondo i termini della Licenza.                           
«ENDREM»

«IMPORT guigen»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::struts2::security::securityCustom::SecurityProfileExtensions»

«REM»Definizione e Mapping Authentication Filter da modellazione SecurityProfile«ENDREM»
«DEFINE authenticationFilterSecurityProfile(GUIModel model) FOR SecurityProfile» 
«IF this.intAuthGuard != null-»
	«EXPAND internalAuthenticationFilter(model) FOR this.intAuthGuard-»
«ENDIF-»
«IF this.extAuthGuard != null-»
	«REM»comment«EXPAND externalAuthenticationFilter(model) FOR this.extAuthGuard-»«ENDREM»
«ENDIF-»

«ENDDEFINE»


«REM»Definizione InternalAuthenticationGuard«ENDREM»
«DEFINE internalAuthenticationFilter(GUIModel model) FOR InternalAuthenticationGuard» 

	<!-- ############################################################### 
         definizione filter per autenticazione interna
         ###############################################################
    -->
	<filter>
	    <filter-name>Internal Authentication Filter</filter-name>
    	<filter-class>«getInternalAuthenticationFilterFQN(model)»</filter-class>
    	«IF this.loginModule!=null-»
    	<init-param>
      		<param-name>loginPage</param-name>
    		«IF this.loginModule.internal == true-»
      		<param-value>/«model.codComponente»/secure/localLoginUI.do</param-value>
	      	«ELSE»
      		<param-value>@loginUi.external@</param-value>
      		«ENDIF»
    	</init-param>
    	«ENDIF»
    	
    	«IF this.params!=null-»
    	«LET this.params.params AS envConfigParams-»
    	«IF envConfigParams!=null && !envConfigParams.isEmpty-»
    	«FOREACH envConfigParams AS envConfigParam-»
    	<init-param>
      		<param-name>«envConfigParam.name»</param-name>
      		<param-value>@«envConfigParam.name»@</param-value>
    	</init-param>
    	«ENDFOREACH-»
    	«ENDIF-»
    	«ENDLET-»
    	«ENDIF-» 
    	   	
	</filter>
  
	<filter>
		<filter-name>ID Adapter Custom</filter-name>
		<filter-class>«getIdAdapterCustomFilterFQN(model)»</filter-class>
		«IF this.loginModule!=null-»
    	<init-param>
      		<param-name>loginPage</param-name>
    		«IF this.loginModule.internal == true-»
      		<param-value>/«model.codComponente»/secure/localLoginUI.do</param-value>
	      	«ELSE»
      		<param-value>@loginUi.external@</param-value>
      		«ENDIF»
    	</init-param>
    	«ENDIF»
	</filter>
  
	<!-- ################################################################
	   il filter di autenticazione e' il primo ad essere innescato
	   ################################################################
	-->
	<filter-mapping>
	    <filter-name>Internal Authentication Filter</filter-name>
		<url-pattern>/secure/*</url-pattern>
	</filter-mapping>
	
	<!-- ################################################################
	     il filter di adattamento iride e' il successivo dopo 
	     l'autenticazione
	     ################################################################
	-->
	<filter-mapping>
		<filter-name>ID Adapter Custom</filter-name>
		<url-pattern>*«getStrutsActionCompleteExtension()»</url-pattern>
	</filter-mapping>
«ENDDEFINE»

«REM»Definizione ExternalAuthenticationGuarde«ENDREM»
«DEFINE externalAuthenticationFilter FOR ExternalAuthenticationGuard»

//TODO 
	<init-param>
      		<param-name>loginPage</param-name>
      		<param-value>@loginUi.external@</param-value>
    	</init-param>

«ENDDEFINE»


«DEFINE envConfigForAuthentication(GUIModel model) FOR SecurityProfile»

	«IF this.intAuthGuard!=null»
		«IF this.intAuthGuard.loginModule.internal == false»
	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" 
		token="@loginUi.external@"  
		value="${loginUi.external}"/>
		«ENDIF»
		«IF this.intAuthGuard.params!=null-»
			«LET this.intAuthGuard.params.params AS envConfigParams-»
			«IF envConfigParams!=null && !envConfigParams.isEmpty-»
				«FOREACH envConfigParams AS envConfigParam-»
	<replace file="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml" 
		token="@«envConfigParam.name»@"  
		value="${«envConfigParam.name»}"/>
				«ENDFOREACH-»
			«ENDIF-»
			«ENDLET-»
		«ENDIF-» 
	«ENDIF»
«ENDDEFINE»

«DEFINE templatePropsForAuthentication(GUIModel model) FOR SecurityProfile»
	«IF this.intAuthGuard!=null»
#-[configurazione intAuthGuard]--------------------------------------------------
		«IF this.intAuthGuard.loginModule.internal == false»
loginUi.external = 	
		«ENDIF»
		«IF this.intAuthGuard.params!=null-»
			«LET this.intAuthGuard.params.params AS envConfigParams-»
			«IF envConfigParams!=null && !envConfigParams.isEmpty-»
				«FOREACH envConfigParams AS envConfigParam-»
«envConfigParam.name» =  
				«ENDFOREACH-»
			«ENDIF-»
			«ENDLET-»
		«ENDIF-» 
---------------------------------------------------------------------------------
	«ENDIF»
«ENDDEFINE»

«DEFINE idAdapterCustomFilter(GUIModel model) FOR SecurityProfile»

«FILE getIdAdapterCustomFilterJavaFile(model, true)»package «getFiltersJavaPackage(model)»;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
/**
 * Inserisce in sessione l'oggetto <code>currentUser</code>
 * Funge da adapter tra il filter del metodo di autenticaizone previsto e la
 * logica applicativa.
 *
 * @author CSIPiemonte
 */
 
public class «getIdAdapterCustomFilterClassName()» implements Filter{
	
	public static final String USERINFO_SESSIONATTR = "appDatacurrentUser";
	public final static String AUTH_ID_MARKER = "«this.idAdapter.infoSourceName»";
	public static String loginPage;
	
	public void doFilter(ServletRequest req, ServletResponse resp,
			FilterChain fchn) throws IOException, ServletException {
			HttpServletRequest hreq = (HttpServletRequest) req;
		Object marker = getMarker(hreq);
		
		if(hreq.getRequestURI().indexOf(loginPage) > -1){
			fchn.doFilter(req, resp);
		    return;
		}
		
		boolean flgCheckToken = marker!= null ? validateToken(marker) : false;
		
		if(flgCheckToken)
			createCurrentUser(marker, hreq);
		else
			throw new ServletException(
					"Tentativo di accesso a pagina non home e non di servizio senza token di sicurezza");
		fchn.doFilter(req, resp);
		
	}
	private void createCurrentUser(Object marker, HttpServletRequest hreq) {
		«LET ((List[Type])getAllTypes((GUIModel)model)).selectFirst(t | t.name=="UserInfo") AS userInfoType-»
		«toJavaType(userInfoType, model)» userInfo = new «toJavaType(userInfoType, model)»();
		«ENDLET-»
		«PROTECT CSTART '/*' CEND '*/' ID getRegionUID(getIdAdapterCustomFilterClassName()+".createCurrentUser")»
		/*userInfo.setNome("");
		userInfo.setCognome("");
		userInfo.setEnte("");
		userInfo.setRuolo("--");
		userInfo.setCodFisc("");*/
		«ENDPROTECT»
		hreq.getSession().setAttribute(USERINFO_SESSIONATTR,
				userInfo);
		
	}

	private boolean validateToken(Object marker) {
		boolean res = true;
		«PROTECT CSTART '/*' CEND '*/' ID getRegionUID(getIdAdapterCustomFilterClassName()+".validateToken")»
		«ENDPROTECT»
		return res;
	}

	private Object getMarker(HttpServletRequest hreq){
	«IF this.intAuthGuard.loginModule == true-»
		HttpSession session = hreq.getSession();
		return session != null ? (String) session.getAttribute(AUTH_ID_MARKER)	: null;
	«ELSE-»
		«IF this.idAdapter.sourceType.compareTo(InfoSourceTypes::REQUEST_PARAM)==0-»
		return hreq.getParameter(AUTH_ID_MARKER);
		«ENDIF-»
		«IF this.idAdapter.sourceType.compareTo(InfoSourceTypes::REQUEST_HEADER)==0-»
		return hreq.getHeader(AUTH_ID_MARKER);
		«ENDIF-»
		«IF this.idAdapter.sourceType.compareTo(InfoSourceTypes::REQUEST_COOKIE)==0-»
		Cookie c = getCookie(AUTH_ID_MARKER, hreq.getCookies());
		return c!=null ? c.getValue(): null;
		«ENDIF-»
		«IF this.idAdapter.sourceType.compareTo(InfoSourceTypes::SESSION_ATTRIBUTE)==0-»
		HttpSession session = hreq.getSession();
		return session != null ? (String) session.getAttribute(AUTH_ID_MARKER)	: null;
		«ENDIF-»
		«IF this.idAdapter.sourceType.compareTo(InfoSourceTypes::REQUEST_ATTRIBUTE)==0-»
		return hreq.getAttribute(AUTH_ID_MARKER);
		«ENDIF-»
	«ENDIF-»
	}
	public void destroy() {
		// NOP
	}

	public void init(FilterConfig config) throws ServletException {
		loginPage = config.getInitParameter("loginPage");
	}

}
«ENDFILE»
«ENDDEFINE»

«DEFINE loginUISecurityProfile(GUIModel model) FOR SecurityProfile»
«IF this.intAuthGuard!=null -»
	«IF this.intAuthGuard.loginModule!=null-»
		«IF this.intAuthGuard.loginModule.internal == true-»
		«EXPAND template::struts2::security::securityCustom::loginUI::localLoginUIAction(model) FOR this.intAuthGuard.loginModule»
		«EXPAND template::struts2::security::securityCustom::loginUI::localLoginUIActionProperties(model) FOR this.intAuthGuard.loginModule»
		«EXPAND template::struts2::security::securityCustom::loginUI::localLoginUIJsp(model) FOR this.intAuthGuard.loginModule»
		«EXPAND template::struts2::security::securityCustom::loginUI::errorAuthJsp(model) FOR this.intAuthGuard.loginModule»
		«EXPAND template::struts2::security::securityCustom::loginUI::localLoginUIStrutsXml(model) FOR this»
		«ENDIF-»
	«ENDIF-»
«ENDIF-»
«ENDDEFINE»



