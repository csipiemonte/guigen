«IMPORT guigen»

«IMPORT template::struts2::resourcefiles»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»


«REM»
**************************************************************************************************************************
Markup HTML per RUPAR
Riferimenti:
    - Repository RuparPiemonte (http://dev-portale.ruparpiemonte.it/sandbox/template/repository/index.shtml)
	- Pattern RuparPiemonte (http://dev-portale.ruparpiemonte.it/sandbox/template/repository/patterns/index.shtml)
	- Reference implementation su Efesto (http://dev-proxy.csi.it:10080/refimpl/)
**************************************************************************************************************************
«ENDREM»


«REM»
==========================================================================================================================
Definizioni generali: Pagine di ERRORE
==========================================================================================================================
«ENDREM»

«REM»Crea la pagina di errore 404 Page Not Found«ENDREM»
«DEFINE getJspPageNotFoundError FOR GUIModel-»

«ENDDEFINE»


«REM»Crea la pagina di errore per le ApplicationError (Runtime) [java.lang.RuntimeException]«ENDREM»
«DEFINE getJspApplicationError FOR GUIModel-»

«ENDDEFINE»


«REM»Crea la pagina di errore per un Errore generico (FATAL) [java.lang.Throwable]«ENDREM»
«DEFINE getJspFatalError FOR GUIModel-»

«ENDDEFINE»


«REM»Parte iniziale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageHeader FOR GUIModel-»

«ENDDEFINE»

«REM»Parte finale della pagina di errore«ENDREM»
«DEFINE getJspErrorPageFooter FOR GUIModel-»

«ENDDEFINE»



«REM»
==========================================================================================================================
Definizioni generali: header, footer, ecc
==========================================================================================================================
«ENDREM»

«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Header -»

«ENDDEFINE»


«REM»Genera la componente di markup (HTML) deli LINK STATICI.
TODO: capire cosa sono e come vadano realmente implementati realmente.«ENDREM»
«DEFINE getStaticLinkMarkup(GUIModel model, boolean skip_component_dir_creation) FOR StaticLinks»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della MENUBAR.«ENDREM»
«DEFINE getMenubarMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Menubar»

«ENDDEFINE»

«REM»Genera un MenuItem«ENDREM»
«DEFINE getMenuItemMarkup(int level) FOR MenuItem -»

«ENDDEFINE»

«REM»Genera un sottoMenu«ENDREM»
«DEFINE getSubMenuMarkup(int level) FOR Menu»

«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della FOOTER«ENDREM»
«DEFINE getFooterMarkup(GUIModel model, boolean skip_component_dir_creation) FOR Footer»

«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei PANNELLI
==========================================================================================================================
«ENDREM»


«REM»Per il momento si parte dall'assunzione che a primo livello ci siano solo Form Pnels«ENDREM»
«DEFINE setupFirstLevelFormPanel(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per il Vertical Flow Layout«ENDREM»
«DEFINE setupVFL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per l'UDLRC (Up-Down-Left-Right-Center) Layout«ENDREM»
«DEFINE setupUDLRCL(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a COLONNA UNICA ([U][D]C)«ENDREM»
«DEFINE setupUnaColonna(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«ENDDEFINE»

«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a DUE COLONNE ([U][D]LC)«ENDREM»
«DEFINE setupDueColonne(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«ENDDEFINE»


«REM»Genera la struttura di markup (HTML) per un UDLRC Layout a TRE COLONNE ([U][D]LRC)«ENDREM»
«DEFINE setupTreColonne(GUIModel model, boolean skip_component_dir_creation, ContentPanel cp) FOR FormPanel»

«ENDDEFINE»


«REM»
************** Multi Panel e tipi derivati (TabsetPanel, WizardPanel) **************
«ENDREM»

«REM»TabsetPanel«ENDREM»
«DEFINE setupTabSetPanel(GUIModel model) FOR TabSetPanel»

«ENDDEFINE»

«REM»WizardPanel«ENDREM»
«DEFINE setupWizardPanel(GUIModel model) FOR WizardPanel»

«ENDDEFINE»


«REM»
************** StdMessagePanel (Pannello per errori) **************
«ENDREM»

«DEFINE setupStdMessagePanel(GUIModel model, ContentPanel cp) FOR StdMessagePanel»

«ENDDEFINE»


«REM»
************** UserInfoPanel (pannello con le informazioni sull'utente loggato) **************
«ENDREM»

«DEFINE setupUserInfoPanel(GUIModel model, ContentPanel cp) FOR UserInfoPanel»

«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - PANNELLI
==========================================================================================================================
«ENDREM»

«REM»Genara la header di un sottopannello di tipo FormPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR FormPanel»

«ENDDEFINE»

«REM»Genara la header di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR CommandPanel»

«ENDDEFINE»

«REM»Genara la header di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlHeader(UDLRCSpecConstants quadrante) FOR MenuPanel»

«ENDDEFINE»


«REM»Genara la footer di un sottopannello di tipo FormPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR FormPanel»

«ENDDEFINE»

«REM»Genara la footer di un sottopannello di tipo CommandPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR CommandPanel»

«ENDDEFINE»

«REM»Genara la footer di un sottopannello di tipo MenuPanel«ENDREM»
«DEFINE subPanelControlFooter(UDLRCSpecConstants quadrante) FOR MenuPanel»

«ENDDEFINE»



«REM»
==========================================================================================================================
Gestione dei LAYOUT - WIDGETS
==========================================================================================================================
«ENDREM»

«REM»--------------- Widget ---------------«ENDREM»

«REM»Genera la header di un widget generico«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Widget»

«ENDDEFINE»

«REM»Genera la footer di un widget generico«ENDREM»
«DEFINE widgetControlFooter(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Widget»

«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget generico«ENDREM»
«DEFINE widgetClose(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Widget»

«ENDDEFINE»


«REM»--------------- HiddenValue ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(FormPanel fp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo HiddenValue (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(FormPanel fp, Boolean isFirst, Boolean isLast) FOR HiddenValue»
«ENDDEFINE»


«REM»--------------- Button ---------------«ENDREM»

«REM»Genera la header di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Button»

«ENDDEFINE»

«REM»Genera la footer di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Button»

«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo Button (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Button»
«ENDDEFINE»


«REM»--------------- Table ---------------«ENDREM»

«REM»Genera la header di un widget di tipo HiddenValue (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR Table»

«ENDDEFINE»


«REM»--------------- UserDefinedWidget ---------------«ENDREM»

«REM»Genera la header di un widget di tipo UserDefinedWidget (non ha label, quindi la colonna della label non va considerata)«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR UserDefinedWidget»

«ENDDEFINE»


«REM»--------------- MenuView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(FormPanel fp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo MenuView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(FormPanel fp, Boolean isFirst, Boolean isLast) FOR MenuView»
«ENDDEFINE»


«REM»--------------- TreeView ---------------«ENDREM»

«REM»Genera la header di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlHeader(FormPanel fp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la footer di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetControlFooter(FormPanel fp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

«REM»Genera la clausola di chiusura di un widget di tipo TreeView (non ha label, quindi niente strutture aggiuntive)«ENDREM»
«DEFINE widgetClose(FormPanel fp, Boolean isFirst, Boolean isLast) FOR TreeView»
«ENDDEFINE»

