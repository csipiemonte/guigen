«IMPORT guigen»
«IMPORT ecore»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::fatjs::FatJSExtensions»
«EXTENSION template::uiprototype::FatClientPrototypeExtensions»


«DEFINE cmd(GUIModel model, ContentPanel cp) FOR ExecCommand»
«LET cp != null ? getStrutsActionConfigName(cp) : ( !isInMenuBranch() ? "HomeAction" : "MenuAction") AS actionName-»
	new ExtCsi.cmd.ExecCommand({
		methodName: «jsLiteralValue(methodName)»,
		methodUrl: '«getDataDir()»/«this.getExecCommandMethodName(null)».txt',
		results: [«EXPAND template::fatjs::controller::commands::cmdOutcome(model, cp) FOREACH this.results SEPARATOR ","»]
		// TODO postExecData
		}
	)
«ENDLET-»
«FILE getWebDir(model)+getDataDir()+"/"+this.getExecCommandMethodName(null)+".txt"»
    {"fldErrors":{},"globalErrors":[],"globalMessages":[],"model":{},"resultCode":"«this.results.first().resultCode»"}    
«ENDFILE»
«ENDDEFINE»

«DEFINE cmd(GUIModel model, ContentPanel cp) FOR VisibilityCommand»
	new ExtCsi.cmd.VisibilityCommand({
		show: «this.show»,
		targetWidgets: [«FOREACH targetWidgets AS w SEPARATOR ","»'«getFullID(w,"")»' «ENDFOREACH»]
	})
«FILE getWebDir(model)+cp.name+"!execSetWidgetsVisibilityStatus.do"»
    {"fldErrors":{},"globalErrors":[],"globalMessages":[],"model":{},"resultCode":"Ok"}
«ENDFILE»	
«ENDDEFINE»

«DEFINE cmd(GUIModel model, ContentPanel cp) FOR ONOFFCommand»
	new ExtCsi.cmd.ONOFFCommand({
		enable: «this.enable»,
		targetWidgets: [«FOREACH targetWidgets AS w SEPARATOR ","»'«getFullID(w,"")»' «ENDFOREACH»]
	})
«FILE getWebDir(model)+cp.name+"!execSetWidgetsOnOffStatus.do"»
    {"fldErrors":{},"globalErrors":[],"globalMessages":[],"model":{},"resultCode":"Ok"}
«ENDFILE»		
«ENDDEFINE»
