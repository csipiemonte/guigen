«IMPORT guigen»
«IMPORT ecore»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::fatjs::FatJSExtensions»

«DEFINE main FOR GUIModel»
	«EXPAND contentPanelsFiles FOR this»
	«EXPAND insertFatClientJsFile FOR this»
	«EXPAND buildFiles FOR this»
«ENDDEFINE»

«REM»Genera le Actions Struts2 corrispondenti ai ContentPanels dell'applicazione«ENDREM»
«DEFINE contentPanelsFiles FOR GUIModel»
	«REM»Espande ogni ContentPanels dell'applicazione come Action Struts2 + pagina JSP«ENDREM»
	«LET (List[ContentPanel])getAllContentPanels(this).select(cp|mustGenerateContentPanel((ContentPanel)cp)) AS contentPanels»
		«EXPAND contentPanelFiles(this) FOREACH contentPanels»
	«ENDLET»
«ENDDEFINE»

«DEFINE contentPanelFiles(GUIModel model) FOR ContentPanel»
	«IF model.targetPlatform.enableRichUIBehavior-»
		«FILE getWebSrcDir(model, true)+getPathComponentDir(model, true)+"js/"+getEnrichmentFileWebRootRelative(this, model)»
		«EXPAND template::struts2::view::enrichments::enrichmentsCommon(model, true) FOR this»
		«ENDFILE»
	«ENDIF-»
«ENDDEFINE»

«DEFINE insertFatClientJsFile FOR GUIModel»
«IF targetPlatform.enableFatClient»
«FILE getWebSrcDir(true)+getPathComponentDir(this, true)+"js/fatclient.js"»

/**
 * Definizione della struttura ExtCSI dell'applicazione
 */
«EXPAND template::fatjs::model::types::types FOR this»
«EXPAND template::fatjs::model::data::datas FOR this»
«EXPAND template::fatjs::Main::appAreaStruct(this) FOR this.structure.appWindow.appArea»
«ENDFILE»
«ENDIF»
«ENDDEFINE»

«DEFINE buildFiles FOR GUIModel»
«FILE getBuildPropertiesFileName(this, true)»##############################################################################
# Build.properties
##############################################################################
# - Generato da GUIGEN, versione «getPluginVersion()»

# - [Definizione del Prodotto] -----------------------------------------------
  prodotto    = «codProdotto»
  componente  = «codComponente»
  version     = «versioneComponente»
  
  # - [Definizione dei files di output] ----------------------------------------
  zip-file-name  		= ${prodotto}-${componente}-${version}.zip

# - [Cartelle di build] ------------------------------------------------------
  integration = integration
  lib         = ${basedir}/lib
  build       = ${basedir}/build
  src         = ${basedir}/src
  srcjava     = ${src}/javascript
  dist        = ${basedir}/dist
  docs        = ${basedir}/docs
  temp        = ${build}/temp
 «ENDFILE»
 «FILE getBuildXmlFileName(this, true)»<?xml version="1.0" encoding="UTF-8"?>

<!-- ##################################################### -->
<!-- # Copyright 2006 (c) CSI Piemonte.                  # -->
<!-- #                                                   # -->
<!-- # build.xml file per compilazione e generazione     # -->
<!-- # del pacchetto per il rilascio dell'applicazione.  # -->
<!-- #                                                   # -->
<!-- # Per una lista completa dei tasks eseguibili usare # -->
<!-- # l'argomento di ant -projecthelp quando si         # -->
<!-- # richiama questo build.xml.                        # -->
<!-- ##################################################### -->

<project basedir="."
         default="default"
         name="«codComponente»"
         xmlns:ivy="antlib:fr.jayasoft.ivy.ant" >

  <description>Build file per il progetto: [«codComponente»]</description>
  
  <!-- -->
	<property file="buildfiles/build.properties" />
	<property file="buildfiles/${target}.properties" />
	<!-- -->
	<path id="library.ref">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: init                                              # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="init" description="Inizializza lo script Ant.">
		<tstamp />
		<condition property="target" value="dev">
			<equals arg1="${target}" arg2="$${target}" />
		</condition>
		<mkdir dir="${build}/classes" />
		<mkdir dir="${temp}/${target}/${earLib}" />
		<mkdir dir="${build}/archives/${target}" />
		<mkdir dir="${dist}/${target}" />
		<mkdir dir="${build}/javadoc" />
		<mkdir dir="${build}/jsp" />
		<mkdir dir="${build}/cache" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: default                                           # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="default" description="Eseguire il build per l'environment
                       specificato a linea di comando con
                       -Dtarget=${target} o per tutti gli
                       environment (se non specificato).">

		<condition property="first-call" value="distribution">
			<not>
				<equals arg1="${target}" arg2="$${target}" />
			</not>
		</condition>

		<condition property="first-call" value="all-targets">
			<equals arg1="${target}" arg2="$${target}" />
		</condition>

		<echo message="target: ${server}" />
		<echo message="target: ${target}" />
		<echo message="first-call: ${first-call}" />

		<antcall target="clean-all" />
		<antcall target="${first-call}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: about                                             # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="about" description="Visualizza l'elenco dei target
                                    pubblici dello script.">

		<loadproperties srcfile="buildfiles/build.properties" />
		<loadfile property="about" srcfile="buildfiles/about.txt" />
		<echo message="${about}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: about-custom                                      # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="about-custom" description="Visualizza l'elenco di tutti i target,
                       pubblici e privati
                       (equivalente a 'ant -projecthelp')">

		<loadproperties srcfile="buildfiles/build.properties" />
		<loadfile property="about-custom" srcfile="buildfiles/about-custom.txt" />
		<echo message="${about-custom}" />
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
		</java>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [DISTRIB]: all-targets                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="all-targets" description="Esegue il build per le varie distribuzioni in sequenza.">
		<antcall target="distribution" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [DISTRIB]: distribution                                   # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="distribution" depends="package-all" />

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: environment-config                                # -->
	<!-- #         Gestire qui i  replace delle variabile d'ambiente # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="environment-config" description="Predispone le configurazioni dipendenti dall'ambiente.">
		<echo message="====== gestire qui i  replace delle variabile d'ambiente" />
	</target>

	<target name="src-zip" depends="init">
		<zip destfile="${build}/archives/${target}/${zip-file-name}" basedir="src/web" >
		</zip>
	</target>
	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-all                                        # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="package-all" description="esegue il packaging di ogni componente del prodotto">
		<antcall target="src-zip"/>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-all                                        # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-all" description="Rimuove tutte le cartelle temporanee." depends="clean-archives,clean-cache,clean-classes,
                   clean-dist,clean-temp" />

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-cache                                      # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-cache" description="Rimuove la cartella di cache di Ivy e la lib.">
		<delete dir="${build}/cache" failonerror="no" />
		<delete dir="${lib}" failonerror="no" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-temp                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-temp" description="Rimuove la cartella dei files temporanei di build.">
		<delete dir="${temp}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-archives                                  # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-archives" description="Rimuove la cartella degli archivi (war, ear, ...).">
		<delete dir="${build}/archives" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-dist                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-dist" description="Rimuove la cartella delle distribuzioni.">
		<delete dir="${dist}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-classes                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-classes" description="Rimuove la cartella dei sorgenti compilati.">
		<delete dir="${build}/classes" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: rebuild                                            # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="rebuild" depends="clean-all, distribution" />


</project>
 «ENDFILE»
«ENDDEFINE»