«IMPORT guigen»
«EXTENSION template::GenericExtensions»

«DEFINE buildFiles(boolean skip_component_dir_creation) FOR guigen::GUIModel»
	«EXPAND antBuildFile(skip_component_dir_creation) FOR this»
	«EXPAND buildPropertiesFile(skip_component_dir_creation) FOR this»
	«EXPAND ivyFiles(skip_component_dir_creation) FOR this»
«ENDDEFINE»


«REM»genera il file di build di ant«ENDREM»
«DEFINE antBuildFile(boolean skip_component_dir_creation) FOR guigen::GUIModel»
«FILE getBuildXmlFileName(this, skip_component_dir_creation)»<?xml version="1.0" encoding="UTF-8"?>

<!-- ##################################################### -->
<!-- # Copyright 2006 (c) CSI Piemonte.                  # -->
<!-- #                                                   # -->
<!-- # build.xml file per compilazione e generazione     # -->
<!-- # del pacchetto per il rilascio dell'applicazione.  # -->
<!-- #                                                   # -->
<!-- # Per una lista completa dei tasks eseguibili usare # -->
<!-- # l'argomento di ant -projecthelp quando si         # -->
<!-- # richiama questo build.xml.                        # -->
<!-- ##################################################### -->

<project basedir="."
         default="default"
         name="«codProdotto»"
         xmlns:ivy="antlib:fr.jayasoft.ivy.ant" >

  <description>Build file per il progetto: [«codProdotto»]</description>
  <!-- -->
  <property file="buildfiles/build.properties" />
  <property file="buildfiles/${target}.properties" />
  <!-- -->
  <path id="library.ref">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
  </path>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: init                                              # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="init" description="Inizializza lo script Ant.">
    <tstamp />
    <condition property="target" value="dev">
      <equals arg1="${target}" arg2="$${target}" />
    </condition>
    <mkdir dir="${build}/classes" />
    <mkdir dir="${temp}/${target}/${earLib}" />
    <mkdir dir="${build}/archives/${target}" />
    <mkdir dir="${dist}/${target}" />
    <mkdir dir="${build}/javadoc" />
    <mkdir dir="${build}/jsp" />
    <mkdir dir="${build}/cache" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: default                                           # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="default"
          description="Eseguire il build per l'environment
                       specificato a linea di comando con
                       -Dtarget=${target} o per tutti gli
                       environment (se non specificato).">

    <condition property="first-call" value="distribution">
      <not>
        <equals arg1="${target}" arg2="$${target}" />
      </not>
    </condition>

    <condition property="first-call" value="all-targets">
      <equals arg1="${target}" arg2="$${target}" />
    </condition>

    <echo message="target: ${server}" />
    <echo message="target: ${target}" />
    <echo message="first-call: ${first-call}" />

    <antcall target="clean-all" />
    <antcall target="${first-call}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: environment-recreate                              # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="environment-recreate">
    <mkdir dir="build/temp/conf" />
    <copy todir="build/temp/conf">
      <fileset dir="${conf}" />
    </copy>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: compile-all                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="compile-all" depends="init,load-dependencies"
          description="Compila tutti i sorgenti.">

    <echo message="===> Target: ${target}" />

    <javac srcdir="${src}/java" destdir="${build}/classes"
           optimize="on" deprecation="on" compiler="modern">
      <classpath refid="library.ref" />
    </javac>

    <copy todir="${build}/classes">
      <fileset dir="${src}/java" excludes="**/*.java*,**/*.jbx*" />
    </copy>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: about                                             # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="about" description="Visualizza l'elenco dei target
                                    pubblici dello script.">

    <loadproperties srcfile="buildfiles/build.properties" />
    <loadfile property="about" srcfile="buildfiles/about.txt" />
    <echo message="${about}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: about-custom                                      # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="about-custom"
          description="Visualizza l'elenco di tutti i target,
                       pubblici e privati
                       (equivalente a 'ant -projecthelp')" >

    <loadproperties srcfile="buildfiles/build.properties" />
    <loadfile property="about-custom" srcfile="buildfiles/about-custom.txt" />
    <echo message="${about-custom}" />
    <java classname="org.apache.tools.ant.Main">
      <arg value="-projecthelp" />
    </java>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DISTRIB]: all-targets                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="all-targets"
          description="Esegue il build per le varie distribuzioni in sequenza.">
    <antcall target="distribution" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [DISTRIB]: distribution                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="distribution" depends="package-all"
          description="Costruisce il tar per la distribuzione." >
    <echo message="====== Creating distribution for ${target} ..."/>
    <echo message="====== Basedir: ${build}/archives/${target} ..."/>
    <tar tarfile="${dist}/${target}/${dist-file-name}.tar"
         basedir="${build}/archives/${target}"
         includes="*.ear,*.xml" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: resolve-dependencies                               # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="resolve-dependencies"
          description="carica le librerie dal repository remoto">
    <ivy:configure file="${basedir}/buildfiles/ivyconf.xml" />
    <ivy:resolve file="${basedir}/buildfiles/ivy.xml" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [IVY]: internal target: load-dependencies                 # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="load-dependencies"
          depends="resolve-dependencies"
          description="Risolve le dipendenze esterne.">
    <ivy:retrieve pattern="${basedir}/lib/${artifact}.${type}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # Target: environment-config                                # -->
  <!-- #         Gestire qui i  replace delle variabile d'ambiente # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="environment-config"
          description="Predispone le configurazioni dipendenti dall'ambiente." >
    <echo message="====== gestire qui i  replace delle variabile d'ambiente" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-all                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="package-all"
          description="esegue il packaging di ogni componente del prodotto">
    <antcall target="package-ear" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-ear                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="package-ear"
          depends="environment-recreate,compile-all, commons-jar,
                   package-war,
                   environment-config"
          description="costruisce l&apos;ear">

    <copy todir="${temp}/${target}/${earLib}">
      <fileset dir="${lib}" includes="${ear-libs-filter}" />
    </copy>

    <move file="${build}/archives/${target}/commons.jar"
          tofile="${temp}/${target}/${earLib}/commons.jar"/>

     

    <ear appxml="${temp}/conf/ear/${webapp}/META-INF/application.xml"
         destfile="${build}/archives/${target}/${ear-file-name}.ear">
      <fileset dir="${build}/archives/${target}" includes="*.jar,*.war" />
      <fileset dir="${temp}/${target}">
        <include name="**/*" />
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Built-Date" value="${DSTAMP}" />
        <attribute name="Target" value="${target}" />
        <attribute name="Appl-Verison" value="${version}" />
      </manifest>
    </ear>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: package-war                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="package-war"
          description="Genera il war per lo strato web.">
    <copy todir="${build}/classes">
      <fileset dir="${conf}/web/${webapp}/WEB-INF"
               includes="struts*.xml"/>
    </copy>
    <war destfile="${build}/archives/${target}/${war-file-name}.war"
         webxml="${build}/temp/conf/web/${webapp}/WEB-INF/web.xml"
         roundup="false"
         manifest="${build}/temp/conf/web/${webapp}/META-INF/MANIFEST.MF">
      <webinf dir="${conf}/web/${webapp}/WEB-INF"
              includes="applicationContext.xml,jboss-web.xml" />
      <fileset dir="${srcweb}" />
      <classes dir="${build}/jsp" includes="**" />
      <classes dir="${build}/classes"
               includes="it/csi/${prodotto}/${componente}/presentation/**,*.xml,*.properties" />
      <lib dir="${lib}" includes="*"
            excludes="${war-exclude-libs-filter}" />
    </war>
  </target>



  <!-- -->
  <!-- ############################################################# -->
  <!-- # [PKG]: commons-jar                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="commons-jar" description="Genera il jar per le classi comuni.">
    <jar destfile="${build}/archives/${target}/commons.jar"
         basedir="${build}/classes"
         includes="it/csi/${prodotto}/${componente}/dto/**,
                   it/csi/${prodotto}/${componente}/exception/**,
                   it/csi/${prodotto}/${componente}/util/**">
    </jar>
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-all                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-all" description="Rimuove tutte le cartelle temporanee."
          depends="clean-archives,clean-cache,clean-classes,
                   clean-dist,clean-javadoc,clean-jsp,clean-temp"/>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-cache                                      # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-cache"
          description="Rimuove la cartella di cache di Ivy e la lib.">
		<delete dir="${build}/cache" failonerror="no" />
		<delete dir="${lib}" failonerror="no" />
  </target>

  

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-temp                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-temp"
          description="Rimuove la cartella dei files temporanei di build.">
    <delete dir="${temp}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-archives                                  # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-archives"
          description="Rimuove la cartella degli archivi (war, ear, ...).">
    <delete dir="${build}/archives" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-dist                                       # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-dist"
          description="Rimuove la cartella delle distribuzioni.">
    <delete dir="${dist}" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-classes                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-classes"
          description="Rimuove la cartella dei sorgenti compilati.">
    <delete dir="${build}/classes" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-javadoc                                    # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-javadoc"
          description="Rimuove la cartella temporanea dei javadoc.">
    <delete dir="${build}/javadoc" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: clean-jsp                                        # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="clean-jsp"
          description="Rimuove la cartella temporanea delle jsp compilate.">
    <delete dir="${build}/jsp" />
  </target>

  <!-- -->
  <!-- ############################################################# -->
  <!-- # [CLEAN]: _clean-web-inf                                   # -->
  <!-- ############################################################# -->
  <!-- -->
  <target name="_clean-web-inf"
          description="Rimuove il contenuto di lib e classes della
                       web application (per run locali).">
    <delete dir="${srcweb}/WEB-INF/classes" />
    <delete dir="${srcweb}/WEB-INF/lib" />
  </target>
</project>
«ENDFILE»
«ENDDEFINE»


«REM»genera il file di property di ant«ENDREM»
«DEFINE buildPropertiesFile(boolean skip_component_dir_creation) FOR GUIModel»
«FILE getBuildPropertiesFileName(this, skip_component_dir_creation)»##############################################################################
# Build.properties
##############################################################################

# - [Definizione del Prodotto] -----------------------------------------------
  prodotto    = «codProdotto»
  contesto    = «codComponente»
  componente  = «codComponente»
  webapp      = ${contesto}
  version     = 1.0.0

# - [Definizione dei files di output] ----------------------------------------
  ear-file-name  = ${componente}srv
  dist-file-name = ${componente}srv-${version}
  war-file-name  = ${contesto}

# - [Cartelle di build] ------------------------------------------------------
  integration = integration
  lib         = ${basedir}/lib
  build       = ${basedir}/build
  src         = ${basedir}/src
  srcweb      = ${src}/web/${webapp}
  srcjaws     = ${src}/web/${jawsapp}
  conf        = ${basedir}/conf
  dist        = ${basedir}/dist
  docs        = ${basedir}/docs
  temp        = ${build}/temp

# - [ear-libs-filter] --------------------------------------------------------
# Questo filtro viene utilizzato per definire la lista dei JAR(s) che devono
# essere inclusi all'interno dell'EAR prodotto.
# ----------------------------------------------------------------------------
  ear-libs-filter = spring-beans-2.0.7.jar, \
                    spring-context-2.0.7.jar, \
                    spring-core-2.0.7.jar,  \
                    spring-web-2.0.7.jar, \
                    spring-aop-2.0.7.jar, \
                    spring-remoting-2.0.7.jar, \
                    aopalliance-1.0.jar, \
                    util-beanlocatorfactory-1.0.1.jar, \
                    util-perf-1.0.1.jar, \
                    commons-beanutils-1.6.jar, \
                    commons-collections-3.2.jar, \
                    commons-digester-1.8.jar,  \
                    commons-logging-1.1.jar, \
                    commons-logging-api-1.1.jar, \
                    custom-component-attr-1.0.0.jar

# - [war-exclude-libs-filter] ------------------------------------------------
# Questo filtro viene utilizzato per definire la lista dei JAR(s) *NON* devono
# venire inclusi all'interno del WAR.
# ----------------------------------------------------------------------------
  war-exclude-libs-filter = jboss*.jar, \
                            util-perf*.jar, \
                            spring*.jar, \
                            servlet*.jar, \
                            aop*.jar, \
                            util-beanlo*.jar, \
                            csi*.jar, \
                            jboss*.jar, \
                            log4j*.jar, \
                            commons*.jar, \
                            custom-component-attr-*.jar

# ----------------------------------------------------------------------------
  package.prefix = it.csi.${prodotto}.${componente}

  target = dev
# - [Configurazione del Server (JBoss)] --------------------------------------
  server = jboss
  earLib = lib

«ENDFILE»
«ENDDEFINE»


«REM»genera i files di IVY«ENDREM»
«DEFINE ivyFiles(boolean skip_component_dir_creation) FOR GUIModel»
«FILE getIvyFileName(skip_component_dir_creation)»<ivy-module version="1.0">
	<info organisation="csipiemonte" module="«codProdotto»" />
	<dependencies>
		<dependency org="apache" name="commons-beanutils" rev="1.6"/>
		<dependency org="apache" name="commons-collections" rev="3.2"/>
		<dependency org="apache" name="commons-digester" rev="1.8"/>
		<dependency org="apache" name="commons-logging" rev="1.1"/>

		<dependency org="apache" name="jstl" rev="1.0"/>

		<dependency org="sun" name="servlet" rev="2.4"/>
		<dependency org="sun" name="servlet-jsp" rev="2.0"/>


		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="aopalliance-1.0" type="jar" />
		</dependency>

		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="spring-beans-2.0.7" type="jar" />
		</dependency>

		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="spring-context-2.0.7" type="jar" />
		</dependency>

		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="spring-core-2.0.7" type="jar" />
		</dependency>
		
		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="spring-web-2.0.7" type="jar" />
		</dependency>

		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="spring-aop-2.0.7" type="jar" />
		</dependency>  

		<dependency org="others" name="spring" rev="2.0.7">
			<artifact name="spring-remoting-2.0.7" type="jar" />
		</dependency>
		

		<dependency org="csipiemonte" name="util-beanlocatorfactory" rev="1.0.1"/>
		<dependency org="csipiemonte" name="util-perf" rev="1.0.1"/>		
		
		<dependency org="apache" name="log4j" rev="1.2.8"/>
		
		<dependency org="others" name="jboss" rev="4.3.0">
			<artifact name="jboss-j2ee-4.3.0" type="jar" />
		</dependency>
		
		<!-- WICKET dependencies -->
		<dependency org="apache" name="wicket" rev="1.3.5"/>

	</dependencies>

</ivy-module>
«ENDFILE»

«FILE getIvyConfFileName(skip_component_dir_creation)»<ivyconf>
  <conf defaultCache="build/cache" defaultResolver="myUrlResolver"/>
  <resolvers>
    <url name="myUrlResolver">
        <artifact pattern="http://repart.csi.it/java/${organisation}/${module}/${revision}/lib/${artifact}.${type}" />
        <artifact pattern="http://repart.csi.it/java/${organisation}/${module}/${revision}/conf/${artifact}.${type}" />

        <artifact pattern="http://repart.csi.it/java/${organisation}/${module}/lib/${artifact}.${type}" />

        <ivy pattern="http://repart.csi.it/java/${organisation}/${module}/${revision}/ivy-${module}.xml" />
        <ivy pattern="http://repart.csi.it/java/${organisation}/${module}/ivy-${module}.xml" />
    </url>
  </resolvers>
</ivyconf>
«ENDFILE»
«ENDDEFINE»


