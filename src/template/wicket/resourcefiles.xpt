«IMPORT guigen»
«EXTENSION template::GenericExtensions»
«EXTENSION template::wicket::WicketExtensions»


«DEFINE resourceFiles(boolean skip_component_dir_creation) FOR GUIModel»
	«EXPAND indexMarkupFile(skip_component_dir_creation) FOR this»
	«EXPAND wicketBasePageMarkupFile(skip_component_dir_creation) FOR this»
«ENDDEFINE»



«REM»Genera un file di index vuoto. Serve per fare generare la directory src/web necessaria al build«ENDREM»
«DEFINE indexMarkupFile(boolean skip_component_dir_creation) FOR GUIModel»
«FILE getWebSrcDir(this, skip_component_dir_creation) + "/index.jsp"»<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>Welcome</title>
	</head>
	<body>
	</body>
</html>
«ENDFILE»
«ENDDEFINE»


«REM»
Genera una BasePage (parte di markup html) che contiene gli elementi comuni all'applicazione.
Tutte le altre Page dell'applicazione dovranno ereditare da questa
in modo da ottenere le parti comuni, e dovranno implementare in proprio
le funzionalità specifiche della pagina.
«ENDREM»
«DEFINE wicketBasePageMarkupFile(boolean skip_component_dir_creation) FOR GUIModel»
«FILE getWicketBasePageMarkupFile(this, skip_component_dir_creation)»<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		
		<title>GuiGen Wicket Application :: «codProdotto» (v.«versioneProdotto») - «codComponente» (v.«versioneComponente»)</title>
	</head>
	<body>
		<div class="page-container">
		
			«REM»Genera la HEADER (NOTA: è una possibile implementazione, migliorabile)«ENDREM»
			«IF this.structure.appWindow.header != null»
			«LET "header" AS headerName»
			<!-- ====================================================================================== -->
			<!-- =[INIZIO] HEADER= -->
			<!-- ====================================================================================== -->
			<span wicket:id="«headerName»-panel"></span>
			<!-- ====================================================================================== -->
			<!-- =[FINE] HEADER= -->
			<!-- ====================================================================================== -->
			«EXPAND panelMarkupFile(headerName, skip_component_dir_creation) FOR this»
			«ENDLET»
			«ENDIF»
		
			«REM»Genera la MENU BAR (NOTA: è una possibile implementazione, migliorabile)«ENDREM»
			«IF this.structure.appWindow.appArea.menubar != null»
			«LET "menuBar" AS menuBarName»
			<!-- ====================================================================================== -->
			<!-- =[INIZIO] MENUBAR= -->
			<!-- ====================================================================================== -->
			<span wicket:id="«menuBarName»-panel"></span>
			<!-- ====================================================================================== -->
			<!-- =[FINE] MENUBAR= -->
			<!-- ====================================================================================== -->
			«EXPAND panelMarkupFile(menuBarName, skip_component_dir_creation) FOR this»
			«ENDLET»
			«ENDIF»		
		
			<!-- ====================================================================================== -->
			<!-- =[INIZIO] MAIN = -->
			<!-- ====================================================================================== -->
			<div class="main">
				<wicket:child />
			</div>
			<!-- ====================================================================================== -->
			<!-- =[FINE] MAIN = -->
			<!-- ====================================================================================== -->

			«REM»Genera la FOOTER (NOTA: è una possibile implementazione, migliorabile)«ENDREM»
			«IF this.structure.appWindow.footer != null»
			«LET "footer" AS footerName»
			<!-- ====================================================================================== -->
			<!-- =[INIZIO] FOOTER= -->
			<!-- ====================================================================================== -->
			<span wicket:id="«footerName»-panel"></span>
			<!-- ====================================================================================== -->
			<!-- =[FINE] FOOTER= -->
			<!-- ====================================================================================== -->
			«EXPAND panelMarkupFile(footerName, skip_component_dir_creation) FOR this»
			«ENDLET»
			«ENDIF»
			
		</div>
	</body>
</html>
«ENDFILE»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) di una pagina Wicket«ENDREM»
«DEFINE pageMarkupFile(GUIModel model, boolean skip_component_dir_creation) FOR ContentPanel»
«FILE getWicketPageMarkupFile(this, model, skip_component_dir_creation)»<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:wicket>
	<body>
		<wicket:extend>
			«REM»TODO: Parte dimostrativa -> rimuovere«ENDREM»
	        <br/><br/>
	        <strong><span wicket:id="message">message will be here</span></strong>
	        <br/><br/>
	        
	        «REM»Espande i pannelli«ENDREM»
	        «LET this.panels AS currP»
		    «IF currP != null»
		    «EXPAND genPanelSetupMarkup FOR currP»
		    «ENDIF»
	        «ENDLET»
	        
		</wicket:extend>
	</body>
</html>
«ENDFILE»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) di un Panel Wicket«ENDREM»
«DEFINE panelMarkupFile(String panelName, boolean skip_component_dir_creation) FOR GUIModel»
«FILE getWicketPanelMarkupFile(panelName, this, skip_component_dir_creation)»<wicket:panel>
	<div class="«panelName»">
	«REM»TODO: questo è da RIFARE SICURAMENTE MEGLIO (usando i riferimenti giusti) e non la stringa«ENDREM»
	«IF panelName.matches("header")»
		«EXPAND getHeaderMarkup FOR this.structure.appWindow.header»
	«ELSEIF panelName.matches("menuBar")»
		«EXPAND getMenubarMarkup FOR this.structure.appWindow.appArea.menubar»
	«ELSEIF panelName.matches("footer")»
		«EXPAND getFooterMarkup FOR this.structure.appWindow.footer»
	«ENDIF»
	</div>
</wicket:panel>
«ENDFILE»
«ENDDEFINE»


«REM»Genera la componente di markup (HTML) della HEADER«ENDREM»
«DEFINE getHeaderMarkup FOR Header»
	<h1>QUESTA E' LA HEADER</h1>
«ENDDEFINE»

«REM»Genera la componente di markup (HTML) della MENUBAR«ENDREM»
«DEFINE getMenubarMarkup FOR Menubar»
<ul>
	«FOREACH this.topLevelMenu AS tlmenu»
	<li><span wicket:id="menu.«tlmenu.name»">«tlmenu.name»</span></li>
	<ul>
		«FOREACH tlmenu.item AS currMenuItem»
		«IF currMenuItem.eventHandler.eventType == EventTypes::CLICKED»
		«LET currMenuItem.eventHandler.action AS currAction»
		<li><a href="#" wicket:id="menu.items.«currMenuItem.name»">«currMenuItem.label»</a></li>
		«ENDLET»
		«ENDIF»
		«ENDFOREACH»
	</ul>
	«ENDFOREACH»
</ul>
«ENDDEFINE»

«REM»Genera la componente di markup (HTML) della FOOTER«ENDREM»
«DEFINE getFooterMarkup FOR Footer»
		<p>-- QUESTA E' LA FOOTER --</p>
		<p>
			Copyright &copy; 2008
			<a href="http://www.csi.it">CSI Piemonte</a> | Tutti i diritti riservati.
		</p>
		<p class="credits">
			Design by CSI Piemonte |
			<a href="http://validator.w3.org/check?uri=referer" title="Validate XHTML code"> XHTML 1.0</a> |
			<a href="http://jigsaw.w3.org/css-validator/" title="Validate CSS code">CSS 2.0</a>
		</p>
«ENDDEFINE»



«REM»Espande la componente di markup (HTML) dei pannelli.«ENDREM»
«DEFINE genPanelSetupMarkup FOR Panel»
	<!-- Aggiungo il pannello «this» -->
	«IF this.metaType == FormPanel»
		«REM»Al momento per semplificazione è stata fatta l'assunzione che FormPanel = form Wicket/HTML,
		e che all'interno di un Form NON ci sono sottopannelli. Bisogna chiarire come si vuole rendere
		i sottopannelli, ovvero come si vogliono raggruppare i componenti (con COMUNICAZIONE).«ENDREM»
		«EXPAND setupFormPanelMarkup FOR (FormPanel)this»
	«ELSEIF this.metaType == TabSetPanel»
		«EXPAND setupTabSetPanelMarkup FOR (TabSetPanel)this»
		«EXPAND genPanelSetupMarkup FOREACH ((TabSetPanel)this).tabs»
	«ELSEIF this.metaType == DialogPanel»
		«REM»TODO: Da definire cosa si intende per DialogPanel«ENDREM»
	«ENDIF»
«ENDDEFINE»


«REM»
Genera la componente di markup (HTML) di un FormPanel.
NOTA: per il momento per semplificare la generazione
      è stata fatta l'assunzione Form = form HTML/Wicket
«ENDREM»
«DEFINE setupFormPanelMarkup FOR FormPanel»
<form wicket:id="form.«name.toFirstUpper()»Form">
	<fieldset>
		<legend>«label.toUpperCase()»</legend>
			<span wicket:id="feedback">Messaggi di feedback</span>
			«FOREACH findAllWidgetsInPanel(this) AS currWidg»
			<p>
				«EXPAND createAndAddWidgetMarkup FOR (Widget)currWidg»
			</p>
			«ENDFOREACH»
	</fieldset>
</form>
«ENDDEFINE»


«REM»Crea la definizione di un TabSetPanel«ENDREM»
«DEFINE setupTabSetPanelMarkup FOR TabSetPanel»
	«REM»Può essere utilizzato il componente 
	org.apache.wicket.extensions.markup.html.tabs.TabbedPanel (wicket-extensions)
	Vedi: http://wicketstuff.org/wicket13/compref/?wicket:bookmarkablePage=:org.apache.wicket.examples.compref.TabbedPanelPage
	«ENDREM»
«ENDDEFINE»



«REM»Genera la componente Java di un Widget Wicket«ENDREM»
«DEFINE createAndAddWidgetMarkup FOR Widget»
	<!-- [GUIGEN] Crea il widget «this» -->

	«IF this.metaType == TextField»
		«REM»Crea un TextField«ENDREM»
		<label for="widg.«this.name»" class="left">«this.label»</label>
		<input type="text" name="widg.«this.name»" id="widg.«this.name»" class="field" value=""  
				«IF ((TextField)this).fieldLength != null»size="«((TextField)this).fieldLength»"«ENDIF» wicket:id="widg.«this.name»" />
	«ELSEIF this.metaType == TextArea»
		«REM»Crea una TextArea«ENDREM»
		<label for="widg.«this.name»" class="left">«this.label»</label>
		<textarea name="widg.«this.name»" id="widg.«this.name»" 
			«IF ((TextArea)this).rows != null»rows="«((TextArea)this).rows»"«ENDIF»
			«IF ((TextArea)this).columns != null»cols="«((TextArea)this).columns»"«ENDIF»
			wicket:id="widg.«this.name»"></textarea>
	«ELSEIF this.metaType == RadioButtons»	
		«REM»Crea dei radio button. TODO: implementare«ENDREM»

	«ELSEIF this.metaType == CheckBox»	
		«REM»Crea una CheckBox. TODO: implementare«ENDREM»
		<label for="widg.«this.name»" class="left">«this.label»</label>
		<input type="checkbox" name="widg.«this.name»" id="widg.«this.name»" class="checkbox" wicket:id="widg.«this.name»" />
	«ELSEIF this.metaType == ComboBox»
		«REM»Crea una ComboBox. 
		NOTA: ComboBox è stata per il momento interpretata come "lista a scelta singola" 
		e mappata con il widget WicketDropDownChoice«ENDREM»
		<label for="widg.«this.name»" class="left">«this.label»</label>
		<select name="widg.«this.name»" id="widg.«this.name»" class="combo" wicket:id="widg.«this.name»">
			<option></option>
		</select>
	«ELSEIF this.metaType == Button»
		«REM»Crea un pulsante (Button).«ENDREM»
		<button type="submit" name="widg.«this.name»" id="widg.«this.name»" class="button" >«this.label»</button>
	«ELSEIF this.metaType == ConfirmButton»
		«REM»Crea un pulsante di submit del form. NOTA: implementato per il momento SOLO in HTML«ENDREM»
		<input type="submit" name="widg.«this.name»" id="widg.«this.name»" class="button" value="«this.label»" />
	«ELSEIF this.metaType == ResetButton»
		«REM»Crea un pulsante di reset del form. NOTA: implementato per il momento SOLO in HTML«ENDREM»
		<input type="reset" name="widg.«this.name»" id="widg.«this.name»" class="button" value="«this.label»" />
	«ELSEIF this.metaType == Image»
		«REM»Crea una ComboBox. TODO: implementare«ENDREM»
	
	«ELSEIF this.metaType == Table»	
		«REM»Crea una Tabella. TODO: implementare«ENDREM»

	«ENDIF»

«ENDDEFINE»

