«IMPORT guigen»
«EXTENSION template::GenericExtensions»
«EXTENSION template::struts2::Struts2Extensions»
«EXTENSION template::fatjs::FatJSExtensions»
«EXTENSION template::uiprototype::FatClientPrototypeExtensions»


«REM»
Combobox di esempio 
«ENDREM»
«DEFINE widgetStruct(GUIModel model, ContentPanel cp) FOR TextField»
			new ExtCsi.ui.widgets.TextField(
				{
					«EXPAND template::fatjs::view::widgets::widgetCommonProperties(model) FOR this»,
					«EXPAND template::fatjs::view::widgets::dataWidgetProperties(model) FOR this»,
					«IF multiDataBinding!=null-»
					multiDataBinding: «EXPAND template::fatjs::view::widgets::databinding FOR this.multiDataBinding»,
					dataUrl: '«  getUrlWebDir(model)»«getDataDir()»/«cp.name»uno.html'
					«ELSE-»
					multiDataBinding: null
					«ENDIF-»,
					«EXPAND template::fatjs::view::widgets::eventHandlers(model, cp) FOR this»
				}
			)
«FILE getWebDir(model)+getDataDir()+"/"+cp.name+"uno.html"»
    struttura json widgetStruct 
«ENDFILE»			
«ENDDEFINE»


«DEFINE column(Table table, ContentPanel cp,GUIModel model) FOR Column»
						new ExtCsi.ui.widgets.table.Column(
						{
							label: «jsLiteralValue(label)»,
							editable: «jsLiteralValue(this.editable)»,
							sortable: «jsLiteralValue(sortable)»,
							tooltip: «jsLiteralValue(tooltip)»,
							selector: «jsLiteralValue(selector)»,
							«IF editable-»
							editableFlagSelector: «jsLiteralValue(editableFlagSelector)»,
							multidataPropertySelector: «jsLiteralValue(multidataPropertySelector)»,
							«IF multiDataBinding!=null-»
							multiDataBinding: «EXPAND template::fatjs::view::widgets::databinding FOR this.multiDataBinding»,
							multidataKeySelector: «jsLiteralValue(multidataKeySelector)»,
							multidataValueSelector: «jsLiteralValue(multidataValueSelector)»,
							dataUrl: '«getUrlWebDir(model)»«getDataDir()»/«cp.name»«table.name».html',
							«ENDIF-»
							«ENDIF-»
							«IF eventActive-»
							activeFlagSelector: «jsLiteralValue(activeFlagSelector)»,
							«ENDIF-»
							eventActive: «jsLiteralValue(this.eventActive)»
						}
						)
«FILE getWebDir(model)+getDataDir()+"/"+cp.name+table.name+".html"»
    struttura json column
«ENDFILE»						
«ENDDEFINE»


«DEFINE multidataWidgetProperties(GUIModel model, ContentPanel cp) FOR MultiDataWidget-»
	«IF multiDataBinding!=null-»
					multiDataBinding: «EXPAND template::fatjs::view::widgets::databinding FOR this.multiDataBinding»,
					dataUrl: '«getUrlWebDir(model)»«getDataDir()»/«cp.name».html'
	«ELSE-»
					multiDataBinding: null
	«ENDIF-»
«FILE getWebDir(model)+getDataDir()+"/"+cp.name+".html"»
    struttura json multidataWidgetProperties
«ENDFILE»	
«ENDDEFINE»



«REM»
Creazione File di Progetto da importare in Eclipse
«ENDREM»

«DEFINE projectFileWork FOR GUIModel»
«FILE ".project"»<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name></name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.wst.jsdt.core.javascriptValidator</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.project.facet.core.builder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
		<nature>org.eclipse.wst.jsdt.core.jsNature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
	</natures>
</projectDescription>
«ENDFILE»
«ENDDEFINE»

